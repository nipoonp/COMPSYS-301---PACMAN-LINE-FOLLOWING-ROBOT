ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	rx_flag
  69              		.type	rx_flag, %object
  70              		.size	rx_flag, 1
  71              	rx_flag:
  72 000e 00       		.space	1
  73              		.global	flag_rx
  74              		.type	flag_rx, %object
  75              		.size	flag_rx, 1
  76              	flag_rx:
  77 000f 00       		.space	1
  78              		.global	flag_packet
  79              		.type	flag_packet, %object
  80              		.size	flag_packet, 1
  81              	flag_packet:
  82 0010 00       		.space	1
  83              		.global	flag_KB_string
  84              		.type	flag_KB_string, %object
  85              		.size	flag_KB_string, 1
  86              	flag_KB_string:
  87 0011 00       		.space	1
  88              		.global	dataready_flag
  89              		.type	dataready_flag, %object
  90              		.size	dataready_flag, 1
  91              	dataready_flag:
  92 0012 00       		.space	1
  93              		.global	timerOverflow_flag
  94              		.type	timerOverflow_flag, %object
  95              		.size	timerOverflow_flag, 1
  96              	timerOverflow_flag:
  97 0013 00       		.space	1
  98              		.global	flag_rf_transmission_active
  99              		.data
 100              		.type	flag_rf_transmission_active, %object
 101              		.size	flag_rf_transmission_active, 1
 102              	flag_rf_transmission_active:
 103 0000 0A       		.byte	10
 104              		.global	adcvalue
 105              		.bss
 106              		.align	2
 107              		.type	adcvalue, %object
 108              		.size	adcvalue, 16
 109              	adcvalue:
 110 0014 00000000 		.space	16
 110      00000000 
 110      00000000 
 110      00000000 
 111              		.global	displaystring
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 3


 112              		.data
 113 0001 000000   		.align	2
 114              		.type	displaystring, %object
 115              		.size	displaystring, 64
 116              	displaystring:
 117 0004 43533330 		.ascii	"CS301 2016\012\000"
 117      31203230 
 117      31360A00 
 118 0010 00000000 		.space	52
 118      00000000 
 118      00000000 
 118      00000000 
 118      00000000 
 119              		.comm	line,64,4
 120              		.comm	entry,64,4
 121              		.comm	usbBuffer,64,4
 122              		.comm	system_state,32,4
 123              		.global	PWMPower
 124              		.type	PWMPower, %object
 125              		.size	PWMPower, 1
 126              	PWMPower:
 127 0044 9E       		.byte	-98
 128              		.global	turnConstant
 129              		.type	turnConstant, %object
 130              		.size	turnConstant, 1
 131              	turnConstant:
 132 0045 28       		.byte	40
 133              		.global	speedCounter
 134              		.bss
 135              		.align	2
 136              		.type	speedCounter, %object
 137              		.size	speedCounter, 4
 138              	speedCounter:
 139 0024 00000000 		.space	4
 140              		.global	prevQuadReading
 141              		.align	2
 142              		.type	prevQuadReading, %object
 143              		.size	prevQuadReading, 4
 144              	prevQuadReading:
 145 0028 00000000 		.space	4
 146              		.global	spd
 147              		.align	2
 148              		.type	spd, %object
 149              		.size	spd, 4
 150              	spd:
 151 002c 00000000 		.space	4
 152              		.global	goalSpeed
 153              		.data
 154 0046 0000     		.align	2
 155              		.type	goalSpeed, %object
 156              		.size	goalSpeed, 4
 157              	goalSpeed:
 158 0048 0F000000 		.word	15
 159              		.global	RFStopValue
 160              		.align	2
 161              		.type	RFStopValue, %object
 162              		.size	RFStopValue, 4
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 4


 163              	RFStopValue:
 164 004c CA000000 		.word	202
 165              		.global	speedFlag
 166              		.bss
 167              		.align	2
 168              		.type	speedFlag, %object
 169              		.size	speedFlag, 4
 170              	speedFlag:
 171 0030 00000000 		.space	4
 172              		.global	goalQuad
 173              		.data
 174              		.align	2
 175              		.type	goalQuad, %object
 176              		.size	goalQuad, 4
 177              	goalQuad:
 178 0050 67020000 		.word	615
 179              		.global	rxdata
 180              		.bss
 181              		.type	rxdata, %object
 182              		.size	rxdata, 1
 183              	rxdata:
 184 0034 00       		.space	1
 185              		.global	counter
 186 0035 00       		.align	1
 187              		.type	counter, %object
 188              		.size	counter, 2
 189              	counter:
 190 0036 0000     		.space	2
 191              		.global	datastring
 192              		.align	2
 193              		.type	datastring, %object
 194              		.size	datastring, 99
 195              	datastring:
 196 0038 00000000 		.space	99
 196      00000000 
 196      00000000 
 196      00000000 
 196      00000000 
 197              		.global	initcounter
 198              		.data
 199              		.align	2
 200              		.type	initcounter, %object
 201              		.size	initcounter, 4
 202              	initcounter:
 203 0054 7F000000 		.word	127
 204              		.global	init
 205              		.align	2
 206              		.type	init, %object
 207              		.size	init, 4
 208              	init:
 209 0058 01000000 		.word	1
 210              		.comm	str,100,4
 211              		.global	asciiValue
 212              		.bss
 213 009b 00       		.align	2
 214              		.type	asciiValue, %object
 215              		.size	asciiValue, 4
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 5


 216              	asciiValue:
 217 009c 00000000 		.space	4
 218              		.global	packetCntr
 219              		.align	2
 220              		.type	packetCntr, %object
 221              		.size	packetCntr, 4
 222              	packetCntr:
 223 00a0 00000000 		.space	4
 224              		.global	locationArray
 225              		.align	2
 226              		.type	locationArray, %object
 227              		.size	locationArray, 10
 228              	locationArray:
 229 00a4 00000000 		.space	10
 229      00000000 
 229      0000
 230              		.global	locationArrayCntr
 231 00ae 0000     		.align	2
 232              		.type	locationArrayCntr, %object
 233              		.size	locationArrayCntr, 4
 234              	locationArrayCntr:
 235 00b0 00000000 		.space	4
 236              		.global	locationTemp
 237              		.align	2
 238              		.type	locationTemp, %object
 239              		.size	locationTemp, 4
 240              	locationTemp:
 241 00b4 00000000 		.space	4
 242              		.global	negate
 243              		.align	2
 244              		.type	negate, %object
 245              		.size	negate, 4
 246              	negate:
 247 00b8 00000000 		.space	4
 248              		.comm	robotLocation,32,4
 249              		.comm	i,4,4
 250              		.global	firstCounter
 251              		.align	2
 252              		.type	firstCounter, %object
 253              		.size	firstCounter, 4
 254              	firstCounter:
 255 00bc 00000000 		.space	4
 256              		.global	firstx
 257              		.align	2
 258              		.type	firstx, %object
 259              		.size	firstx, 4
 260              	firstx:
 261 00c0 00000000 		.space	4
 262              		.global	firsty
 263              		.align	2
 264              		.type	firsty, %object
 265              		.size	firsty, 4
 266              	firsty:
 267 00c4 00000000 		.space	4
 268              		.global	firstAngle
 269              		.align	2
 270              		.type	firstAngle, %object
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 6


 271              		.size	firstAngle, 4
 272              	firstAngle:
 273 00c8 00000000 		.space	4
 274              		.global	firstinit
 275              		.align	2
 276              		.type	firstinit, %object
 277              		.size	firstinit, 4
 278              	firstinit:
 279 00cc 00000000 		.space	4
 280              		.global	newx
 281              		.align	2
 282              		.type	newx, %object
 283              		.size	newx, 4
 284              	newx:
 285 00d0 00000000 		.space	4
 286              		.global	newy
 287              		.align	2
 288              		.type	newy, %object
 289              		.size	newy, 4
 290              	newy:
 291 00d4 00000000 		.space	4
 292              		.global	newAngle
 293              		.align	2
 294              		.type	newAngle, %object
 295              		.size	newAngle, 4
 296              	newAngle:
 297 00d8 00000000 		.space	4
 298              		.comm	ADC_result0,2,2
 299              		.comm	ADC_result1,2,2
 300              		.comm	ADC_result2,2,2
 301              		.comm	ADC_result3,2,2
 302              		.comm	ADC_result4,2,2
 303              		.comm	ADC_result5,2,2
 304              		.comm	ADC_result6,2,2
 305              		.comm	result0,2,2
 306              		.comm	result1,2,2
 307              		.comm	result2,2,2
 308              		.comm	result3,2,2
 309              		.comm	result4,2,2
 310              		.comm	result5,2,2
 311              		.comm	result6,2,2
 312              		.comm	counter0,2,2
 313              		.comm	counter1,2,2
 314              		.comm	counter2,2,2
 315              		.comm	counter3,2,2
 316              		.comm	counter4,2,2
 317              		.comm	counter5,2,2
 318              		.global	counter6
 319              		.align	1
 320              		.type	counter6, %object
 321              		.size	counter6, 2
 322              	counter6:
 323 00dc 0000     		.space	2
 324              		.comm	sensorLogic0,1,1
 325              		.comm	sensorLogic1,1,1
 326              		.comm	sensorLogic2,1,1
 327              		.comm	sensorLogic3,1,1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 7


 328              		.comm	sensorLogic4,1,1
 329              		.comm	sensorLogic5,1,1
 330              		.global	sensorLogic6
 331              		.type	sensorLogic6, %object
 332              		.size	sensorLogic6, 1
 333              	sensorLogic6:
 334 00de 00       		.space	1
 335              		.section	.text.main,"ax",%progbits
 336              		.align	2
 337              		.global	main
 338              		.thumb
 339              		.thumb_func
 340              		.type	main, %function
 341              	main:
 342              	.LFB63:
 343              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * Fully working code: 
   3:.\main.c      ****  * PWM      : 
   4:.\main.c      ****  * Encoder  : 
   5:.\main.c      ****  * ADC      :
   6:.\main.c      ****  * USB      : port displays speed and position.
   7:.\main.c      ****  * CMD: "PW xx"
   8:.\main.c      ****  * Copyright Univ of Auckland, 2016
   9:.\main.c      ****  * All Rights Reserved
  10:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:.\main.c      ****  *
  12:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:.\main.c      ****  *
  15:.\main.c      ****  * ========================================
  16:.\main.c      ****  */
  17:.\main.c      **** #include <stdio.h>
  18:.\main.c      **** #include <string.h>
  19:.\main.c      **** #include <stdlib.h>
  20:.\main.c      **** #include <project.h>
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** #include "defines.h"
  23:.\main.c      **** #include "vars.h"
  24:.\main.c      **** //* ========================================
  25:.\main.c      ****  void usbPutString(char *s);
  26:.\main.c      ****  void usbPutChar(char c);
  27:.\main.c      ****  void handle_usb();
  28:.\main.c      ****  void turnRight();
  29:.\main.c      ****  void turnLeft();
  30:.\main.c      ****  void stop();
  31:.\main.c      ****  void readADC();
  32:.\main.c      ****  void readADC0();
  33:.\main.c      ****  void readADC1();
  34:.\main.c      ****  void readADC2();
  35:.\main.c      ****  void readADC3();
  36:.\main.c      ****  void readADC4();
  37:.\main.c      ****  void readADC5();
  38:.\main.c      ****  void readADC6();
  39:.\main.c      ****  void receiveRX();
  40:.\main.c      ****  void initRamp();
  41:.\main.c      **** void techTest2RF();
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 8


  42:.\main.c      **** void techTest2RF1();
  43:.\main.c      **** void techTest2RF2();
  44:.\main.c      **** void techTest2RF3();
  45:.\main.c      **** void techTest2RF4();
  46:.\main.c      **** void simpleCarControl();
  47:.\main.c      **** void techTest2Sensor();
  48:.\main.c      **** 
  49:.\main.c      ****  int get_average_position();
  50:.\main.c      ****  void stopAfterX(int quadAverage, int quadGoal);
  51:.\main.c      ****  int getSpeed();
  52:.\main.c      ****  void incrementQuadGoal();
  53:.\main.c      ****  void setSpeed(int spd, int goalSpeed);
  54:.\main.c      **** 
  55:.\main.c      **** //* ========================================
  56:.\main.c      **** 
  57:.\main.c      ****  uint8 PWMPower = 158;
  58:.\main.c      **** 
  59:.\main.c      ****  uint8 turnConstant = 40;
  60:.\main.c      **** 
  61:.\main.c      ****  int speedCounter = 0;
  62:.\main.c      **** 
  63:.\main.c      ****  int prevQuadReading = 0;
  64:.\main.c      ****  int spd = 0;
  65:.\main.c      **** 
  66:.\main.c      **** 
  67:.\main.c      **** //------------------- INIT ---------------------------
  68:.\main.c      ****  int goalSpeed = 15;
  69:.\main.c      **** 
  70:.\main.c      **** //RF--------------------
  71:.\main.c      **** int RFStopValue = 202; //(1024/2.58)*distance in m, * by 1.02
  72:.\main.c      **** int speedFlag = 0;
  73:.\main.c      **** 
  74:.\main.c      **** //Sensor----------------
  75:.\main.c      **** //int distance = 1000; //change this constant, in mm
  76:.\main.c      **** int goalQuad = 615; //(57*4)*(distance/194.68); //factor of 1.03 distance in mm when speed is 15, 1
  77:.\main.c      **** 
  78:.\main.c      **** //------------------- INIT ---------------------------
  79:.\main.c      **** 
  80:.\main.c      **** //rf variables
  81:.\main.c      ****  volatile uint8 rxdata = 0;
  82:.\main.c      ****  volatile uint16 counter = 0;
  83:.\main.c      ****  volatile uint8 datastring[99] = {};
  84:.\main.c      **** 
  85:.\main.c      **** int initcounter = 127;
  86:.\main.c      **** int init = 1;
  87:.\main.c      **** 
  88:.\main.c      ****  char str[100];
  89:.\main.c      ****  int asciiValue = 0;
  90:.\main.c      ****  int packetCntr = 0;
  91:.\main.c      ****  char locationArray[10] = {0};
  92:.\main.c      ****  int locationArrayCntr = 0;
  93:.\main.c      ****  int locationTemp = 0;
  94:.\main.c      ****  int negate = 0;
  95:.\main.c      ****  vtype1 robotLocation;
  96:.\main.c      ****  int i;
  97:.\main.c      **** 
  98:.\main.c      **** int firstCounter = 0;
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 9


  99:.\main.c      **** int firstx = 0;
 100:.\main.c      **** int firsty = 0;
 101:.\main.c      **** int firstAngle = 0;
 102:.\main.c      **** int firstinit = 0;
 103:.\main.c      **** int newx = 0;
 104:.\main.c      **** int newy = 0;
 105:.\main.c      **** int newAngle = 0;
 106:.\main.c      **** 
 107:.\main.c      **** 
 108:.\main.c      ****  uint16 ADC_result0, ADC_result1, ADC_result2, ADC_result3, ADC_result4,
 109:.\main.c      ****  ADC_result5, ADC_result6;
 110:.\main.c      ****  uint16 result0, result1, result2, result3, result4, result5, result6;
 111:.\main.c      ****  uint16 counter0, counter1, counter2, counter3, counter4, counter5, counter6 = 0;
 112:.\main.c      **** 
 113:.\main.c      ****  typedef enum {
 114:.\main.c      ****     false, true}bool;
 115:.\main.c      ****     bool sensorLogic0, sensorLogic1, sensorLogic2, sensorLogic3, sensorLogic4,
 116:.\main.c      ****     sensorLogic5, sensorLogic6 = false;
 117:.\main.c      **** 
 118:.\main.c      **** 
 119:.\main.c      ****     int main() {
 344              		.loc 1 119 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 120:.\main.c      **** // --------------------------------    
 121:.\main.c      **** // ----- INITIALIZATIONS ----------
 122:.\main.c      **** 
 123:.\main.c      ****         CYGlobalIntEnable;
 354              		.loc 1 123 0
 355              	@ 123 ".\main.c" 1
 356 0004 62B6     		CPSIE   i
 357              	@ 0 "" 2
 124:.\main.c      ****         
 125:.\main.c      **** PWM_1_Start();
 358              		.loc 1 125 0
 359              		.thumb
 360 0006 FFF7FEFF 		bl	PWM_1_Start
 126:.\main.c      **** PWM_2_Start();
 361              		.loc 1 126 0
 362 000a FFF7FEFF 		bl	PWM_2_Start
 127:.\main.c      **** M1_EN_Write(1);
 363              		.loc 1 127 0
 364 000e 0120     		movs	r0, #1
 365 0010 FFF7FEFF 		bl	M1_EN_Write
 128:.\main.c      **** M2_EN_Write(1);
 366              		.loc 1 128 0
 367 0014 0120     		movs	r0, #1
 368 0016 FFF7FEFF 		bl	M2_EN_Write
 129:.\main.c      **** M1_D2_Write(1);
 369              		.loc 1 129 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 10


 370 001a 0120     		movs	r0, #1
 371 001c FFF7FEFF 		bl	M1_D2_Write
 130:.\main.c      **** M2_D2_Write(1);
 372              		.loc 1 130 0
 373 0020 0120     		movs	r0, #1
 374 0022 FFF7FEFF 		bl	M2_D2_Write
 131:.\main.c      **** 
 132:.\main.c      **** PWM_1_WriteCompare(PWMPower);
 375              		.loc 1 132 0
 376 0026 1B4B     		ldr	r3, .L4
 377 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 378 002a 1846     		mov	r0, r3
 379 002c FFF7FEFF 		bl	PWM_1_WriteCompare
 133:.\main.c      **** PWM_2_WriteCompare(PWMPower);
 380              		.loc 1 133 0
 381 0030 184B     		ldr	r3, .L4
 382 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 383 0034 1846     		mov	r0, r3
 384 0036 FFF7FEFF 		bl	PWM_2_WriteCompare
 134:.\main.c      **** 
 135:.\main.c      **** 
 136:.\main.c      **** ADC_Start();
 385              		.loc 1 136 0
 386 003a FFF7FEFF 		bl	ADC_Start
 137:.\main.c      **** ADC_StartConvert();
 387              		.loc 1 137 0
 388 003e FFF7FEFF 		bl	ADC_StartConvert
 138:.\main.c      **** isr_eoc_Start();
 389              		.loc 1 138 0
 390 0042 FFF7FEFF 		bl	isr_eoc_Start
 139:.\main.c      **** 
 140:.\main.c      **** QuadDec_M1_Start();
 391              		.loc 1 140 0
 392 0046 FFF7FEFF 		bl	QuadDec_M1_Start
 141:.\main.c      **** QuadDec_M2_Start();
 393              		.loc 1 141 0
 394 004a FFF7FEFF 		bl	QuadDec_M2_Start
 142:.\main.c      **** QuadDec_M1_SetCounter(0);
 395              		.loc 1 142 0
 396 004e 0020     		movs	r0, #0
 397 0050 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 143:.\main.c      **** QuadDec_M2_SetCounter(0);
 398              		.loc 1 143 0
 399 0054 0020     		movs	r0, #0
 400 0056 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 144:.\main.c      **** 
 145:.\main.c      **** Timer_TS_Start();
 401              		.loc 1 145 0
 402 005a FFF7FEFF 		bl	Timer_TS_Start
 146:.\main.c      **** isr_TS_Start();
 403              		.loc 1 146 0
 404 005e FFF7FEFF 		bl	isr_TS_Start
 147:.\main.c      **** 
 148:.\main.c      **** // ------USB SETUP ----------------    
 149:.\main.c      **** #ifdef USE_USB    
 150:.\main.c      **** USBUART_Start(0,USBUART_5V_OPERATION);
 151:.\main.c      **** #endif     
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 11


 152:.\main.c      **** RF_BT_SELECT_Write(0);
 405              		.loc 1 152 0
 406 0062 0020     		movs	r0, #0
 407 0064 FFF7FEFF 		bl	RF_BT_SELECT_Write
 153:.\main.c      **** isrRF_RX_Start();
 408              		.loc 1 153 0
 409 0068 FFF7FEFF 		bl	isrRF_RX_Start
 154:.\main.c      **** UART_Start();
 410              		.loc 1 154 0
 411 006c FFF7FEFF 		bl	UART_Start
 155:.\main.c      **** 
 156:.\main.c      **** usbPutString (displaystring);
 412              		.loc 1 156 0
 413 0070 0948     		ldr	r0, .L4+4
 414 0072 FFF7FEFF 		bl	usbPutString
 415              	.L3:
 157:.\main.c      **** 
 158:.\main.c      **** for (;;) {
 159:.\main.c      ****     
 160:.\main.c      ****     //techTest2Sensor();
 161:.\main.c      ****     
 162:.\main.c      ****     techTest2RF();
 416              		.loc 1 162 0
 417 0076 FFF7FEFF 		bl	techTest2RF
 163:.\main.c      ****     
 164:.\main.c      ****     
 165:.\main.c      ****     
 166:.\main.c      **** 
 167:.\main.c      **** 
 168:.\main.c      ****     
 169:.\main.c      ****     
 170:.\main.c      ****     
 171:.\main.c      ****     
 172:.\main.c      **** 
 173:.\main.c      ****     /* Place your application code here. */
 174:.\main.c      ****     handle_usb();
 418              		.loc 1 174 0
 419 007a FFF7FEFF 		bl	handle_usb
 175:.\main.c      ****     if (flag_KB_string == 1) {
 420              		.loc 1 175 0
 421 007e 074B     		ldr	r3, .L4+8
 422 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 423 0082 012B     		cmp	r3, #1
 424 0084 05D1     		bne	.L2
 176:.\main.c      ****         usbPutString (line);
 425              		.loc 1 176 0
 426 0086 0648     		ldr	r0, .L4+12
 427 0088 FFF7FEFF 		bl	usbPutString
 177:.\main.c      ****         flag_KB_string = 0;
 428              		.loc 1 177 0
 429 008c 034B     		ldr	r3, .L4+8
 430 008e 0022     		movs	r2, #0
 431 0090 1A70     		strb	r2, [r3]
 432              	.L2:
 178:.\main.c      ****     }
 179:.\main.c      **** 
 180:.\main.c      **** }
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 12


 433              		.loc 1 180 0
 434 0092 F0E7     		b	.L3
 435              	.L5:
 436              		.align	2
 437              	.L4:
 438 0094 00000000 		.word	PWMPower
 439 0098 00000000 		.word	displaystring
 440 009c 00000000 		.word	flag_KB_string
 441 00a0 00000000 		.word	line
 442              		.cfi_endproc
 443              	.LFE63:
 444              		.size	main, .-main
 445              		.section	.text.techTest2Sensor,"ax",%progbits
 446              		.align	2
 447              		.global	techTest2Sensor
 448              		.thumb
 449              		.thumb_func
 450              		.type	techTest2Sensor, %function
 451              	techTest2Sensor:
 452              	.LFB64:
 181:.\main.c      **** }
 182:.\main.c      **** 
 183:.\main.c      **** void techTest2Sensor(){
 453              		.loc 1 183 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457 0000 80B5     		push	{r7, lr}
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 00AF     		add	r7, sp, #0
 462              		.cfi_def_cfa_register 7
 184:.\main.c      ****     stopAfterX(get_average_position(),goalQuad);
 463              		.loc 1 184 0
 464 0004 FFF7FEFF 		bl	get_average_position
 465 0008 0246     		mov	r2, r0
 466 000a 0A4B     		ldr	r3, .L7
 467 000c 1B68     		ldr	r3, [r3]
 468 000e 1046     		mov	r0, r2
 469 0010 1946     		mov	r1, r3
 470 0012 FFF7FEFF 		bl	stopAfterX
 185:.\main.c      ****     setSpeed(getSpeed(),goalSpeed);
 471              		.loc 1 185 0
 472 0016 FFF7FEFF 		bl	getSpeed
 473 001a 0246     		mov	r2, r0
 474 001c 064B     		ldr	r3, .L7+4
 475 001e 1B68     		ldr	r3, [r3]
 476 0020 1046     		mov	r0, r2
 477 0022 1946     		mov	r1, r3
 478 0024 FFF7FEFF 		bl	setSpeed
 186:.\main.c      **** 	readADC();
 479              		.loc 1 186 0
 480 0028 FFF7FEFF 		bl	readADC
 187:.\main.c      ****     simpleCarControl(); 
 481              		.loc 1 187 0
 482 002c FFF7FEFF 		bl	simpleCarControl
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 13


 188:.\main.c      **** }
 483              		.loc 1 188 0
 484 0030 80BD     		pop	{r7, pc}
 485              	.L8:
 486 0032 00BF     		.align	2
 487              	.L7:
 488 0034 00000000 		.word	goalQuad
 489 0038 00000000 		.word	goalSpeed
 490              		.cfi_endproc
 491              	.LFE64:
 492              		.size	techTest2Sensor, .-techTest2Sensor
 493              		.section	.text.techTest2RF,"ax",%progbits
 494              		.align	2
 495              		.global	techTest2RF
 496              		.thumb
 497              		.thumb_func
 498              		.type	techTest2RF, %function
 499              	techTest2RF:
 500              	.LFB65:
 189:.\main.c      ****   
 190:.\main.c      **** 
 191:.\main.c      **** 
 192:.\main.c      **** void techTest2RF(){
 501              		.loc 1 192 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 193:.\main.c      ****     
 194:.\main.c      ****     setSpeed(getSpeed(), goalSpeed);
 511              		.loc 1 194 0
 512 0004 FFF7FEFF 		bl	getSpeed
 513 0008 0246     		mov	r2, r0
 514 000a 384B     		ldr	r3, .L14
 515 000c 1B68     		ldr	r3, [r3]
 516 000e 1046     		mov	r0, r2
 517 0010 1946     		mov	r1, r3
 518 0012 FFF7FEFF 		bl	setSpeed
 195:.\main.c      ****     receiveRX();
 519              		.loc 1 195 0
 520 0016 FFF7FEFF 		bl	receiveRX
 196:.\main.c      ****         
 197:.\main.c      ****     if (firstinit == 1){
 521              		.loc 1 197 0
 522 001a 354B     		ldr	r3, .L14+4
 523 001c 1B68     		ldr	r3, [r3]
 524 001e 012B     		cmp	r3, #1
 525 0020 63D1     		bne	.L9
 198:.\main.c      ****         
 199:.\main.c      ****         
 200:.\main.c      ****         if ((firstAngle >= 0) && (firstAngle < 900)){
 526              		.loc 1 200 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 14


 527 0022 344B     		ldr	r3, .L14+8
 528 0024 1B68     		ldr	r3, [r3]
 529 0026 002B     		cmp	r3, #0
 530 0028 13DB     		blt	.L11
 531              		.loc 1 200 0 is_stmt 0 discriminator 1
 532 002a 324B     		ldr	r3, .L14+8
 533 002c 1B68     		ldr	r3, [r3]
 534 002e B3F5617F 		cmp	r3, #900
 535 0032 0EDA     		bge	.L11
 201:.\main.c      ****             LED0_Write(1);
 536              		.loc 1 201 0 is_stmt 1
 537 0034 0120     		movs	r0, #1
 538 0036 FFF7FEFF 		bl	LED0_Write
 202:.\main.c      ****              LED1_Write(0);
 539              		.loc 1 202 0
 540 003a 0020     		movs	r0, #0
 541 003c FFF7FEFF 		bl	LED1_Write
 203:.\main.c      ****              LED2_Write(0);
 542              		.loc 1 203 0
 543 0040 0020     		movs	r0, #0
 544 0042 FFF7FEFF 		bl	LED2_Write
 204:.\main.c      ****              LED3_Write(0);
 545              		.loc 1 204 0
 546 0046 0020     		movs	r0, #0
 547 0048 FFF7FEFF 		bl	LED3_Write
 205:.\main.c      ****             techTest2RF1();
 548              		.loc 1 205 0
 549 004c FFF7FEFF 		bl	techTest2RF1
 550 0050 4BE0     		b	.L9
 551              	.L11:
 206:.\main.c      ****         } else if ((firstAngle >= 900) && (firstAngle < 1800)){
 552              		.loc 1 206 0
 553 0052 284B     		ldr	r3, .L14+8
 554 0054 1B68     		ldr	r3, [r3]
 555 0056 B3F5617F 		cmp	r3, #900
 556 005a 13DB     		blt	.L12
 557              		.loc 1 206 0 is_stmt 0 discriminator 1
 558 005c 254B     		ldr	r3, .L14+8
 559 005e 1B68     		ldr	r3, [r3]
 560 0060 B3F5E16F 		cmp	r3, #1800
 561 0064 0EDA     		bge	.L12
 207:.\main.c      ****             LED0_Write(0);
 562              		.loc 1 207 0 is_stmt 1
 563 0066 0020     		movs	r0, #0
 564 0068 FFF7FEFF 		bl	LED0_Write
 208:.\main.c      ****              LED1_Write(1);
 565              		.loc 1 208 0
 566 006c 0120     		movs	r0, #1
 567 006e FFF7FEFF 		bl	LED1_Write
 209:.\main.c      ****              LED2_Write(0);
 568              		.loc 1 209 0
 569 0072 0020     		movs	r0, #0
 570 0074 FFF7FEFF 		bl	LED2_Write
 210:.\main.c      ****              LED3_Write(0);
 571              		.loc 1 210 0
 572 0078 0020     		movs	r0, #0
 573 007a FFF7FEFF 		bl	LED3_Write
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 15


 211:.\main.c      ****              techTest2RF2();
 574              		.loc 1 211 0
 575 007e FFF7FEFF 		bl	techTest2RF2
 576 0082 32E0     		b	.L9
 577              	.L12:
 212:.\main.c      ****         } else if ((firstAngle >= 1800) && (firstAngle < 2700)){
 578              		.loc 1 212 0
 579 0084 1B4B     		ldr	r3, .L14+8
 580 0086 1B68     		ldr	r3, [r3]
 581 0088 B3F5E16F 		cmp	r3, #1800
 582 008c 14DB     		blt	.L13
 583              		.loc 1 212 0 is_stmt 0 discriminator 1
 584 008e 194B     		ldr	r3, .L14+8
 585 0090 1B68     		ldr	r3, [r3]
 586 0092 40F68B22 		movw	r2, #2699
 587 0096 9342     		cmp	r3, r2
 588 0098 0EDC     		bgt	.L13
 213:.\main.c      ****             LED0_Write(0);
 589              		.loc 1 213 0 is_stmt 1
 590 009a 0020     		movs	r0, #0
 591 009c FFF7FEFF 		bl	LED0_Write
 214:.\main.c      ****              LED1_Write(0);
 592              		.loc 1 214 0
 593 00a0 0020     		movs	r0, #0
 594 00a2 FFF7FEFF 		bl	LED1_Write
 215:.\main.c      ****              LED2_Write(1);
 595              		.loc 1 215 0
 596 00a6 0120     		movs	r0, #1
 597 00a8 FFF7FEFF 		bl	LED2_Write
 216:.\main.c      ****              LED3_Write(0);
 598              		.loc 1 216 0
 599 00ac 0020     		movs	r0, #0
 600 00ae FFF7FEFF 		bl	LED3_Write
 217:.\main.c      ****              techTest2RF3();
 601              		.loc 1 217 0
 602 00b2 FFF7FEFF 		bl	techTest2RF3
 603 00b6 18E0     		b	.L9
 604              	.L13:
 218:.\main.c      ****         } else if ((firstAngle >= 2700) && (firstAngle < 3600)){
 605              		.loc 1 218 0
 606 00b8 0E4B     		ldr	r3, .L14+8
 607 00ba 1B68     		ldr	r3, [r3]
 608 00bc 40F68B22 		movw	r2, #2699
 609 00c0 9342     		cmp	r3, r2
 610 00c2 12DD     		ble	.L9
 611              		.loc 1 218 0 is_stmt 0 discriminator 1
 612 00c4 0B4B     		ldr	r3, .L14+8
 613 00c6 1B68     		ldr	r3, [r3]
 614 00c8 B3F5616F 		cmp	r3, #3600
 615 00cc 0DDA     		bge	.L9
 219:.\main.c      ****             LED0_Write(0);
 616              		.loc 1 219 0 is_stmt 1
 617 00ce 0020     		movs	r0, #0
 618 00d0 FFF7FEFF 		bl	LED0_Write
 220:.\main.c      ****              LED1_Write(0);
 619              		.loc 1 220 0
 620 00d4 0020     		movs	r0, #0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 16


 621 00d6 FFF7FEFF 		bl	LED1_Write
 221:.\main.c      ****              LED2_Write(0);
 622              		.loc 1 221 0
 623 00da 0020     		movs	r0, #0
 624 00dc FFF7FEFF 		bl	LED2_Write
 222:.\main.c      ****              LED3_Write(1);
 625              		.loc 1 222 0
 626 00e0 0120     		movs	r0, #1
 627 00e2 FFF7FEFF 		bl	LED3_Write
 223:.\main.c      ****              techTest2RF4();
 628              		.loc 1 223 0
 629 00e6 FFF7FEFF 		bl	techTest2RF4
 630              	.L9:
 224:.\main.c      ****         }
 225:.\main.c      ****     }  
 226:.\main.c      **** }
 631              		.loc 1 226 0
 632 00ea 80BD     		pop	{r7, pc}
 633              	.L15:
 634              		.align	2
 635              	.L14:
 636 00ec 00000000 		.word	goalSpeed
 637 00f0 00000000 		.word	firstinit
 638 00f4 00000000 		.word	firstAngle
 639              		.cfi_endproc
 640              	.LFE65:
 641              		.size	techTest2RF, .-techTest2RF
 642              		.section	.text.techTest2RF1,"ax",%progbits
 643              		.align	2
 644              		.global	techTest2RF1
 645              		.thumb
 646              		.thumb_func
 647              		.type	techTest2RF1, %function
 648              	techTest2RF1:
 649              	.LFB66:
 227:.\main.c      **** //void techTest2RF(){
 228:.\main.c      **** //    
 229:.\main.c      **** //        receiveRX();
 230:.\main.c      **** //        
 231:.\main.c      **** //        setSpeed(getSpeed(), goalSpeed);
 232:.\main.c      **** //        
 233:.\main.c      **** //        if (firstinit == 1){
 234:.\main.c      **** //            newx = robotLocation.robot_xpos - firstx;
 235:.\main.c      **** //            newy = robotLocation.robot_ypos - firsty;
 236:.\main.c      **** //
 237:.\main.c      **** //            if (newx > RFStopValue){
 238:.\main.c      **** //                stop();
 239:.\main.c      **** //                while(1);   
 240:.\main.c      **** //            }
 241:.\main.c      **** //            
 242:.\main.c      **** //            //car gone right so curve left
 243:.\main.c      **** //            if (newy > 2) {
 244:.\main.c      **** //                if (((1800-robotLocation.robot_orientation)/10) < 10){
 245:.\main.c      **** //                    PWM_1_WriteCompare(PWMPower+1+((1800-robotLocation.robot_orientation)/10));
 246:.\main.c      **** //                    PWM_2_WriteCompare(PWMPower);
 247:.\main.c      **** //                } else {
 248:.\main.c      **** //                    PWM_1_WriteCompare(PWMPower+1+10);
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 17


 249:.\main.c      **** //                    PWM_2_WriteCompare(PWMPower);
 250:.\main.c      **** //                }
 251:.\main.c      **** //            
 252:.\main.c      **** //                while (newy < 0){
 253:.\main.c      **** //                    receiveRX();
 254:.\main.c      **** //                    newx = robotLocation.robot_xpos - firstx;
 255:.\main.c      **** //                    newy = robotLocation.robot_ypos - firsty;
 256:.\main.c      **** //                    
 257:.\main.c      **** //                    if (newx > RFStopValue){
 258:.\main.c      **** //                        stop();
 259:.\main.c      **** //                        while(1);   
 260:.\main.c      **** //                    }
 261:.\main.c      **** //                }
 262:.\main.c      **** //            //car gone left so curve right
 263:.\main.c      **** //            } else if (newy < -2){
 264:.\main.c      **** //                
 265:.\main.c      **** //                if (((robotLocation.robot_orientation-1800)/10) < 10){
 266:.\main.c      **** //                    PWM_1_WriteCompare(PWMPower);
 267:.\main.c      **** //                    PWM_2_WriteCompare(PWMPower+1+((robotLocation.robot_orientation-1800)/10));
 268:.\main.c      **** //                } else {
 269:.\main.c      **** //                    PWM_1_WriteCompare(PWMPower);
 270:.\main.c      **** //                    PWM_2_WriteCompare(PWMPower+1+10); 
 271:.\main.c      **** //                }
 272:.\main.c      **** //                while (newy > 0){
 273:.\main.c      **** //                    receiveRX();
 274:.\main.c      **** //                    newx = robotLocation.robot_xpos - firstx;
 275:.\main.c      **** //                    newy = robotLocation.robot_ypos - firsty;
 276:.\main.c      **** //                    
 277:.\main.c      **** //                    if (newx > RFStopValue){
 278:.\main.c      **** //                        stop();
 279:.\main.c      **** //                        while(1);   
 280:.\main.c      **** //                    }
 281:.\main.c      **** //                }
 282:.\main.c      **** //                        
 283:.\main.c      **** //            } else {
 284:.\main.c      **** //                PWM_1_WriteCompare(PWMPower);
 285:.\main.c      **** //                PWM_2_WriteCompare(PWMPower);
 286:.\main.c      **** //            }
 287:.\main.c      **** //        } 
 288:.\main.c      **** //}
 289:.\main.c      **** 
 290:.\main.c      **** void techTest2RF1(){
 650              		.loc 1 290 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654 0000 80B5     		push	{r7, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 14, -4
 658 0002 00AF     		add	r7, sp, #0
 659              		.cfi_def_cfa_register 7
 291:.\main.c      ****     
 292:.\main.c      ****         //receiveRX();
 293:.\main.c      ****         
 294:.\main.c      ****         //setSpeed(getSpeed(), goalSpeed);
 295:.\main.c      ****         
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 18


 296:.\main.c      ****         if (firstinit == 1){
 660              		.loc 1 296 0
 661 0004 674B     		ldr	r3, .L32
 662 0006 1B68     		ldr	r3, [r3]
 663 0008 012B     		cmp	r3, #1
 664 000a 40F0CA80 		bne	.L16
 297:.\main.c      ****             newx = robotLocation.robot_xpos - firstx;
 665              		.loc 1 297 0
 666 000e 664B     		ldr	r3, .L32+4
 667 0010 5B88     		ldrh	r3, [r3, #2]
 668 0012 1AB2     		sxth	r2, r3
 669 0014 654B     		ldr	r3, .L32+8
 670 0016 1B68     		ldr	r3, [r3]
 671 0018 D31A     		subs	r3, r2, r3
 672 001a 654A     		ldr	r2, .L32+12
 673 001c 1360     		str	r3, [r2]
 298:.\main.c      ****             newy = robotLocation.robot_ypos - firsty;
 674              		.loc 1 298 0
 675 001e 624B     		ldr	r3, .L32+4
 676 0020 9B88     		ldrh	r3, [r3, #4]
 677 0022 1AB2     		sxth	r2, r3
 678 0024 634B     		ldr	r3, .L32+16
 679 0026 1B68     		ldr	r3, [r3]
 680 0028 D31A     		subs	r3, r2, r3
 681 002a 634A     		ldr	r2, .L32+20
 682 002c 1360     		str	r3, [r2]
 299:.\main.c      **** 
 300:.\main.c      ****             if (newx > RFStopValue){
 683              		.loc 1 300 0
 684 002e 604B     		ldr	r3, .L32+12
 685 0030 1A68     		ldr	r2, [r3]
 686 0032 624B     		ldr	r3, .L32+24
 687 0034 1B68     		ldr	r3, [r3]
 688 0036 9A42     		cmp	r2, r3
 689 0038 02DD     		ble	.L18
 301:.\main.c      ****                 stop();
 690              		.loc 1 301 0
 691 003a FFF7FEFF 		bl	stop
 692              	.L19:
 302:.\main.c      ****                 while(1);   
 693              		.loc 1 302 0 discriminator 1
 694 003e FEE7     		b	.L19
 695              	.L18:
 303:.\main.c      ****             }
 304:.\main.c      ****             
 305:.\main.c      ****             //car gone right so curve left
 306:.\main.c      ****             if (newy > 2) {
 696              		.loc 1 306 0
 697 0040 5D4B     		ldr	r3, .L32+20
 698 0042 1B68     		ldr	r3, [r3]
 699 0044 022B     		cmp	r3, #2
 700 0046 4EDD     		ble	.L20
 307:.\main.c      ****                 if (((1800-robotLocation.robot_orientation)/10) < 10){
 701              		.loc 1 307 0
 702 0048 574B     		ldr	r3, .L32+4
 703 004a DB88     		ldrh	r3, [r3, #6]
 704 004c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 19


 705 004e C3F5E163 		rsb	r3, r3, #1800
 706 0052 632B     		cmp	r3, #99
 707 0054 1ADC     		bgt	.L21
 308:.\main.c      ****                     PWM_1_WriteCompare(PWMPower+1+((1800-robotLocation.robot_orientation)/10));
 708              		.loc 1 308 0
 709 0056 544B     		ldr	r3, .L32+4
 710 0058 DB88     		ldrh	r3, [r3, #6]
 711 005a 1BB2     		sxth	r3, r3
 712 005c C3F5E163 		rsb	r3, r3, #1800
 713 0060 574A     		ldr	r2, .L32+28
 714 0062 82FB0312 		smull	r1, r2, r2, r3
 715 0066 9210     		asrs	r2, r2, #2
 716 0068 DB17     		asrs	r3, r3, #31
 717 006a D31A     		subs	r3, r2, r3
 718 006c DAB2     		uxtb	r2, r3
 719 006e 554B     		ldr	r3, .L32+32
 720 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 721 0072 1344     		add	r3, r3, r2
 722 0074 DBB2     		uxtb	r3, r3
 723 0076 0133     		adds	r3, r3, #1
 724 0078 DBB2     		uxtb	r3, r3
 725 007a 1846     		mov	r0, r3
 726 007c FFF7FEFF 		bl	PWM_1_WriteCompare
 309:.\main.c      ****                     PWM_2_WriteCompare(PWMPower);
 727              		.loc 1 309 0
 728 0080 504B     		ldr	r3, .L32+32
 729 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 730 0084 1846     		mov	r0, r3
 731 0086 FFF7FEFF 		bl	PWM_2_WriteCompare
 732 008a 0BE0     		b	.L22
 733              	.L21:
 310:.\main.c      ****                 } else {
 311:.\main.c      ****                     PWM_1_WriteCompare(PWMPower+1+10);
 734              		.loc 1 311 0
 735 008c 4D4B     		ldr	r3, .L32+32
 736 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 737 0090 0B33     		adds	r3, r3, #11
 738 0092 DBB2     		uxtb	r3, r3
 739 0094 1846     		mov	r0, r3
 740 0096 FFF7FEFF 		bl	PWM_1_WriteCompare
 312:.\main.c      ****                     PWM_2_WriteCompare(PWMPower);
 741              		.loc 1 312 0
 742 009a 4A4B     		ldr	r3, .L32+32
 743 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 744 009e 1846     		mov	r0, r3
 745 00a0 FFF7FEFF 		bl	PWM_2_WriteCompare
 746              	.L22:
 313:.\main.c      ****                 }
 314:.\main.c      ****             
 315:.\main.c      ****                 while (newy < 0){
 747              		.loc 1 315 0
 748 00a4 1AE0     		b	.L23
 749              	.L25:
 316:.\main.c      ****                     receiveRX();
 750              		.loc 1 316 0
 751 00a6 FFF7FEFF 		bl	receiveRX
 317:.\main.c      ****                     newx = robotLocation.robot_xpos - firstx;
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 20


 752              		.loc 1 317 0
 753 00aa 3F4B     		ldr	r3, .L32+4
 754 00ac 5B88     		ldrh	r3, [r3, #2]
 755 00ae 1AB2     		sxth	r2, r3
 756 00b0 3E4B     		ldr	r3, .L32+8
 757 00b2 1B68     		ldr	r3, [r3]
 758 00b4 D31A     		subs	r3, r2, r3
 759 00b6 3E4A     		ldr	r2, .L32+12
 760 00b8 1360     		str	r3, [r2]
 318:.\main.c      ****                     newy = robotLocation.robot_ypos - firsty;
 761              		.loc 1 318 0
 762 00ba 3B4B     		ldr	r3, .L32+4
 763 00bc 9B88     		ldrh	r3, [r3, #4]
 764 00be 1AB2     		sxth	r2, r3
 765 00c0 3C4B     		ldr	r3, .L32+16
 766 00c2 1B68     		ldr	r3, [r3]
 767 00c4 D31A     		subs	r3, r2, r3
 768 00c6 3C4A     		ldr	r2, .L32+20
 769 00c8 1360     		str	r3, [r2]
 319:.\main.c      ****                     
 320:.\main.c      ****                     if (newx > RFStopValue){
 770              		.loc 1 320 0
 771 00ca 394B     		ldr	r3, .L32+12
 772 00cc 1A68     		ldr	r2, [r3]
 773 00ce 3B4B     		ldr	r3, .L32+24
 774 00d0 1B68     		ldr	r3, [r3]
 775 00d2 9A42     		cmp	r2, r3
 776 00d4 02DD     		ble	.L23
 321:.\main.c      ****                         stop();
 777              		.loc 1 321 0
 778 00d6 FFF7FEFF 		bl	stop
 779              	.L24:
 322:.\main.c      ****                         while(1);   
 780              		.loc 1 322 0 discriminator 2
 781 00da FEE7     		b	.L24
 782              	.L23:
 315:.\main.c      ****                     receiveRX();
 783              		.loc 1 315 0
 784 00dc 364B     		ldr	r3, .L32+20
 785 00de 1B68     		ldr	r3, [r3]
 786 00e0 002B     		cmp	r3, #0
 787 00e2 E0DB     		blt	.L25
 788 00e4 5DE0     		b	.L16
 789              	.L20:
 323:.\main.c      ****                     }
 324:.\main.c      ****                 }
 325:.\main.c      ****             //car gone left so curve right
 326:.\main.c      ****             } else if (newy < -2){
 790              		.loc 1 326 0
 791 00e6 344B     		ldr	r3, .L32+20
 792 00e8 1B68     		ldr	r3, [r3]
 793 00ea 13F1020F 		cmn	r3, #2
 794 00ee 4EDA     		bge	.L26
 327:.\main.c      ****                 
 328:.\main.c      ****                 if (((robotLocation.robot_orientation-1800)/10) < 10){
 795              		.loc 1 328 0
 796 00f0 2D4B     		ldr	r3, .L32+4
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 21


 797 00f2 DB88     		ldrh	r3, [r3, #6]
 798 00f4 1BB2     		sxth	r3, r3
 799 00f6 A3F5E163 		sub	r3, r3, #1800
 800 00fa 632B     		cmp	r3, #99
 801 00fc 1ADC     		bgt	.L27
 329:.\main.c      ****                     PWM_1_WriteCompare(PWMPower);
 802              		.loc 1 329 0
 803 00fe 314B     		ldr	r3, .L32+32
 804 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 805 0102 1846     		mov	r0, r3
 806 0104 FFF7FEFF 		bl	PWM_1_WriteCompare
 330:.\main.c      ****                     PWM_2_WriteCompare(PWMPower+1+((robotLocation.robot_orientation-1800)/10));
 807              		.loc 1 330 0
 808 0108 274B     		ldr	r3, .L32+4
 809 010a DB88     		ldrh	r3, [r3, #6]
 810 010c 1BB2     		sxth	r3, r3
 811 010e A3F5E163 		sub	r3, r3, #1800
 812 0112 2B4A     		ldr	r2, .L32+28
 813 0114 82FB0312 		smull	r1, r2, r2, r3
 814 0118 9210     		asrs	r2, r2, #2
 815 011a DB17     		asrs	r3, r3, #31
 816 011c D31A     		subs	r3, r2, r3
 817 011e DAB2     		uxtb	r2, r3
 818 0120 284B     		ldr	r3, .L32+32
 819 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 820 0124 1344     		add	r3, r3, r2
 821 0126 DBB2     		uxtb	r3, r3
 822 0128 0133     		adds	r3, r3, #1
 823 012a DBB2     		uxtb	r3, r3
 824 012c 1846     		mov	r0, r3
 825 012e FFF7FEFF 		bl	PWM_2_WriteCompare
 826 0132 0BE0     		b	.L28
 827              	.L27:
 331:.\main.c      ****                 } else {
 332:.\main.c      ****                     PWM_1_WriteCompare(PWMPower);
 828              		.loc 1 332 0
 829 0134 234B     		ldr	r3, .L32+32
 830 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 831 0138 1846     		mov	r0, r3
 832 013a FFF7FEFF 		bl	PWM_1_WriteCompare
 333:.\main.c      ****                     PWM_2_WriteCompare(PWMPower+1+10); 
 833              		.loc 1 333 0
 834 013e 214B     		ldr	r3, .L32+32
 835 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 836 0142 0B33     		adds	r3, r3, #11
 837 0144 DBB2     		uxtb	r3, r3
 838 0146 1846     		mov	r0, r3
 839 0148 FFF7FEFF 		bl	PWM_2_WriteCompare
 840              	.L28:
 334:.\main.c      ****                 }
 335:.\main.c      ****                 while (newy > 0){
 841              		.loc 1 335 0
 842 014c 1AE0     		b	.L29
 843              	.L31:
 336:.\main.c      ****                     receiveRX();
 844              		.loc 1 336 0
 845 014e FFF7FEFF 		bl	receiveRX
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 22


 337:.\main.c      ****                     newx = robotLocation.robot_xpos - firstx;
 846              		.loc 1 337 0
 847 0152 154B     		ldr	r3, .L32+4
 848 0154 5B88     		ldrh	r3, [r3, #2]
 849 0156 1AB2     		sxth	r2, r3
 850 0158 144B     		ldr	r3, .L32+8
 851 015a 1B68     		ldr	r3, [r3]
 852 015c D31A     		subs	r3, r2, r3
 853 015e 144A     		ldr	r2, .L32+12
 854 0160 1360     		str	r3, [r2]
 338:.\main.c      ****                     newy = robotLocation.robot_ypos - firsty;
 855              		.loc 1 338 0
 856 0162 114B     		ldr	r3, .L32+4
 857 0164 9B88     		ldrh	r3, [r3, #4]
 858 0166 1AB2     		sxth	r2, r3
 859 0168 124B     		ldr	r3, .L32+16
 860 016a 1B68     		ldr	r3, [r3]
 861 016c D31A     		subs	r3, r2, r3
 862 016e 124A     		ldr	r2, .L32+20
 863 0170 1360     		str	r3, [r2]
 339:.\main.c      ****                     
 340:.\main.c      ****                     if (newx > RFStopValue){
 864              		.loc 1 340 0
 865 0172 0F4B     		ldr	r3, .L32+12
 866 0174 1A68     		ldr	r2, [r3]
 867 0176 114B     		ldr	r3, .L32+24
 868 0178 1B68     		ldr	r3, [r3]
 869 017a 9A42     		cmp	r2, r3
 870 017c 02DD     		ble	.L29
 341:.\main.c      ****                         stop();
 871              		.loc 1 341 0
 872 017e FFF7FEFF 		bl	stop
 873              	.L30:
 342:.\main.c      ****                         while(1);   
 874              		.loc 1 342 0 discriminator 3
 875 0182 FEE7     		b	.L30
 876              	.L29:
 335:.\main.c      ****                     receiveRX();
 877              		.loc 1 335 0
 878 0184 0C4B     		ldr	r3, .L32+20
 879 0186 1B68     		ldr	r3, [r3]
 880 0188 002B     		cmp	r3, #0
 881 018a E0DC     		bgt	.L31
 882 018c 09E0     		b	.L16
 883              	.L26:
 343:.\main.c      ****                     }
 344:.\main.c      ****                 }
 345:.\main.c      ****                         
 346:.\main.c      ****             } else {
 347:.\main.c      ****                 PWM_1_WriteCompare(PWMPower);
 884              		.loc 1 347 0
 885 018e 0D4B     		ldr	r3, .L32+32
 886 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 887 0192 1846     		mov	r0, r3
 888 0194 FFF7FEFF 		bl	PWM_1_WriteCompare
 348:.\main.c      ****                 PWM_2_WriteCompare(PWMPower);
 889              		.loc 1 348 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 23


 890 0198 0A4B     		ldr	r3, .L32+32
 891 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 892 019c 1846     		mov	r0, r3
 893 019e FFF7FEFF 		bl	PWM_2_WriteCompare
 894              	.L16:
 349:.\main.c      ****             }
 350:.\main.c      ****         } 
 351:.\main.c      **** }
 895              		.loc 1 351 0
 896 01a2 80BD     		pop	{r7, pc}
 897              	.L33:
 898              		.align	2
 899              	.L32:
 900 01a4 00000000 		.word	firstinit
 901 01a8 00000000 		.word	robotLocation
 902 01ac 00000000 		.word	firstx
 903 01b0 00000000 		.word	newx
 904 01b4 00000000 		.word	firsty
 905 01b8 00000000 		.word	newy
 906 01bc 00000000 		.word	RFStopValue
 907 01c0 67666666 		.word	1717986919
 908 01c4 00000000 		.word	PWMPower
 909              		.cfi_endproc
 910              	.LFE66:
 911              		.size	techTest2RF1, .-techTest2RF1
 912              		.section	.text.techTest2RF2,"ax",%progbits
 913              		.align	2
 914              		.global	techTest2RF2
 915              		.thumb
 916              		.thumb_func
 917              		.type	techTest2RF2, %function
 918              	techTest2RF2:
 919              	.LFB67:
 352:.\main.c      **** 
 353:.\main.c      **** void techTest2RF2(){
 920              		.loc 1 353 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 1, uses_anonymous_args = 0
 924 0000 80B5     		push	{r7, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 00AF     		add	r7, sp, #0
 929              		.cfi_def_cfa_register 7
 354:.\main.c      ****     
 355:.\main.c      ****         //receiveRX();
 356:.\main.c      ****         
 357:.\main.c      ****         //setSpeed(getSpeed(), goalSpeed);
 358:.\main.c      ****         
 359:.\main.c      ****         if (firstinit == 1){
 930              		.loc 1 359 0
 931 0004 684B     		ldr	r3, .L50
 932 0006 1B68     		ldr	r3, [r3]
 933 0008 012B     		cmp	r3, #1
 934 000a 40F0CC80 		bne	.L34
 360:.\main.c      ****             newx = firstx - robotLocation.robot_xpos;
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 24


 935              		.loc 1 360 0
 936 000e 674B     		ldr	r3, .L50+4
 937 0010 1A68     		ldr	r2, [r3]
 938 0012 674B     		ldr	r3, .L50+8
 939 0014 5B88     		ldrh	r3, [r3, #2]
 940 0016 1BB2     		sxth	r3, r3
 941 0018 D31A     		subs	r3, r2, r3
 942 001a 664A     		ldr	r2, .L50+12
 943 001c 1360     		str	r3, [r2]
 361:.\main.c      ****             newy = firsty - robotLocation.robot_ypos;
 944              		.loc 1 361 0
 945 001e 664B     		ldr	r3, .L50+16
 946 0020 1A68     		ldr	r2, [r3]
 947 0022 634B     		ldr	r3, .L50+8
 948 0024 9B88     		ldrh	r3, [r3, #4]
 949 0026 1BB2     		sxth	r3, r3
 950 0028 D31A     		subs	r3, r2, r3
 951 002a 644A     		ldr	r2, .L50+20
 952 002c 1360     		str	r3, [r2]
 362:.\main.c      **** 
 363:.\main.c      ****             if (newy > RFStopValue){
 953              		.loc 1 363 0
 954 002e 634B     		ldr	r3, .L50+20
 955 0030 1A68     		ldr	r2, [r3]
 956 0032 634B     		ldr	r3, .L50+24
 957 0034 1B68     		ldr	r3, [r3]
 958 0036 9A42     		cmp	r2, r3
 959 0038 02DD     		ble	.L36
 364:.\main.c      ****                 stop();
 960              		.loc 1 364 0
 961 003a FFF7FEFF 		bl	stop
 962              	.L37:
 365:.\main.c      ****                 while(1);   
 963              		.loc 1 365 0 discriminator 1
 964 003e FEE7     		b	.L37
 965              	.L36:
 366:.\main.c      ****             }
 367:.\main.c      ****             
 368:.\main.c      ****             //car gone right so curve left
 369:.\main.c      ****             if (newx < -2) {
 966              		.loc 1 369 0
 967 0040 5C4B     		ldr	r3, .L50+12
 968 0042 1B68     		ldr	r3, [r3]
 969 0044 13F1020F 		cmn	r3, #2
 970 0048 50DA     		bge	.L38
 370:.\main.c      ****                 if (((2700-robotLocation.robot_orientation)/10) < 10){
 971              		.loc 1 370 0
 972 004a 594B     		ldr	r3, .L50+8
 973 004c DB88     		ldrh	r3, [r3, #6]
 974 004e 1BB2     		sxth	r3, r3
 975 0050 C3F52863 		rsb	r3, r3, #2688
 976 0054 0C33     		adds	r3, r3, #12
 977 0056 632B     		cmp	r3, #99
 978 0058 1BDC     		bgt	.L39
 371:.\main.c      ****                     PWM_1_WriteCompare(PWMPower+1+((2700-robotLocation.robot_orientation)/10));
 979              		.loc 1 371 0
 980 005a 554B     		ldr	r3, .L50+8
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 25


 981 005c DB88     		ldrh	r3, [r3, #6]
 982 005e 1BB2     		sxth	r3, r3
 983 0060 C3F52863 		rsb	r3, r3, #2688
 984 0064 0C33     		adds	r3, r3, #12
 985 0066 574A     		ldr	r2, .L50+28
 986 0068 82FB0312 		smull	r1, r2, r2, r3
 987 006c 9210     		asrs	r2, r2, #2
 988 006e DB17     		asrs	r3, r3, #31
 989 0070 D31A     		subs	r3, r2, r3
 990 0072 DAB2     		uxtb	r2, r3
 991 0074 544B     		ldr	r3, .L50+32
 992 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 993 0078 1344     		add	r3, r3, r2
 994 007a DBB2     		uxtb	r3, r3
 995 007c 0133     		adds	r3, r3, #1
 996 007e DBB2     		uxtb	r3, r3
 997 0080 1846     		mov	r0, r3
 998 0082 FFF7FEFF 		bl	PWM_1_WriteCompare
 372:.\main.c      ****                     PWM_2_WriteCompare(PWMPower);
 999              		.loc 1 372 0
 1000 0086 504B     		ldr	r3, .L50+32
 1001 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1002 008a 1846     		mov	r0, r3
 1003 008c FFF7FEFF 		bl	PWM_2_WriteCompare
 1004 0090 0BE0     		b	.L40
 1005              	.L39:
 373:.\main.c      ****                 } else {
 374:.\main.c      ****                     PWM_1_WriteCompare(PWMPower+1+10);
 1006              		.loc 1 374 0
 1007 0092 4D4B     		ldr	r3, .L50+32
 1008 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1009 0096 0B33     		adds	r3, r3, #11
 1010 0098 DBB2     		uxtb	r3, r3
 1011 009a 1846     		mov	r0, r3
 1012 009c FFF7FEFF 		bl	PWM_1_WriteCompare
 375:.\main.c      ****                     PWM_2_WriteCompare(PWMPower);
 1013              		.loc 1 375 0
 1014 00a0 494B     		ldr	r3, .L50+32
 1015 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1016 00a4 1846     		mov	r0, r3
 1017 00a6 FFF7FEFF 		bl	PWM_2_WriteCompare
 1018              	.L40:
 376:.\main.c      ****                 }
 377:.\main.c      ****             
 378:.\main.c      ****                 while (newx > 0){
 1019              		.loc 1 378 0
 1020 00aa 1AE0     		b	.L41
 1021              	.L43:
 379:.\main.c      ****                     receiveRX();
 1022              		.loc 1 379 0
 1023 00ac FFF7FEFF 		bl	receiveRX
 380:.\main.c      ****                     newx = firstx - robotLocation.robot_xpos;
 1024              		.loc 1 380 0
 1025 00b0 3E4B     		ldr	r3, .L50+4
 1026 00b2 1A68     		ldr	r2, [r3]
 1027 00b4 3E4B     		ldr	r3, .L50+8
 1028 00b6 5B88     		ldrh	r3, [r3, #2]
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 26


 1029 00b8 1BB2     		sxth	r3, r3
 1030 00ba D31A     		subs	r3, r2, r3
 1031 00bc 3D4A     		ldr	r2, .L50+12
 1032 00be 1360     		str	r3, [r2]
 381:.\main.c      ****                     newy = firsty - robotLocation.robot_ypos;
 1033              		.loc 1 381 0
 1034 00c0 3D4B     		ldr	r3, .L50+16
 1035 00c2 1A68     		ldr	r2, [r3]
 1036 00c4 3A4B     		ldr	r3, .L50+8
 1037 00c6 9B88     		ldrh	r3, [r3, #4]
 1038 00c8 1BB2     		sxth	r3, r3
 1039 00ca D31A     		subs	r3, r2, r3
 1040 00cc 3B4A     		ldr	r2, .L50+20
 1041 00ce 1360     		str	r3, [r2]
 382:.\main.c      ****                     
 383:.\main.c      ****                     if (newy > RFStopValue){
 1042              		.loc 1 383 0
 1043 00d0 3A4B     		ldr	r3, .L50+20
 1044 00d2 1A68     		ldr	r2, [r3]
 1045 00d4 3A4B     		ldr	r3, .L50+24
 1046 00d6 1B68     		ldr	r3, [r3]
 1047 00d8 9A42     		cmp	r2, r3
 1048 00da 02DD     		ble	.L41
 384:.\main.c      ****                         stop();
 1049              		.loc 1 384 0
 1050 00dc FFF7FEFF 		bl	stop
 1051              	.L42:
 385:.\main.c      ****                         while(1);   
 1052              		.loc 1 385 0 discriminator 2
 1053 00e0 FEE7     		b	.L42
 1054              	.L41:
 378:.\main.c      ****                     receiveRX();
 1055              		.loc 1 378 0
 1056 00e2 344B     		ldr	r3, .L50+12
 1057 00e4 1B68     		ldr	r3, [r3]
 1058 00e6 002B     		cmp	r3, #0
 1059 00e8 E0DC     		bgt	.L43
 1060 00ea 5CE0     		b	.L34
 1061              	.L38:
 386:.\main.c      ****                     }
 387:.\main.c      ****                 }
 388:.\main.c      ****             //car gone left so curve right
 389:.\main.c      ****             } else if (newx > 2){
 1062              		.loc 1 389 0
 1063 00ec 314B     		ldr	r3, .L50+12
 1064 00ee 1B68     		ldr	r3, [r3]
 1065 00f0 022B     		cmp	r3, #2
 1066 00f2 4EDD     		ble	.L44
 390:.\main.c      ****                 if (((robotLocation.robot_orientation-2700)/10) < 10){
 1067              		.loc 1 390 0
 1068 00f4 2E4B     		ldr	r3, .L50+8
 1069 00f6 DB88     		ldrh	r3, [r3, #6]
 1070 00f8 1BB2     		sxth	r3, r3
 1071 00fa A3F68C23 		subw	r3, r3, #2700
 1072 00fe 632B     		cmp	r3, #99
 1073 0100 1ADC     		bgt	.L45
 391:.\main.c      ****                     PWM_1_WriteCompare(PWMPower);
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 27


 1074              		.loc 1 391 0
 1075 0102 314B     		ldr	r3, .L50+32
 1076 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1077 0106 1846     		mov	r0, r3
 1078 0108 FFF7FEFF 		bl	PWM_1_WriteCompare
 392:.\main.c      ****                     PWM_2_WriteCompare(PWMPower+1+((robotLocation.robot_orientation-2700)/10));
 1079              		.loc 1 392 0
 1080 010c 284B     		ldr	r3, .L50+8
 1081 010e DB88     		ldrh	r3, [r3, #6]
 1082 0110 1BB2     		sxth	r3, r3
 1083 0112 A3F68C23 		subw	r3, r3, #2700
 1084 0116 2B4A     		ldr	r2, .L50+28
 1085 0118 82FB0312 		smull	r1, r2, r2, r3
 1086 011c 9210     		asrs	r2, r2, #2
 1087 011e DB17     		asrs	r3, r3, #31
 1088 0120 D31A     		subs	r3, r2, r3
 1089 0122 DAB2     		uxtb	r2, r3
 1090 0124 284B     		ldr	r3, .L50+32
 1091 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 0128 1344     		add	r3, r3, r2
 1093 012a DBB2     		uxtb	r3, r3
 1094 012c 0133     		adds	r3, r3, #1
 1095 012e DBB2     		uxtb	r3, r3
 1096 0130 1846     		mov	r0, r3
 1097 0132 FFF7FEFF 		bl	PWM_2_WriteCompare
 1098 0136 0BE0     		b	.L46
 1099              	.L45:
 393:.\main.c      ****                 } else {
 394:.\main.c      ****                     PWM_1_WriteCompare(PWMPower);
 1100              		.loc 1 394 0
 1101 0138 234B     		ldr	r3, .L50+32
 1102 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1103 013c 1846     		mov	r0, r3
 1104 013e FFF7FEFF 		bl	PWM_1_WriteCompare
 395:.\main.c      ****                     PWM_2_WriteCompare(PWMPower+1+10); 
 1105              		.loc 1 395 0
 1106 0142 214B     		ldr	r3, .L50+32
 1107 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 0146 0B33     		adds	r3, r3, #11
 1109 0148 DBB2     		uxtb	r3, r3
 1110 014a 1846     		mov	r0, r3
 1111 014c FFF7FEFF 		bl	PWM_2_WriteCompare
 1112              	.L46:
 396:.\main.c      ****                 }
 397:.\main.c      ****                 while (newx < 0){
 1113              		.loc 1 397 0
 1114 0150 1AE0     		b	.L47
 1115              	.L49:
 398:.\main.c      ****                     receiveRX();
 1116              		.loc 1 398 0
 1117 0152 FFF7FEFF 		bl	receiveRX
 399:.\main.c      ****                     newx = firstx - robotLocation.robot_xpos;
 1118              		.loc 1 399 0
 1119 0156 154B     		ldr	r3, .L50+4
 1120 0158 1A68     		ldr	r2, [r3]
 1121 015a 154B     		ldr	r3, .L50+8
 1122 015c 5B88     		ldrh	r3, [r3, #2]
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 28


 1123 015e 1BB2     		sxth	r3, r3
 1124 0160 D31A     		subs	r3, r2, r3
 1125 0162 144A     		ldr	r2, .L50+12
 1126 0164 1360     		str	r3, [r2]
 400:.\main.c      ****                     newy = firsty - robotLocation.robot_ypos;
 1127              		.loc 1 400 0
 1128 0166 144B     		ldr	r3, .L50+16
 1129 0168 1A68     		ldr	r2, [r3]
 1130 016a 114B     		ldr	r3, .L50+8
 1131 016c 9B88     		ldrh	r3, [r3, #4]
 1132 016e 1BB2     		sxth	r3, r3
 1133 0170 D31A     		subs	r3, r2, r3
 1134 0172 124A     		ldr	r2, .L50+20
 1135 0174 1360     		str	r3, [r2]
 401:.\main.c      ****                     
 402:.\main.c      ****                     if (newy > RFStopValue){
 1136              		.loc 1 402 0
 1137 0176 114B     		ldr	r3, .L50+20
 1138 0178 1A68     		ldr	r2, [r3]
 1139 017a 114B     		ldr	r3, .L50+24
 1140 017c 1B68     		ldr	r3, [r3]
 1141 017e 9A42     		cmp	r2, r3
 1142 0180 02DD     		ble	.L47
 403:.\main.c      ****                         stop();
 1143              		.loc 1 403 0
 1144 0182 FFF7FEFF 		bl	stop
 1145              	.L48:
 404:.\main.c      ****                         while(1);   
 1146              		.loc 1 404 0 discriminator 3
 1147 0186 FEE7     		b	.L48
 1148              	.L47:
 397:.\main.c      ****                     receiveRX();
 1149              		.loc 1 397 0
 1150 0188 0A4B     		ldr	r3, .L50+12
 1151 018a 1B68     		ldr	r3, [r3]
 1152 018c 002B     		cmp	r3, #0
 1153 018e E0DB     		blt	.L49
 1154 0190 09E0     		b	.L34
 1155              	.L44:
 405:.\main.c      ****                     }
 406:.\main.c      ****                 }
 407:.\main.c      ****                         
 408:.\main.c      ****             } else {
 409:.\main.c      ****                 PWM_1_WriteCompare(PWMPower);
 1156              		.loc 1 409 0
 1157 0192 0D4B     		ldr	r3, .L50+32
 1158 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1159 0196 1846     		mov	r0, r3
 1160 0198 FFF7FEFF 		bl	PWM_1_WriteCompare
 410:.\main.c      ****                 PWM_2_WriteCompare(PWMPower);
 1161              		.loc 1 410 0
 1162 019c 0A4B     		ldr	r3, .L50+32
 1163 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1164 01a0 1846     		mov	r0, r3
 1165 01a2 FFF7FEFF 		bl	PWM_2_WriteCompare
 1166              	.L34:
 411:.\main.c      ****             }
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 29


 412:.\main.c      ****         } 
 413:.\main.c      **** }
 1167              		.loc 1 413 0
 1168 01a6 80BD     		pop	{r7, pc}
 1169              	.L51:
 1170              		.align	2
 1171              	.L50:
 1172 01a8 00000000 		.word	firstinit
 1173 01ac 00000000 		.word	firstx
 1174 01b0 00000000 		.word	robotLocation
 1175 01b4 00000000 		.word	newx
 1176 01b8 00000000 		.word	firsty
 1177 01bc 00000000 		.word	newy
 1178 01c0 00000000 		.word	RFStopValue
 1179 01c4 67666666 		.word	1717986919
 1180 01c8 00000000 		.word	PWMPower
 1181              		.cfi_endproc
 1182              	.LFE67:
 1183              		.size	techTest2RF2, .-techTest2RF2
 1184              		.section	.text.techTest2RF3,"ax",%progbits
 1185              		.align	2
 1186              		.global	techTest2RF3
 1187              		.thumb
 1188              		.thumb_func
 1189              		.type	techTest2RF3, %function
 1190              	techTest2RF3:
 1191              	.LFB68:
 414:.\main.c      **** 
 415:.\main.c      **** void techTest2RF3(){
 1192              		.loc 1 415 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 1, uses_anonymous_args = 0
 1196 0000 80B5     		push	{r7, lr}
 1197              		.cfi_def_cfa_offset 8
 1198              		.cfi_offset 7, -8
 1199              		.cfi_offset 14, -4
 1200 0002 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 416:.\main.c      ****     
 417:.\main.c      ****         //receiveRX();
 418:.\main.c      ****         
 419:.\main.c      ****         //setSpeed(getSpeed(), goalSpeed);
 420:.\main.c      ****         
 421:.\main.c      ****         if (firstinit == 1){
 1202              		.loc 1 421 0
 1203 0004 734B     		ldr	r3, .L70
 1204 0006 1B68     		ldr	r3, [r3]
 1205 0008 012B     		cmp	r3, #1
 1206 000a 40F0E280 		bne	.L52
 422:.\main.c      ****             newx = firstx - robotLocation.robot_xpos;
 1207              		.loc 1 422 0
 1208 000e 724B     		ldr	r3, .L70+4
 1209 0010 1A68     		ldr	r2, [r3]
 1210 0012 724B     		ldr	r3, .L70+8
 1211 0014 5B88     		ldrh	r3, [r3, #2]
 1212 0016 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 30


 1213 0018 D31A     		subs	r3, r2, r3
 1214 001a 714A     		ldr	r2, .L70+12
 1215 001c 1360     		str	r3, [r2]
 423:.\main.c      ****             newy = firsty - robotLocation.robot_ypos;
 1216              		.loc 1 423 0
 1217 001e 714B     		ldr	r3, .L70+16
 1218 0020 1A68     		ldr	r2, [r3]
 1219 0022 6E4B     		ldr	r3, .L70+8
 1220 0024 9B88     		ldrh	r3, [r3, #4]
 1221 0026 1BB2     		sxth	r3, r3
 1222 0028 D31A     		subs	r3, r2, r3
 1223 002a 6F4A     		ldr	r2, .L70+20
 1224 002c 1360     		str	r3, [r2]
 424:.\main.c      **** 
 425:.\main.c      ****             newAngle = robotLocation.robot_orientation;
 1225              		.loc 1 425 0
 1226 002e 6B4B     		ldr	r3, .L70+8
 1227 0030 DB88     		ldrh	r3, [r3, #6]
 1228 0032 1BB2     		sxth	r3, r3
 1229 0034 6D4A     		ldr	r2, .L70+24
 1230 0036 1360     		str	r3, [r2]
 426:.\main.c      ****             
 427:.\main.c      ****             if (newAngle < 1800){
 1231              		.loc 1 427 0
 1232 0038 6C4B     		ldr	r3, .L70+24
 1233 003a 1B68     		ldr	r3, [r3]
 1234 003c B3F5E16F 		cmp	r3, #1800
 1235 0040 06DA     		bge	.L54
 428:.\main.c      ****                 newAngle = newAngle + 1800;
 1236              		.loc 1 428 0
 1237 0042 6A4B     		ldr	r3, .L70+24
 1238 0044 1B68     		ldr	r3, [r3]
 1239 0046 03F5E163 		add	r3, r3, #1800
 1240 004a 684A     		ldr	r2, .L70+24
 1241 004c 1360     		str	r3, [r2]
 1242 004e 0AE0     		b	.L55
 1243              	.L54:
 429:.\main.c      ****             } else if (newAngle > 1800){
 1244              		.loc 1 429 0
 1245 0050 664B     		ldr	r3, .L70+24
 1246 0052 1B68     		ldr	r3, [r3]
 1247 0054 B3F5E16F 		cmp	r3, #1800
 1248 0058 05DD     		ble	.L55
 430:.\main.c      ****                 newAngle = newAngle - 1800;
 1249              		.loc 1 430 0
 1250 005a 644B     		ldr	r3, .L70+24
 1251 005c 1B68     		ldr	r3, [r3]
 1252 005e A3F5E163 		sub	r3, r3, #1800
 1253 0062 624A     		ldr	r2, .L70+24
 1254 0064 1360     		str	r3, [r2]
 1255              	.L55:
 431:.\main.c      ****             }
 432:.\main.c      ****                 
 433:.\main.c      ****             
 434:.\main.c      ****             if (newx > RFStopValue){
 1256              		.loc 1 434 0
 1257 0066 5E4B     		ldr	r3, .L70+12
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 31


 1258 0068 1A68     		ldr	r2, [r3]
 1259 006a 614B     		ldr	r3, .L70+28
 1260 006c 1B68     		ldr	r3, [r3]
 1261 006e 9A42     		cmp	r2, r3
 1262 0070 02DD     		ble	.L56
 435:.\main.c      ****                 stop();
 1263              		.loc 1 435 0
 1264 0072 FFF7FEFF 		bl	stop
 1265              	.L57:
 436:.\main.c      ****                 while(1);   
 1266              		.loc 1 436 0 discriminator 1
 1267 0076 FEE7     		b	.L57
 1268              	.L56:
 437:.\main.c      ****             }
 438:.\main.c      ****             
 439:.\main.c      ****             //car gone right so curve left
 440:.\main.c      ****             if (newy > 2) {
 1269              		.loc 1 440 0
 1270 0078 5B4B     		ldr	r3, .L70+20
 1271 007a 1B68     		ldr	r3, [r3]
 1272 007c 022B     		cmp	r3, #2
 1273 007e 4CDD     		ble	.L58
 441:.\main.c      ****                 if (((1800-newAngle)/10) < 10){
 1274              		.loc 1 441 0
 1275 0080 5A4B     		ldr	r3, .L70+24
 1276 0082 1B68     		ldr	r3, [r3]
 1277 0084 C3F5E163 		rsb	r3, r3, #1800
 1278 0088 632B     		cmp	r3, #99
 1279 008a 19DC     		bgt	.L59
 442:.\main.c      ****                     PWM_1_WriteCompare(PWMPower+1+((1800-newAngle)/10));
 1280              		.loc 1 442 0
 1281 008c 574B     		ldr	r3, .L70+24
 1282 008e 1B68     		ldr	r3, [r3]
 1283 0090 C3F5E163 		rsb	r3, r3, #1800
 1284 0094 574A     		ldr	r2, .L70+32
 1285 0096 82FB0312 		smull	r1, r2, r2, r3
 1286 009a 9210     		asrs	r2, r2, #2
 1287 009c DB17     		asrs	r3, r3, #31
 1288 009e D31A     		subs	r3, r2, r3
 1289 00a0 DAB2     		uxtb	r2, r3
 1290 00a2 554B     		ldr	r3, .L70+36
 1291 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1292 00a6 1344     		add	r3, r3, r2
 1293 00a8 DBB2     		uxtb	r3, r3
 1294 00aa 0133     		adds	r3, r3, #1
 1295 00ac DBB2     		uxtb	r3, r3
 1296 00ae 1846     		mov	r0, r3
 1297 00b0 FFF7FEFF 		bl	PWM_1_WriteCompare
 443:.\main.c      ****                     PWM_2_WriteCompare(PWMPower);
 1298              		.loc 1 443 0
 1299 00b4 504B     		ldr	r3, .L70+36
 1300 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1301 00b8 1846     		mov	r0, r3
 1302 00ba FFF7FEFF 		bl	PWM_2_WriteCompare
 1303 00be 0BE0     		b	.L60
 1304              	.L59:
 444:.\main.c      ****                 } else {
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 32


 445:.\main.c      ****                     PWM_1_WriteCompare(PWMPower+1+10);
 1305              		.loc 1 445 0
 1306 00c0 4D4B     		ldr	r3, .L70+36
 1307 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1308 00c4 0B33     		adds	r3, r3, #11
 1309 00c6 DBB2     		uxtb	r3, r3
 1310 00c8 1846     		mov	r0, r3
 1311 00ca FFF7FEFF 		bl	PWM_1_WriteCompare
 446:.\main.c      ****                     PWM_2_WriteCompare(PWMPower);
 1312              		.loc 1 446 0
 1313 00ce 4A4B     		ldr	r3, .L70+36
 1314 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1315 00d2 1846     		mov	r0, r3
 1316 00d4 FFF7FEFF 		bl	PWM_2_WriteCompare
 1317              	.L60:
 447:.\main.c      ****                 }
 448:.\main.c      ****             
 449:.\main.c      ****                 while (newy < 0){
 1318              		.loc 1 449 0
 1319 00d8 1AE0     		b	.L61
 1320              	.L63:
 450:.\main.c      ****                     receiveRX();
 1321              		.loc 1 450 0
 1322 00da FFF7FEFF 		bl	receiveRX
 451:.\main.c      ****                     newx = firstx - robotLocation.robot_xpos;
 1323              		.loc 1 451 0
 1324 00de 3E4B     		ldr	r3, .L70+4
 1325 00e0 1A68     		ldr	r2, [r3]
 1326 00e2 3E4B     		ldr	r3, .L70+8
 1327 00e4 5B88     		ldrh	r3, [r3, #2]
 1328 00e6 1BB2     		sxth	r3, r3
 1329 00e8 D31A     		subs	r3, r2, r3
 1330 00ea 3D4A     		ldr	r2, .L70+12
 1331 00ec 1360     		str	r3, [r2]
 452:.\main.c      ****                     newy = firsty - robotLocation.robot_ypos;
 1332              		.loc 1 452 0
 1333 00ee 3D4B     		ldr	r3, .L70+16
 1334 00f0 1A68     		ldr	r2, [r3]
 1335 00f2 3A4B     		ldr	r3, .L70+8
 1336 00f4 9B88     		ldrh	r3, [r3, #4]
 1337 00f6 1BB2     		sxth	r3, r3
 1338 00f8 D31A     		subs	r3, r2, r3
 1339 00fa 3B4A     		ldr	r2, .L70+20
 1340 00fc 1360     		str	r3, [r2]
 453:.\main.c      ****                     
 454:.\main.c      ****                     if (newx > RFStopValue){
 1341              		.loc 1 454 0
 1342 00fe 384B     		ldr	r3, .L70+12
 1343 0100 1A68     		ldr	r2, [r3]
 1344 0102 3B4B     		ldr	r3, .L70+28
 1345 0104 1B68     		ldr	r3, [r3]
 1346 0106 9A42     		cmp	r2, r3
 1347 0108 02DD     		ble	.L61
 455:.\main.c      ****                         stop();
 1348              		.loc 1 455 0
 1349 010a FFF7FEFF 		bl	stop
 1350              	.L62:
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 33


 456:.\main.c      ****                         while(1);   
 1351              		.loc 1 456 0 discriminator 2
 1352 010e FEE7     		b	.L62
 1353              	.L61:
 449:.\main.c      ****                     receiveRX();
 1354              		.loc 1 449 0
 1355 0110 354B     		ldr	r3, .L70+20
 1356 0112 1B68     		ldr	r3, [r3]
 1357 0114 002B     		cmp	r3, #0
 1358 0116 E0DB     		blt	.L63
 1359 0118 5BE0     		b	.L52
 1360              	.L58:
 457:.\main.c      ****                     }
 458:.\main.c      ****                 }
 459:.\main.c      ****             //car gone left so curve right
 460:.\main.c      ****             } else if (newy < -2){
 1361              		.loc 1 460 0
 1362 011a 334B     		ldr	r3, .L70+20
 1363 011c 1B68     		ldr	r3, [r3]
 1364 011e 13F1020F 		cmn	r3, #2
 1365 0122 4CDA     		bge	.L64
 461:.\main.c      ****                 
 462:.\main.c      ****                 if (((newAngle-1800)/10) < 10){
 1366              		.loc 1 462 0
 1367 0124 314B     		ldr	r3, .L70+24
 1368 0126 1B68     		ldr	r3, [r3]
 1369 0128 A3F5E163 		sub	r3, r3, #1800
 1370 012c 632B     		cmp	r3, #99
 1371 012e 19DC     		bgt	.L65
 463:.\main.c      ****                     PWM_1_WriteCompare(PWMPower);
 1372              		.loc 1 463 0
 1373 0130 314B     		ldr	r3, .L70+36
 1374 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1375 0134 1846     		mov	r0, r3
 1376 0136 FFF7FEFF 		bl	PWM_1_WriteCompare
 464:.\main.c      ****                     PWM_2_WriteCompare(PWMPower+1+((newAngle-1800)/10));
 1377              		.loc 1 464 0
 1378 013a 2C4B     		ldr	r3, .L70+24
 1379 013c 1B68     		ldr	r3, [r3]
 1380 013e A3F5E163 		sub	r3, r3, #1800
 1381 0142 2C4A     		ldr	r2, .L70+32
 1382 0144 82FB0312 		smull	r1, r2, r2, r3
 1383 0148 9210     		asrs	r2, r2, #2
 1384 014a DB17     		asrs	r3, r3, #31
 1385 014c D31A     		subs	r3, r2, r3
 1386 014e DAB2     		uxtb	r2, r3
 1387 0150 294B     		ldr	r3, .L70+36
 1388 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1389 0154 1344     		add	r3, r3, r2
 1390 0156 DBB2     		uxtb	r3, r3
 1391 0158 0133     		adds	r3, r3, #1
 1392 015a DBB2     		uxtb	r3, r3
 1393 015c 1846     		mov	r0, r3
 1394 015e FFF7FEFF 		bl	PWM_2_WriteCompare
 1395 0162 0BE0     		b	.L66
 1396              	.L65:
 465:.\main.c      ****                 } else {
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 34


 466:.\main.c      ****                     PWM_1_WriteCompare(PWMPower);
 1397              		.loc 1 466 0
 1398 0164 244B     		ldr	r3, .L70+36
 1399 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1400 0168 1846     		mov	r0, r3
 1401 016a FFF7FEFF 		bl	PWM_1_WriteCompare
 467:.\main.c      ****                     PWM_2_WriteCompare(PWMPower+1+10); 
 1402              		.loc 1 467 0
 1403 016e 224B     		ldr	r3, .L70+36
 1404 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1405 0172 0B33     		adds	r3, r3, #11
 1406 0174 DBB2     		uxtb	r3, r3
 1407 0176 1846     		mov	r0, r3
 1408 0178 FFF7FEFF 		bl	PWM_2_WriteCompare
 1409              	.L66:
 468:.\main.c      ****                 }
 469:.\main.c      ****                 while (newy > 0){
 1410              		.loc 1 469 0
 1411 017c 1AE0     		b	.L67
 1412              	.L69:
 470:.\main.c      ****                     receiveRX();
 1413              		.loc 1 470 0
 1414 017e FFF7FEFF 		bl	receiveRX
 471:.\main.c      ****                     newx = firstx - robotLocation.robot_xpos;
 1415              		.loc 1 471 0
 1416 0182 154B     		ldr	r3, .L70+4
 1417 0184 1A68     		ldr	r2, [r3]
 1418 0186 154B     		ldr	r3, .L70+8
 1419 0188 5B88     		ldrh	r3, [r3, #2]
 1420 018a 1BB2     		sxth	r3, r3
 1421 018c D31A     		subs	r3, r2, r3
 1422 018e 144A     		ldr	r2, .L70+12
 1423 0190 1360     		str	r3, [r2]
 472:.\main.c      ****                     newy = firsty - robotLocation.robot_ypos;
 1424              		.loc 1 472 0
 1425 0192 144B     		ldr	r3, .L70+16
 1426 0194 1A68     		ldr	r2, [r3]
 1427 0196 114B     		ldr	r3, .L70+8
 1428 0198 9B88     		ldrh	r3, [r3, #4]
 1429 019a 1BB2     		sxth	r3, r3
 1430 019c D31A     		subs	r3, r2, r3
 1431 019e 124A     		ldr	r2, .L70+20
 1432 01a0 1360     		str	r3, [r2]
 473:.\main.c      ****                     
 474:.\main.c      ****                     if (newx > RFStopValue){
 1433              		.loc 1 474 0
 1434 01a2 0F4B     		ldr	r3, .L70+12
 1435 01a4 1A68     		ldr	r2, [r3]
 1436 01a6 124B     		ldr	r3, .L70+28
 1437 01a8 1B68     		ldr	r3, [r3]
 1438 01aa 9A42     		cmp	r2, r3
 1439 01ac 02DD     		ble	.L67
 475:.\main.c      ****                         stop();
 1440              		.loc 1 475 0
 1441 01ae FFF7FEFF 		bl	stop
 1442              	.L68:
 476:.\main.c      ****                         while(1);   
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 35


 1443              		.loc 1 476 0 discriminator 3
 1444 01b2 FEE7     		b	.L68
 1445              	.L67:
 469:.\main.c      ****                     receiveRX();
 1446              		.loc 1 469 0
 1447 01b4 0C4B     		ldr	r3, .L70+20
 1448 01b6 1B68     		ldr	r3, [r3]
 1449 01b8 002B     		cmp	r3, #0
 1450 01ba E0DC     		bgt	.L69
 1451 01bc 09E0     		b	.L52
 1452              	.L64:
 477:.\main.c      ****                     }
 478:.\main.c      ****                 }
 479:.\main.c      ****                         
 480:.\main.c      ****             } else {
 481:.\main.c      ****                 PWM_1_WriteCompare(PWMPower);
 1453              		.loc 1 481 0
 1454 01be 0E4B     		ldr	r3, .L70+36
 1455 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1456 01c2 1846     		mov	r0, r3
 1457 01c4 FFF7FEFF 		bl	PWM_1_WriteCompare
 482:.\main.c      ****                 PWM_2_WriteCompare(PWMPower);
 1458              		.loc 1 482 0
 1459 01c8 0B4B     		ldr	r3, .L70+36
 1460 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1461 01cc 1846     		mov	r0, r3
 1462 01ce FFF7FEFF 		bl	PWM_2_WriteCompare
 1463              	.L52:
 483:.\main.c      ****             }
 484:.\main.c      ****         } 
 485:.\main.c      **** }
 1464              		.loc 1 485 0
 1465 01d2 80BD     		pop	{r7, pc}
 1466              	.L71:
 1467              		.align	2
 1468              	.L70:
 1469 01d4 00000000 		.word	firstinit
 1470 01d8 00000000 		.word	firstx
 1471 01dc 00000000 		.word	robotLocation
 1472 01e0 00000000 		.word	newx
 1473 01e4 00000000 		.word	firsty
 1474 01e8 00000000 		.word	newy
 1475 01ec 00000000 		.word	newAngle
 1476 01f0 00000000 		.word	RFStopValue
 1477 01f4 67666666 		.word	1717986919
 1478 01f8 00000000 		.word	PWMPower
 1479              		.cfi_endproc
 1480              	.LFE68:
 1481              		.size	techTest2RF3, .-techTest2RF3
 1482              		.section	.text.techTest2RF4,"ax",%progbits
 1483              		.align	2
 1484              		.global	techTest2RF4
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	techTest2RF4, %function
 1488              	techTest2RF4:
 1489              	.LFB69:
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 36


 486:.\main.c      **** 
 487:.\main.c      **** void techTest2RF4(){
 1490              		.loc 1 487 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494 0000 80B5     		push	{r7, lr}
 1495              		.cfi_def_cfa_offset 8
 1496              		.cfi_offset 7, -8
 1497              		.cfi_offset 14, -4
 1498 0002 00AF     		add	r7, sp, #0
 1499              		.cfi_def_cfa_register 7
 488:.\main.c      ****     
 489:.\main.c      ****         //receiveRX();
 490:.\main.c      ****         
 491:.\main.c      ****         //setSpeed(getSpeed(), goalSpeed);
 492:.\main.c      ****         
 493:.\main.c      ****         if (firstinit == 1){
 1500              		.loc 1 493 0
 1501 0004 674B     		ldr	r3, .L88
 1502 0006 1B68     		ldr	r3, [r3]
 1503 0008 012B     		cmp	r3, #1
 1504 000a 40F0CA80 		bne	.L72
 494:.\main.c      ****             newx = robotLocation.robot_xpos - firstx;
 1505              		.loc 1 494 0
 1506 000e 664B     		ldr	r3, .L88+4
 1507 0010 5B88     		ldrh	r3, [r3, #2]
 1508 0012 1AB2     		sxth	r2, r3
 1509 0014 654B     		ldr	r3, .L88+8
 1510 0016 1B68     		ldr	r3, [r3]
 1511 0018 D31A     		subs	r3, r2, r3
 1512 001a 654A     		ldr	r2, .L88+12
 1513 001c 1360     		str	r3, [r2]
 495:.\main.c      ****             newy = robotLocation.robot_ypos - firsty;
 1514              		.loc 1 495 0
 1515 001e 624B     		ldr	r3, .L88+4
 1516 0020 9B88     		ldrh	r3, [r3, #4]
 1517 0022 1AB2     		sxth	r2, r3
 1518 0024 634B     		ldr	r3, .L88+16
 1519 0026 1B68     		ldr	r3, [r3]
 1520 0028 D31A     		subs	r3, r2, r3
 1521 002a 634A     		ldr	r2, .L88+20
 1522 002c 1360     		str	r3, [r2]
 496:.\main.c      **** 
 497:.\main.c      ****             if (newy > RFStopValue){
 1523              		.loc 1 497 0
 1524 002e 624B     		ldr	r3, .L88+20
 1525 0030 1A68     		ldr	r2, [r3]
 1526 0032 624B     		ldr	r3, .L88+24
 1527 0034 1B68     		ldr	r3, [r3]
 1528 0036 9A42     		cmp	r2, r3
 1529 0038 02DD     		ble	.L74
 498:.\main.c      ****                 stop();
 1530              		.loc 1 498 0
 1531 003a FFF7FEFF 		bl	stop
 1532              	.L75:
 499:.\main.c      ****                 while(1);   
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 37


 1533              		.loc 1 499 0 discriminator 1
 1534 003e FEE7     		b	.L75
 1535              	.L74:
 500:.\main.c      ****             }
 501:.\main.c      ****             
 502:.\main.c      ****             //car gone right so curve left
 503:.\main.c      ****             if (newx < -2) {
 1536              		.loc 1 503 0
 1537 0040 5B4B     		ldr	r3, .L88+12
 1538 0042 1B68     		ldr	r3, [r3]
 1539 0044 13F1020F 		cmn	r3, #2
 1540 0048 4EDA     		bge	.L76
 504:.\main.c      ****                 if (((900-robotLocation.robot_orientation)/10) < 10){
 1541              		.loc 1 504 0
 1542 004a 574B     		ldr	r3, .L88+4
 1543 004c DB88     		ldrh	r3, [r3, #6]
 1544 004e 1BB2     		sxth	r3, r3
 1545 0050 C3F56173 		rsb	r3, r3, #900
 1546 0054 632B     		cmp	r3, #99
 1547 0056 1ADC     		bgt	.L77
 505:.\main.c      ****                     PWM_1_WriteCompare(PWMPower+1+((900-robotLocation.robot_orientation)/10));
 1548              		.loc 1 505 0
 1549 0058 534B     		ldr	r3, .L88+4
 1550 005a DB88     		ldrh	r3, [r3, #6]
 1551 005c 1BB2     		sxth	r3, r3
 1552 005e C3F56173 		rsb	r3, r3, #900
 1553 0062 574A     		ldr	r2, .L88+28
 1554 0064 82FB0312 		smull	r1, r2, r2, r3
 1555 0068 9210     		asrs	r2, r2, #2
 1556 006a DB17     		asrs	r3, r3, #31
 1557 006c D31A     		subs	r3, r2, r3
 1558 006e DAB2     		uxtb	r2, r3
 1559 0070 544B     		ldr	r3, .L88+32
 1560 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1561 0074 1344     		add	r3, r3, r2
 1562 0076 DBB2     		uxtb	r3, r3
 1563 0078 0133     		adds	r3, r3, #1
 1564 007a DBB2     		uxtb	r3, r3
 1565 007c 1846     		mov	r0, r3
 1566 007e FFF7FEFF 		bl	PWM_1_WriteCompare
 506:.\main.c      ****                     PWM_2_WriteCompare(PWMPower);
 1567              		.loc 1 506 0
 1568 0082 504B     		ldr	r3, .L88+32
 1569 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1570 0086 1846     		mov	r0, r3
 1571 0088 FFF7FEFF 		bl	PWM_2_WriteCompare
 1572 008c 0BE0     		b	.L78
 1573              	.L77:
 507:.\main.c      ****                 } else {
 508:.\main.c      ****                     PWM_1_WriteCompare(PWMPower+1+10);
 1574              		.loc 1 508 0
 1575 008e 4D4B     		ldr	r3, .L88+32
 1576 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1577 0092 0B33     		adds	r3, r3, #11
 1578 0094 DBB2     		uxtb	r3, r3
 1579 0096 1846     		mov	r0, r3
 1580 0098 FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 38


 509:.\main.c      ****                     PWM_2_WriteCompare(PWMPower);
 1581              		.loc 1 509 0
 1582 009c 494B     		ldr	r3, .L88+32
 1583 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 00a0 1846     		mov	r0, r3
 1585 00a2 FFF7FEFF 		bl	PWM_2_WriteCompare
 1586              	.L78:
 510:.\main.c      ****                 }
 511:.\main.c      ****             
 512:.\main.c      ****                 while (newx > 0){
 1587              		.loc 1 512 0
 1588 00a6 1AE0     		b	.L79
 1589              	.L81:
 513:.\main.c      ****                     receiveRX();
 1590              		.loc 1 513 0
 1591 00a8 FFF7FEFF 		bl	receiveRX
 514:.\main.c      ****                     newx = robotLocation.robot_xpos - firstx;
 1592              		.loc 1 514 0
 1593 00ac 3E4B     		ldr	r3, .L88+4
 1594 00ae 5B88     		ldrh	r3, [r3, #2]
 1595 00b0 1AB2     		sxth	r2, r3
 1596 00b2 3E4B     		ldr	r3, .L88+8
 1597 00b4 1B68     		ldr	r3, [r3]
 1598 00b6 D31A     		subs	r3, r2, r3
 1599 00b8 3D4A     		ldr	r2, .L88+12
 1600 00ba 1360     		str	r3, [r2]
 515:.\main.c      ****                     newy = robotLocation.robot_ypos - firsty;
 1601              		.loc 1 515 0
 1602 00bc 3A4B     		ldr	r3, .L88+4
 1603 00be 9B88     		ldrh	r3, [r3, #4]
 1604 00c0 1AB2     		sxth	r2, r3
 1605 00c2 3C4B     		ldr	r3, .L88+16
 1606 00c4 1B68     		ldr	r3, [r3]
 1607 00c6 D31A     		subs	r3, r2, r3
 1608 00c8 3B4A     		ldr	r2, .L88+20
 1609 00ca 1360     		str	r3, [r2]
 516:.\main.c      ****                     
 517:.\main.c      ****                     if (newy > RFStopValue){
 1610              		.loc 1 517 0
 1611 00cc 3A4B     		ldr	r3, .L88+20
 1612 00ce 1A68     		ldr	r2, [r3]
 1613 00d0 3A4B     		ldr	r3, .L88+24
 1614 00d2 1B68     		ldr	r3, [r3]
 1615 00d4 9A42     		cmp	r2, r3
 1616 00d6 02DD     		ble	.L79
 518:.\main.c      ****                         stop();
 1617              		.loc 1 518 0
 1618 00d8 FFF7FEFF 		bl	stop
 1619              	.L80:
 519:.\main.c      ****                         while(1);   
 1620              		.loc 1 519 0 discriminator 2
 1621 00dc FEE7     		b	.L80
 1622              	.L79:
 512:.\main.c      ****                     receiveRX();
 1623              		.loc 1 512 0
 1624 00de 344B     		ldr	r3, .L88+12
 1625 00e0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 39


 1626 00e2 002B     		cmp	r3, #0
 1627 00e4 E0DC     		bgt	.L81
 1628 00e6 5CE0     		b	.L72
 1629              	.L76:
 520:.\main.c      ****                     }
 521:.\main.c      ****                 }
 522:.\main.c      ****             //car gone left so curve right
 523:.\main.c      ****             } else if (newx > 2){
 1630              		.loc 1 523 0
 1631 00e8 314B     		ldr	r3, .L88+12
 1632 00ea 1B68     		ldr	r3, [r3]
 1633 00ec 022B     		cmp	r3, #2
 1634 00ee 4EDD     		ble	.L82
 524:.\main.c      ****                 if (((robotLocation.robot_orientation-900)/10) < 10){
 1635              		.loc 1 524 0
 1636 00f0 2D4B     		ldr	r3, .L88+4
 1637 00f2 DB88     		ldrh	r3, [r3, #6]
 1638 00f4 1BB2     		sxth	r3, r3
 1639 00f6 A3F56173 		sub	r3, r3, #900
 1640 00fa 632B     		cmp	r3, #99
 1641 00fc 1ADC     		bgt	.L83
 525:.\main.c      ****                     PWM_1_WriteCompare(PWMPower);
 1642              		.loc 1 525 0
 1643 00fe 314B     		ldr	r3, .L88+32
 1644 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1645 0102 1846     		mov	r0, r3
 1646 0104 FFF7FEFF 		bl	PWM_1_WriteCompare
 526:.\main.c      ****                     PWM_2_WriteCompare(PWMPower+1+((robotLocation.robot_orientation-900)/10));
 1647              		.loc 1 526 0
 1648 0108 274B     		ldr	r3, .L88+4
 1649 010a DB88     		ldrh	r3, [r3, #6]
 1650 010c 1BB2     		sxth	r3, r3
 1651 010e A3F56173 		sub	r3, r3, #900
 1652 0112 2B4A     		ldr	r2, .L88+28
 1653 0114 82FB0312 		smull	r1, r2, r2, r3
 1654 0118 9210     		asrs	r2, r2, #2
 1655 011a DB17     		asrs	r3, r3, #31
 1656 011c D31A     		subs	r3, r2, r3
 1657 011e DAB2     		uxtb	r2, r3
 1658 0120 284B     		ldr	r3, .L88+32
 1659 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1660 0124 1344     		add	r3, r3, r2
 1661 0126 DBB2     		uxtb	r3, r3
 1662 0128 0133     		adds	r3, r3, #1
 1663 012a DBB2     		uxtb	r3, r3
 1664 012c 1846     		mov	r0, r3
 1665 012e FFF7FEFF 		bl	PWM_2_WriteCompare
 1666 0132 0BE0     		b	.L84
 1667              	.L83:
 527:.\main.c      ****                 } else {
 528:.\main.c      ****                     PWM_1_WriteCompare(PWMPower);
 1668              		.loc 1 528 0
 1669 0134 234B     		ldr	r3, .L88+32
 1670 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1671 0138 1846     		mov	r0, r3
 1672 013a FFF7FEFF 		bl	PWM_1_WriteCompare
 529:.\main.c      ****                     PWM_2_WriteCompare(PWMPower+1+10); 
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 40


 1673              		.loc 1 529 0
 1674 013e 214B     		ldr	r3, .L88+32
 1675 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1676 0142 0B33     		adds	r3, r3, #11
 1677 0144 DBB2     		uxtb	r3, r3
 1678 0146 1846     		mov	r0, r3
 1679 0148 FFF7FEFF 		bl	PWM_2_WriteCompare
 1680              	.L84:
 530:.\main.c      ****                 }
 531:.\main.c      ****                 while (newx < 0){
 1681              		.loc 1 531 0
 1682 014c 1AE0     		b	.L85
 1683              	.L87:
 532:.\main.c      ****                     receiveRX();
 1684              		.loc 1 532 0
 1685 014e FFF7FEFF 		bl	receiveRX
 533:.\main.c      ****                     newx = robotLocation.robot_xpos - firstx;
 1686              		.loc 1 533 0
 1687 0152 154B     		ldr	r3, .L88+4
 1688 0154 5B88     		ldrh	r3, [r3, #2]
 1689 0156 1AB2     		sxth	r2, r3
 1690 0158 144B     		ldr	r3, .L88+8
 1691 015a 1B68     		ldr	r3, [r3]
 1692 015c D31A     		subs	r3, r2, r3
 1693 015e 144A     		ldr	r2, .L88+12
 1694 0160 1360     		str	r3, [r2]
 534:.\main.c      ****                     newy = robotLocation.robot_ypos - firsty;
 1695              		.loc 1 534 0
 1696 0162 114B     		ldr	r3, .L88+4
 1697 0164 9B88     		ldrh	r3, [r3, #4]
 1698 0166 1AB2     		sxth	r2, r3
 1699 0168 124B     		ldr	r3, .L88+16
 1700 016a 1B68     		ldr	r3, [r3]
 1701 016c D31A     		subs	r3, r2, r3
 1702 016e 124A     		ldr	r2, .L88+20
 1703 0170 1360     		str	r3, [r2]
 535:.\main.c      ****                     
 536:.\main.c      ****                     if (newy > RFStopValue){
 1704              		.loc 1 536 0
 1705 0172 114B     		ldr	r3, .L88+20
 1706 0174 1A68     		ldr	r2, [r3]
 1707 0176 114B     		ldr	r3, .L88+24
 1708 0178 1B68     		ldr	r3, [r3]
 1709 017a 9A42     		cmp	r2, r3
 1710 017c 02DD     		ble	.L85
 537:.\main.c      ****                         stop();
 1711              		.loc 1 537 0
 1712 017e FFF7FEFF 		bl	stop
 1713              	.L86:
 538:.\main.c      ****                         while(1);   
 1714              		.loc 1 538 0 discriminator 3
 1715 0182 FEE7     		b	.L86
 1716              	.L85:
 531:.\main.c      ****                     receiveRX();
 1717              		.loc 1 531 0
 1718 0184 0A4B     		ldr	r3, .L88+12
 1719 0186 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 41


 1720 0188 002B     		cmp	r3, #0
 1721 018a E0DB     		blt	.L87
 1722 018c 09E0     		b	.L72
 1723              	.L82:
 539:.\main.c      ****                     }
 540:.\main.c      ****                 }
 541:.\main.c      ****                         
 542:.\main.c      ****             } else {
 543:.\main.c      ****                 PWM_1_WriteCompare(PWMPower);
 1724              		.loc 1 543 0
 1725 018e 0D4B     		ldr	r3, .L88+32
 1726 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1727 0192 1846     		mov	r0, r3
 1728 0194 FFF7FEFF 		bl	PWM_1_WriteCompare
 544:.\main.c      ****                 PWM_2_WriteCompare(PWMPower);
 1729              		.loc 1 544 0
 1730 0198 0A4B     		ldr	r3, .L88+32
 1731 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1732 019c 1846     		mov	r0, r3
 1733 019e FFF7FEFF 		bl	PWM_2_WriteCompare
 1734              	.L72:
 545:.\main.c      ****             }
 546:.\main.c      ****         } 
 547:.\main.c      **** }
 1735              		.loc 1 547 0
 1736 01a2 80BD     		pop	{r7, pc}
 1737              	.L89:
 1738              		.align	2
 1739              	.L88:
 1740 01a4 00000000 		.word	firstinit
 1741 01a8 00000000 		.word	robotLocation
 1742 01ac 00000000 		.word	firstx
 1743 01b0 00000000 		.word	newx
 1744 01b4 00000000 		.word	firsty
 1745 01b8 00000000 		.word	newy
 1746 01bc 00000000 		.word	RFStopValue
 1747 01c0 67666666 		.word	1717986919
 1748 01c4 00000000 		.word	PWMPower
 1749              		.cfi_endproc
 1750              	.LFE69:
 1751              		.size	techTest2RF4, .-techTest2RF4
 1752              		.section	.text.initRamp,"ax",%progbits
 1753              		.align	2
 1754              		.global	initRamp
 1755              		.thumb
 1756              		.thumb_func
 1757              		.type	initRamp, %function
 1758              	initRamp:
 1759              	.LFB70:
 548:.\main.c      **** 
 549:.\main.c      **** void initRamp() {
 1760              		.loc 1 549 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 1, uses_anonymous_args = 0
 1764 0000 80B5     		push	{r7, lr}
 1765              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 42


 1766              		.cfi_offset 7, -8
 1767              		.cfi_offset 14, -4
 1768 0002 00AF     		add	r7, sp, #0
 1769              		.cfi_def_cfa_register 7
 550:.\main.c      ****     //init process
 551:.\main.c      ****     if (init == 1){
 1770              		.loc 1 551 0
 1771 0004 124B     		ldr	r3, .L94
 1772 0006 1B68     		ldr	r3, [r3]
 1773 0008 012B     		cmp	r3, #1
 1774 000a 20D1     		bne	.L90
 552:.\main.c      ****         stop();
 1775              		.loc 1 552 0
 1776 000c FFF7FEFF 		bl	stop
 553:.\main.c      ****         while(initcounter != PWMPower){
 1777              		.loc 1 553 0
 1778 0010 13E0     		b	.L92
 1779              	.L93:
 554:.\main.c      ****             PWM_1_WriteCompare(initcounter);
 1780              		.loc 1 554 0
 1781 0012 104B     		ldr	r3, .L94+4
 1782 0014 1B68     		ldr	r3, [r3]
 1783 0016 DBB2     		uxtb	r3, r3
 1784 0018 1846     		mov	r0, r3
 1785 001a FFF7FEFF 		bl	PWM_1_WriteCompare
 555:.\main.c      ****             PWM_2_WriteCompare(initcounter);
 1786              		.loc 1 555 0
 1787 001e 0D4B     		ldr	r3, .L94+4
 1788 0020 1B68     		ldr	r3, [r3]
 1789 0022 DBB2     		uxtb	r3, r3
 1790 0024 1846     		mov	r0, r3
 1791 0026 FFF7FEFF 		bl	PWM_2_WriteCompare
 556:.\main.c      ****             CyDelay(100);
 1792              		.loc 1 556 0
 1793 002a 6420     		movs	r0, #100
 1794 002c FFF7FEFF 		bl	CyDelay
 557:.\main.c      ****             initcounter++;
 1795              		.loc 1 557 0
 1796 0030 084B     		ldr	r3, .L94+4
 1797 0032 1B68     		ldr	r3, [r3]
 1798 0034 0133     		adds	r3, r3, #1
 1799 0036 074A     		ldr	r2, .L94+4
 1800 0038 1360     		str	r3, [r2]
 1801              	.L92:
 553:.\main.c      ****             PWM_1_WriteCompare(initcounter);
 1802              		.loc 1 553 0
 1803 003a 074B     		ldr	r3, .L94+8
 1804 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1805 003e 1A46     		mov	r2, r3
 1806 0040 044B     		ldr	r3, .L94+4
 1807 0042 1B68     		ldr	r3, [r3]
 1808 0044 9A42     		cmp	r2, r3
 1809 0046 E4D1     		bne	.L93
 558:.\main.c      ****         }
 559:.\main.c      ****         init = 0;
 1810              		.loc 1 559 0
 1811 0048 014B     		ldr	r3, .L94
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 43


 1812 004a 0022     		movs	r2, #0
 1813 004c 1A60     		str	r2, [r3]
 1814              	.L90:
 560:.\main.c      ****     }
 561:.\main.c      **** } 
 1815              		.loc 1 561 0
 1816 004e 80BD     		pop	{r7, pc}
 1817              	.L95:
 1818              		.align	2
 1819              	.L94:
 1820 0050 00000000 		.word	init
 1821 0054 00000000 		.word	initcounter
 1822 0058 00000000 		.word	PWMPower
 1823              		.cfi_endproc
 1824              	.LFE70:
 1825              		.size	initRamp, .-initRamp
 1826              		.section	.text.simpleCarControl,"ax",%progbits
 1827              		.align	2
 1828              		.global	simpleCarControl
 1829              		.thumb
 1830              		.thumb_func
 1831              		.type	simpleCarControl, %function
 1832              	simpleCarControl:
 1833              	.LFB71:
 562:.\main.c      **** 
 563:.\main.c      **** void simpleCarControl(){
 1834              		.loc 1 563 0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 1, uses_anonymous_args = 0
 1838 0000 80B5     		push	{r7, lr}
 1839              		.cfi_def_cfa_offset 8
 1840              		.cfi_offset 7, -8
 1841              		.cfi_offset 14, -4
 1842 0002 00AF     		add	r7, sp, #0
 1843              		.cfi_def_cfa_register 7
 564:.\main.c      **** 
 565:.\main.c      **** 	    //slight right
 566:.\main.c      **** 	if (sensorLogic4 == false && sensorLogic2 == false
 1844              		.loc 1 566 0
 1845 0004 654B     		ldr	r3, .L112
 1846 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 0008 002B     		cmp	r3, #0
 1848 000a 3DD1     		bne	.L97
 1849              		.loc 1 566 0 is_stmt 0 discriminator 1
 1850 000c 644B     		ldr	r3, .L112+4
 1851 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1852 0010 002B     		cmp	r3, #0
 1853 0012 39D1     		bne	.L97
 567:.\main.c      **** 			&& sensorLogic0 == false && sensorLogic1 == true && sensorLogic3 == true) {
 1854              		.loc 1 567 0 is_stmt 1
 1855 0014 634B     		ldr	r3, .L112+8
 1856 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1857 0018 002B     		cmp	r3, #0
 1858 001a 35D1     		bne	.L97
 1859              		.loc 1 567 0 is_stmt 0 discriminator 1
 1860 001c 624B     		ldr	r3, .L112+12
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 44


 1861 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1862 0020 012B     		cmp	r3, #1
 1863 0022 31D1     		bne	.L97
 1864              		.loc 1 567 0 discriminator 2
 1865 0024 614B     		ldr	r3, .L112+16
 1866 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1867 0028 012B     		cmp	r3, #1
 1868 002a 2DD1     		bne	.L97
 568:.\main.c      **** 
 569:.\main.c      **** 		PWM_1_WriteCompare(PWMPower-10);
 1869              		.loc 1 569 0 is_stmt 1
 1870 002c 604B     		ldr	r3, .L112+20
 1871 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 0030 0A3B     		subs	r3, r3, #10
 1873 0032 DBB2     		uxtb	r3, r3
 1874 0034 1846     		mov	r0, r3
 1875 0036 FFF7FEFF 		bl	PWM_1_WriteCompare
 570:.\main.c      **** 		PWM_2_WriteCompare(PWMPower);
 1876              		.loc 1 570 0
 1877 003a 5D4B     		ldr	r3, .L112+20
 1878 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1879 003e 1846     		mov	r0, r3
 1880 0040 FFF7FEFF 		bl	PWM_2_WriteCompare
 571:.\main.c      **** 
 572:.\main.c      ****         incrementQuadGoal(goalQuad);
 1881              		.loc 1 572 0
 1882 0044 5B4B     		ldr	r3, .L112+24
 1883 0046 1B68     		ldr	r3, [r3]
 1884 0048 1846     		mov	r0, r3
 1885 004a FFF7FEFF 		bl	incrementQuadGoal
 573:.\main.c      ****         
 574:.\main.c      **** 		while (sensorLogic4 == false) {
 1886              		.loc 1 574 0
 1887 004e 16E0     		b	.L98
 1888              	.L100:
 575:.\main.c      **** 			readADC4();
 1889              		.loc 1 575 0
 1890 0050 FFF7FEFF 		bl	readADC4
 576:.\main.c      ****             stopAfterX(get_average_position(),goalQuad);
 1891              		.loc 1 576 0
 1892 0054 FFF7FEFF 		bl	get_average_position
 1893 0058 0246     		mov	r2, r0
 1894 005a 564B     		ldr	r3, .L112+24
 1895 005c 1B68     		ldr	r3, [r3]
 1896 005e 1046     		mov	r0, r2
 1897 0060 1946     		mov	r1, r3
 1898 0062 FFF7FEFF 		bl	stopAfterX
 577:.\main.c      ****             readADC0();
 1899              		.loc 1 577 0
 1900 0066 FFF7FEFF 		bl	readADC0
 578:.\main.c      ****             readADC2();
 1901              		.loc 1 578 0
 1902 006a FFF7FEFF 		bl	readADC2
 579:.\main.c      ****             if (sensorLogic0 == true || sensorLogic2 == true){
 1903              		.loc 1 579 0
 1904 006e 4D4B     		ldr	r3, .L112+8
 1905 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 45


 1906 0072 012B     		cmp	r3, #1
 1907 0074 07D0     		beq	.L99
 1908              		.loc 1 579 0 is_stmt 0 discriminator 1
 1909 0076 4A4B     		ldr	r3, .L112+4
 1910 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1911 007a 012B     		cmp	r3, #1
 1912 007c 03D0     		beq	.L99
 1913              	.L98:
 574:.\main.c      **** 			readADC4();
 1914              		.loc 1 574 0 is_stmt 1
 1915 007e 474B     		ldr	r3, .L112
 1916 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1917 0082 002B     		cmp	r3, #0
 1918 0084 E4D0     		beq	.L100
 1919              	.L99:
 566:.\main.c      **** 			&& sensorLogic0 == false && sensorLogic1 == true && sensorLogic3 == true) {
 1920              		.loc 1 566 0
 1921 0086 87E0     		b	.L96
 1922              	.L97:
 580:.\main.c      ****                 break;
 581:.\main.c      ****             }
 582:.\main.c      **** 		}
 583:.\main.c      **** 
 584:.\main.c      **** 		//slight left
 585:.\main.c      **** 	} else if (sensorLogic3 == false && sensorLogic2 == false
 1923              		.loc 1 585 0
 1924 0088 484B     		ldr	r3, .L112+16
 1925 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1926 008c 002B     		cmp	r3, #0
 1927 008e 3DD1     		bne	.L102
 1928              		.loc 1 585 0 is_stmt 0 discriminator 1
 1929 0090 434B     		ldr	r3, .L112+4
 1930 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1931 0094 002B     		cmp	r3, #0
 1932 0096 39D1     		bne	.L102
 586:.\main.c      **** 			&& sensorLogic0 == false && sensorLogic1 == true && sensorLogic4 == true) {
 1933              		.loc 1 586 0 is_stmt 1
 1934 0098 424B     		ldr	r3, .L112+8
 1935 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1936 009c 002B     		cmp	r3, #0
 1937 009e 35D1     		bne	.L102
 1938              		.loc 1 586 0 is_stmt 0 discriminator 1
 1939 00a0 414B     		ldr	r3, .L112+12
 1940 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1941 00a4 012B     		cmp	r3, #1
 1942 00a6 31D1     		bne	.L102
 1943              		.loc 1 586 0 discriminator 2
 1944 00a8 3C4B     		ldr	r3, .L112
 1945 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1946 00ac 012B     		cmp	r3, #1
 1947 00ae 2DD1     		bne	.L102
 587:.\main.c      **** 
 588:.\main.c      **** 		PWM_1_WriteCompare(PWMPower);
 1948              		.loc 1 588 0 is_stmt 1
 1949 00b0 3F4B     		ldr	r3, .L112+20
 1950 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 00b4 1846     		mov	r0, r3
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 46


 1952 00b6 FFF7FEFF 		bl	PWM_1_WriteCompare
 589:.\main.c      **** 		PWM_2_WriteCompare(PWMPower-10);
 1953              		.loc 1 589 0
 1954 00ba 3D4B     		ldr	r3, .L112+20
 1955 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1956 00be 0A3B     		subs	r3, r3, #10
 1957 00c0 DBB2     		uxtb	r3, r3
 1958 00c2 1846     		mov	r0, r3
 1959 00c4 FFF7FEFF 		bl	PWM_2_WriteCompare
 590:.\main.c      **** 
 591:.\main.c      ****         incrementQuadGoal(goalQuad);
 1960              		.loc 1 591 0
 1961 00c8 3A4B     		ldr	r3, .L112+24
 1962 00ca 1B68     		ldr	r3, [r3]
 1963 00cc 1846     		mov	r0, r3
 1964 00ce FFF7FEFF 		bl	incrementQuadGoal
 592:.\main.c      **** 
 593:.\main.c      **** 		while (sensorLogic3 == false) {
 1965              		.loc 1 593 0
 1966 00d2 16E0     		b	.L103
 1967              	.L105:
 594:.\main.c      **** 			readADC3();
 1968              		.loc 1 594 0
 1969 00d4 FFF7FEFF 		bl	readADC3
 595:.\main.c      ****             stopAfterX(get_average_position(),goalQuad);
 1970              		.loc 1 595 0
 1971 00d8 FFF7FEFF 		bl	get_average_position
 1972 00dc 0246     		mov	r2, r0
 1973 00de 354B     		ldr	r3, .L112+24
 1974 00e0 1B68     		ldr	r3, [r3]
 1975 00e2 1046     		mov	r0, r2
 1976 00e4 1946     		mov	r1, r3
 1977 00e6 FFF7FEFF 		bl	stopAfterX
 596:.\main.c      ****             readADC0();
 1978              		.loc 1 596 0
 1979 00ea FFF7FEFF 		bl	readADC0
 597:.\main.c      ****             readADC2();
 1980              		.loc 1 597 0
 1981 00ee FFF7FEFF 		bl	readADC2
 598:.\main.c      ****             if (sensorLogic0 == true || sensorLogic2 == true){
 1982              		.loc 1 598 0
 1983 00f2 2C4B     		ldr	r3, .L112+8
 1984 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1985 00f6 012B     		cmp	r3, #1
 1986 00f8 07D0     		beq	.L104
 1987              		.loc 1 598 0 is_stmt 0 discriminator 1
 1988 00fa 294B     		ldr	r3, .L112+4
 1989 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1990 00fe 012B     		cmp	r3, #1
 1991 0100 03D0     		beq	.L104
 1992              	.L103:
 593:.\main.c      **** 			readADC3();
 1993              		.loc 1 593 0 is_stmt 1
 1994 0102 2A4B     		ldr	r3, .L112+16
 1995 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1996 0106 002B     		cmp	r3, #0
 1997 0108 E4D0     		beq	.L105
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 47


 1998              	.L104:
 585:.\main.c      **** 			&& sensorLogic0 == false && sensorLogic1 == true && sensorLogic4 == true) {
 1999              		.loc 1 585 0
 2000 010a 45E0     		b	.L96
 2001              	.L102:
 599:.\main.c      ****                 break;
 600:.\main.c      ****             }
 601:.\main.c      **** 		}
 602:.\main.c      ****     //sharp right turn
 603:.\main.c      **** 	} else if (sensorLogic3 == false && sensorLogic4 == false
 2002              		.loc 1 603 0
 2003 010c 274B     		ldr	r3, .L112+16
 2004 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2005 0110 002B     		cmp	r3, #0
 2006 0112 19D1     		bne	.L106
 2007              		.loc 1 603 0 is_stmt 0 discriminator 1
 2008 0114 214B     		ldr	r3, .L112
 2009 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2010 0118 002B     		cmp	r3, #0
 2011 011a 15D1     		bne	.L106
 604:.\main.c      **** 			&& sensorLogic5 == false && sensorLogic0 == true && sensorLogic1 == true) {
 2012              		.loc 1 604 0 is_stmt 1
 2013 011c 264B     		ldr	r3, .L112+28
 2014 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2015 0120 002B     		cmp	r3, #0
 2016 0122 11D1     		bne	.L106
 2017              		.loc 1 604 0 is_stmt 0 discriminator 1
 2018 0124 1F4B     		ldr	r3, .L112+8
 2019 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2020 0128 012B     		cmp	r3, #1
 2021 012a 0DD1     		bne	.L106
 2022              		.loc 1 604 0 discriminator 2
 2023 012c 1E4B     		ldr	r3, .L112+12
 2024 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2025 0130 012B     		cmp	r3, #1
 2026 0132 09D1     		bne	.L106
 605:.\main.c      **** 
 606:.\main.c      **** 		//stop();
 607:.\main.c      **** 		turnRight();
 2027              		.loc 1 607 0 is_stmt 1
 2028 0134 FFF7FEFF 		bl	turnRight
 608:.\main.c      **** 
 609:.\main.c      **** 		while (sensorLogic5 == false) {
 2029              		.loc 1 609 0
 2030 0138 01E0     		b	.L107
 2031              	.L108:
 610:.\main.c      **** 			readADC5();
 2032              		.loc 1 610 0
 2033 013a FFF7FEFF 		bl	readADC5
 2034              	.L107:
 609:.\main.c      **** 			readADC5();
 2035              		.loc 1 609 0
 2036 013e 1E4B     		ldr	r3, .L112+28
 2037 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2038 0142 002B     		cmp	r3, #0
 2039 0144 F9D0     		beq	.L108
 603:.\main.c      **** 			&& sensorLogic5 == false && sensorLogic0 == true && sensorLogic1 == true) {
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 48


 2040              		.loc 1 603 0
 2041 0146 27E0     		b	.L96
 2042              	.L106:
 611:.\main.c      **** 		}
 612:.\main.c      ****     //sharp left turn
 613:.\main.c      **** 	} else if (sensorLogic3 == false && sensorLogic4 == false
 2043              		.loc 1 613 0
 2044 0148 184B     		ldr	r3, .L112+16
 2045 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2046 014c 002B     		cmp	r3, #0
 2047 014e 19D1     		bne	.L109
 2048              		.loc 1 613 0 is_stmt 0 discriminator 1
 2049 0150 124B     		ldr	r3, .L112
 2050 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2051 0154 002B     		cmp	r3, #0
 2052 0156 15D1     		bne	.L109
 614:.\main.c      **** 			&& sensorLogic5 == false && sensorLogic2 == true && sensorLogic1 == true) {
 2053              		.loc 1 614 0 is_stmt 1
 2054 0158 174B     		ldr	r3, .L112+28
 2055 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2056 015c 002B     		cmp	r3, #0
 2057 015e 11D1     		bne	.L109
 2058              		.loc 1 614 0 is_stmt 0 discriminator 1
 2059 0160 0F4B     		ldr	r3, .L112+4
 2060 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2061 0164 012B     		cmp	r3, #1
 2062 0166 0DD1     		bne	.L109
 2063              		.loc 1 614 0 discriminator 2
 2064 0168 0F4B     		ldr	r3, .L112+12
 2065 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2066 016c 012B     		cmp	r3, #1
 2067 016e 09D1     		bne	.L109
 615:.\main.c      ****                 
 616:.\main.c      **** 		//stop();
 617:.\main.c      **** 		turnLeft();
 2068              		.loc 1 617 0 is_stmt 1
 2069 0170 FFF7FEFF 		bl	turnLeft
 618:.\main.c      **** 
 619:.\main.c      **** 		while (sensorLogic5 == false) {
 2070              		.loc 1 619 0
 2071 0174 01E0     		b	.L110
 2072              	.L111:
 620:.\main.c      **** 			readADC5();
 2073              		.loc 1 620 0
 2074 0176 FFF7FEFF 		bl	readADC5
 2075              	.L110:
 619:.\main.c      **** 			readADC5();
 2076              		.loc 1 619 0
 2077 017a 0F4B     		ldr	r3, .L112+28
 2078 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2079 017e 002B     		cmp	r3, #0
 2080 0180 F9D0     		beq	.L111
 613:.\main.c      **** 			&& sensorLogic5 == false && sensorLogic2 == true && sensorLogic1 == true) {
 2081              		.loc 1 613 0
 2082 0182 09E0     		b	.L96
 2083              	.L109:
 621:.\main.c      **** 		}
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 49


 622:.\main.c      **** 	} else {
 623:.\main.c      **** 		PWM_1_WriteCompare(PWMPower);
 2084              		.loc 1 623 0
 2085 0184 0A4B     		ldr	r3, .L112+20
 2086 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2087 0188 1846     		mov	r0, r3
 2088 018a FFF7FEFF 		bl	PWM_1_WriteCompare
 624:.\main.c      **** 		PWM_2_WriteCompare(PWMPower);
 2089              		.loc 1 624 0
 2090 018e 084B     		ldr	r3, .L112+20
 2091 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2092 0192 1846     		mov	r0, r3
 2093 0194 FFF7FEFF 		bl	PWM_2_WriteCompare
 2094              	.L96:
 625:.\main.c      **** 	}   
 626:.\main.c      ****     
 627:.\main.c      **** }
 2095              		.loc 1 627 0
 2096 0198 80BD     		pop	{r7, pc}
 2097              	.L113:
 2098 019a 00BF     		.align	2
 2099              	.L112:
 2100 019c 00000000 		.word	sensorLogic4
 2101 01a0 00000000 		.word	sensorLogic2
 2102 01a4 00000000 		.word	sensorLogic0
 2103 01a8 00000000 		.word	sensorLogic1
 2104 01ac 00000000 		.word	sensorLogic3
 2105 01b0 00000000 		.word	PWMPower
 2106 01b4 00000000 		.word	goalQuad
 2107 01b8 00000000 		.word	sensorLogic5
 2108              		.cfi_endproc
 2109              	.LFE71:
 2110              		.size	simpleCarControl, .-simpleCarControl
 2111              		.section	.text.readADC,"ax",%progbits
 2112              		.align	2
 2113              		.global	readADC
 2114              		.thumb
 2115              		.thumb_func
 2116              		.type	readADC, %function
 2117              	readADC:
 2118              	.LFB72:
 628:.\main.c      **** 
 629:.\main.c      **** void readADC() {
 2119              		.loc 1 629 0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 0
 2122              		@ frame_needed = 1, uses_anonymous_args = 0
 2123 0000 80B5     		push	{r7, lr}
 2124              		.cfi_def_cfa_offset 8
 2125              		.cfi_offset 7, -8
 2126              		.cfi_offset 14, -4
 2127 0002 00AF     		add	r7, sp, #0
 2128              		.cfi_def_cfa_register 7
 630:.\main.c      **** ///////////////////////////////////////////////////////////////////////////////////////////
 631:.\main.c      **** //sensorLogicX true (1) = on the line
 632:.\main.c      **** //sensorLogicX false (0) = NOT on the line
 633:.\main.c      **** 
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 50


 634:.\main.c      ****     if (dataready_flag == 1) {
 2129              		.loc 1 634 0
 2130 0004 9A4B     		ldr	r3, .L145
 2131 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2132 0008 012B     		cmp	r3, #1
 2133 000a 40F06081 		bne	.L115
 635:.\main.c      **** 
 636:.\main.c      ****     //---------ADC0----------------------
 637:.\main.c      ****         result0 = ADC_CountsTo_mVolts(adcvalue[0]);
 2134              		.loc 1 637 0
 2135 000e 994B     		ldr	r3, .L145+4
 2136 0010 1B88     		ldrh	r3, [r3]
 2137 0012 9BB2     		uxth	r3, r3
 2138 0014 1BB2     		sxth	r3, r3
 2139 0016 1846     		mov	r0, r3
 2140 0018 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2141 001c 0346     		mov	r3, r0
 2142 001e 9AB2     		uxth	r2, r3
 2143 0020 954B     		ldr	r3, .L145+8
 2144 0022 1A80     		strh	r2, [r3]	@ movhi
 638:.\main.c      **** 
 639:.\main.c      ****         if (result0 > 1200) {
 2145              		.loc 1 639 0
 2146 0024 944B     		ldr	r3, .L145+8
 2147 0026 1B88     		ldrh	r3, [r3]
 2148 0028 B3F5966F 		cmp	r3, #1200
 2149 002c 06D9     		bls	.L116
 640:.\main.c      ****             counter0 = 0;
 2150              		.loc 1 640 0
 2151 002e 934B     		ldr	r3, .L145+12
 2152 0030 0022     		movs	r2, #0
 2153 0032 1A80     		strh	r2, [r3]	@ movhi
 641:.\main.c      ****             sensorLogic0 = false;
 2154              		.loc 1 641 0
 2155 0034 924B     		ldr	r3, .L145+16
 2156 0036 0022     		movs	r2, #0
 2157 0038 1A70     		strb	r2, [r3]
 2158 003a 0DE0     		b	.L117
 2159              	.L116:
 642:.\main.c      ****         } else {
 643:.\main.c      ****             if (counter0 > 100) {
 2160              		.loc 1 643 0
 2161 003c 8F4B     		ldr	r3, .L145+12
 2162 003e 1B88     		ldrh	r3, [r3]
 2163 0040 642B     		cmp	r3, #100
 2164 0042 03D9     		bls	.L118
 644:.\main.c      ****                 sensorLogic0 = true;
 2165              		.loc 1 644 0
 2166 0044 8E4B     		ldr	r3, .L145+16
 2167 0046 0122     		movs	r2, #1
 2168 0048 1A70     		strb	r2, [r3]
 2169 004a 05E0     		b	.L117
 2170              	.L118:
 645:.\main.c      ****             } else {
 646:.\main.c      ****                 counter0 = counter0 + 1;
 2171              		.loc 1 646 0
 2172 004c 8B4B     		ldr	r3, .L145+12
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 51


 2173 004e 1B88     		ldrh	r3, [r3]
 2174 0050 0133     		adds	r3, r3, #1
 2175 0052 9AB2     		uxth	r2, r3
 2176 0054 894B     		ldr	r3, .L145+12
 2177 0056 1A80     		strh	r2, [r3]	@ movhi
 2178              	.L117:
 647:.\main.c      ****             }
 648:.\main.c      ****         }
 649:.\main.c      **** 
 650:.\main.c      ****         if (sensorLogic0 == false) {
 2179              		.loc 1 650 0
 2180 0058 894B     		ldr	r3, .L145+16
 2181 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2182 005c 002B     		cmp	r3, #0
 2183 005e 03D1     		bne	.L119
 651:.\main.c      ****             LED0_Write(0);
 2184              		.loc 1 651 0
 2185 0060 0020     		movs	r0, #0
 2186 0062 FFF7FEFF 		bl	LED0_Write
 2187 0066 06E0     		b	.L120
 2188              	.L119:
 652:.\main.c      ****         } else if (sensorLogic0 == true) {
 2189              		.loc 1 652 0
 2190 0068 854B     		ldr	r3, .L145+16
 2191 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2192 006c 012B     		cmp	r3, #1
 2193 006e 02D1     		bne	.L120
 653:.\main.c      ****             LED0_Write(1);
 2194              		.loc 1 653 0
 2195 0070 0120     		movs	r0, #1
 2196 0072 FFF7FEFF 		bl	LED0_Write
 2197              	.L120:
 654:.\main.c      ****         } else {
 655:.\main.c      ****         }
 656:.\main.c      **** 
 657:.\main.c      ****     //---------ADC1----------------------
 658:.\main.c      ****         result1 = ADC_CountsTo_mVolts(adcvalue[1]);
 2198              		.loc 1 658 0
 2199 0076 7F4B     		ldr	r3, .L145+4
 2200 0078 5B88     		ldrh	r3, [r3, #2]
 2201 007a 9BB2     		uxth	r3, r3
 2202 007c 1BB2     		sxth	r3, r3
 2203 007e 1846     		mov	r0, r3
 2204 0080 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2205 0084 0346     		mov	r3, r0
 2206 0086 9AB2     		uxth	r2, r3
 2207 0088 7E4B     		ldr	r3, .L145+20
 2208 008a 1A80     		strh	r2, [r3]	@ movhi
 659:.\main.c      **** 
 660:.\main.c      ****         if (result1 > 1200) {
 2209              		.loc 1 660 0
 2210 008c 7D4B     		ldr	r3, .L145+20
 2211 008e 1B88     		ldrh	r3, [r3]
 2212 0090 B3F5966F 		cmp	r3, #1200
 2213 0094 06D9     		bls	.L121
 661:.\main.c      ****             counter1 = 0;
 2214              		.loc 1 661 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 52


 2215 0096 7C4B     		ldr	r3, .L145+24
 2216 0098 0022     		movs	r2, #0
 2217 009a 1A80     		strh	r2, [r3]	@ movhi
 662:.\main.c      ****             sensorLogic1 = false;
 2218              		.loc 1 662 0
 2219 009c 7B4B     		ldr	r3, .L145+28
 2220 009e 0022     		movs	r2, #0
 2221 00a0 1A70     		strb	r2, [r3]
 2222 00a2 0DE0     		b	.L122
 2223              	.L121:
 663:.\main.c      ****         } else {
 664:.\main.c      ****             if (counter1 > 100) {
 2224              		.loc 1 664 0
 2225 00a4 784B     		ldr	r3, .L145+24
 2226 00a6 1B88     		ldrh	r3, [r3]
 2227 00a8 642B     		cmp	r3, #100
 2228 00aa 03D9     		bls	.L123
 665:.\main.c      ****                 sensorLogic1 = true;
 2229              		.loc 1 665 0
 2230 00ac 774B     		ldr	r3, .L145+28
 2231 00ae 0122     		movs	r2, #1
 2232 00b0 1A70     		strb	r2, [r3]
 2233 00b2 05E0     		b	.L122
 2234              	.L123:
 666:.\main.c      ****             } else {
 667:.\main.c      ****                 counter1 = counter1 + 1;
 2235              		.loc 1 667 0
 2236 00b4 744B     		ldr	r3, .L145+24
 2237 00b6 1B88     		ldrh	r3, [r3]
 2238 00b8 0133     		adds	r3, r3, #1
 2239 00ba 9AB2     		uxth	r2, r3
 2240 00bc 724B     		ldr	r3, .L145+24
 2241 00be 1A80     		strh	r2, [r3]	@ movhi
 2242              	.L122:
 668:.\main.c      ****             }
 669:.\main.c      ****         }
 670:.\main.c      **** 
 671:.\main.c      ****         if (sensorLogic1 == false) {
 2243              		.loc 1 671 0
 2244 00c0 724B     		ldr	r3, .L145+28
 2245 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2246 00c4 002B     		cmp	r3, #0
 2247 00c6 03D1     		bne	.L124
 672:.\main.c      ****             LED1_Write(0);
 2248              		.loc 1 672 0
 2249 00c8 0020     		movs	r0, #0
 2250 00ca FFF7FEFF 		bl	LED1_Write
 2251 00ce 06E0     		b	.L125
 2252              	.L124:
 673:.\main.c      ****         } else if (sensorLogic1 == true) {
 2253              		.loc 1 673 0
 2254 00d0 6E4B     		ldr	r3, .L145+28
 2255 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2256 00d4 012B     		cmp	r3, #1
 2257 00d6 02D1     		bne	.L125
 674:.\main.c      ****             LED1_Write(1);
 2258              		.loc 1 674 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 53


 2259 00d8 0120     		movs	r0, #1
 2260 00da FFF7FEFF 		bl	LED1_Write
 2261              	.L125:
 675:.\main.c      ****         } else {
 676:.\main.c      ****         }
 677:.\main.c      **** 
 678:.\main.c      ****     //---------ADC2----------------------
 679:.\main.c      ****         result2 = ADC_CountsTo_mVolts(adcvalue[2]);
 2262              		.loc 1 679 0
 2263 00de 654B     		ldr	r3, .L145+4
 2264 00e0 9B88     		ldrh	r3, [r3, #4]
 2265 00e2 9BB2     		uxth	r3, r3
 2266 00e4 1BB2     		sxth	r3, r3
 2267 00e6 1846     		mov	r0, r3
 2268 00e8 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2269 00ec 0346     		mov	r3, r0
 2270 00ee 9AB2     		uxth	r2, r3
 2271 00f0 674B     		ldr	r3, .L145+32
 2272 00f2 1A80     		strh	r2, [r3]	@ movhi
 680:.\main.c      **** 
 681:.\main.c      ****         if (result2 > 1200) {
 2273              		.loc 1 681 0
 2274 00f4 664B     		ldr	r3, .L145+32
 2275 00f6 1B88     		ldrh	r3, [r3]
 2276 00f8 B3F5966F 		cmp	r3, #1200
 2277 00fc 06D9     		bls	.L126
 682:.\main.c      ****             counter2 = 0;
 2278              		.loc 1 682 0
 2279 00fe 654B     		ldr	r3, .L145+36
 2280 0100 0022     		movs	r2, #0
 2281 0102 1A80     		strh	r2, [r3]	@ movhi
 683:.\main.c      ****             sensorLogic2 = false;
 2282              		.loc 1 683 0
 2283 0104 644B     		ldr	r3, .L145+40
 2284 0106 0022     		movs	r2, #0
 2285 0108 1A70     		strb	r2, [r3]
 2286 010a 0DE0     		b	.L127
 2287              	.L126:
 684:.\main.c      ****         } else {
 685:.\main.c      ****             if (counter2 > 100) {
 2288              		.loc 1 685 0
 2289 010c 614B     		ldr	r3, .L145+36
 2290 010e 1B88     		ldrh	r3, [r3]
 2291 0110 642B     		cmp	r3, #100
 2292 0112 03D9     		bls	.L128
 686:.\main.c      ****                 sensorLogic2 = true;
 2293              		.loc 1 686 0
 2294 0114 604B     		ldr	r3, .L145+40
 2295 0116 0122     		movs	r2, #1
 2296 0118 1A70     		strb	r2, [r3]
 2297 011a 05E0     		b	.L127
 2298              	.L128:
 687:.\main.c      ****             } else {
 688:.\main.c      ****                 counter2 = counter2 + 1;
 2299              		.loc 1 688 0
 2300 011c 5D4B     		ldr	r3, .L145+36
 2301 011e 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 54


 2302 0120 0133     		adds	r3, r3, #1
 2303 0122 9AB2     		uxth	r2, r3
 2304 0124 5B4B     		ldr	r3, .L145+36
 2305 0126 1A80     		strh	r2, [r3]	@ movhi
 2306              	.L127:
 689:.\main.c      ****             }
 690:.\main.c      ****         }
 691:.\main.c      **** 
 692:.\main.c      ****         if (sensorLogic2 == false) {
 2307              		.loc 1 692 0
 2308 0128 5B4B     		ldr	r3, .L145+40
 2309 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310 012c 002B     		cmp	r3, #0
 2311 012e 03D1     		bne	.L129
 693:.\main.c      ****             LED2_Write(0);
 2312              		.loc 1 693 0
 2313 0130 0020     		movs	r0, #0
 2314 0132 FFF7FEFF 		bl	LED2_Write
 2315 0136 06E0     		b	.L130
 2316              	.L129:
 694:.\main.c      ****         } else if (sensorLogic2 == true) {
 2317              		.loc 1 694 0
 2318 0138 574B     		ldr	r3, .L145+40
 2319 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 013c 012B     		cmp	r3, #1
 2321 013e 02D1     		bne	.L130
 695:.\main.c      ****             LED2_Write(1);
 2322              		.loc 1 695 0
 2323 0140 0120     		movs	r0, #1
 2324 0142 FFF7FEFF 		bl	LED2_Write
 2325              	.L130:
 696:.\main.c      ****         } else {
 697:.\main.c      ****         }
 698:.\main.c      **** 
 699:.\main.c      ****     //---------ADC3----------------------
 700:.\main.c      ****         result3 = ADC_CountsTo_mVolts(adcvalue[3]);
 2326              		.loc 1 700 0
 2327 0146 4B4B     		ldr	r3, .L145+4
 2328 0148 DB88     		ldrh	r3, [r3, #6]
 2329 014a 9BB2     		uxth	r3, r3
 2330 014c 1BB2     		sxth	r3, r3
 2331 014e 1846     		mov	r0, r3
 2332 0150 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2333 0154 0346     		mov	r3, r0
 2334 0156 9AB2     		uxth	r2, r3
 2335 0158 504B     		ldr	r3, .L145+44
 2336 015a 1A80     		strh	r2, [r3]	@ movhi
 701:.\main.c      **** 
 702:.\main.c      ****         if (result3 > 1200) {
 2337              		.loc 1 702 0
 2338 015c 4F4B     		ldr	r3, .L145+44
 2339 015e 1B88     		ldrh	r3, [r3]
 2340 0160 B3F5966F 		cmp	r3, #1200
 2341 0164 06D9     		bls	.L131
 703:.\main.c      ****             counter3 = 0;
 2342              		.loc 1 703 0
 2343 0166 4E4B     		ldr	r3, .L145+48
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 55


 2344 0168 0022     		movs	r2, #0
 2345 016a 1A80     		strh	r2, [r3]	@ movhi
 704:.\main.c      ****             sensorLogic3 = false;
 2346              		.loc 1 704 0
 2347 016c 4D4B     		ldr	r3, .L145+52
 2348 016e 0022     		movs	r2, #0
 2349 0170 1A70     		strb	r2, [r3]
 2350 0172 0DE0     		b	.L132
 2351              	.L131:
 705:.\main.c      ****         } else {
 706:.\main.c      ****             if (counter3 > 100) {
 2352              		.loc 1 706 0
 2353 0174 4A4B     		ldr	r3, .L145+48
 2354 0176 1B88     		ldrh	r3, [r3]
 2355 0178 642B     		cmp	r3, #100
 2356 017a 03D9     		bls	.L133
 707:.\main.c      ****                 sensorLogic3 = true;
 2357              		.loc 1 707 0
 2358 017c 494B     		ldr	r3, .L145+52
 2359 017e 0122     		movs	r2, #1
 2360 0180 1A70     		strb	r2, [r3]
 2361 0182 05E0     		b	.L132
 2362              	.L133:
 708:.\main.c      ****             } else {
 709:.\main.c      ****                 counter3 = counter3 + 1;
 2363              		.loc 1 709 0
 2364 0184 464B     		ldr	r3, .L145+48
 2365 0186 1B88     		ldrh	r3, [r3]
 2366 0188 0133     		adds	r3, r3, #1
 2367 018a 9AB2     		uxth	r2, r3
 2368 018c 444B     		ldr	r3, .L145+48
 2369 018e 1A80     		strh	r2, [r3]	@ movhi
 2370              	.L132:
 710:.\main.c      ****             }
 711:.\main.c      ****         }
 712:.\main.c      **** 
 713:.\main.c      ****         if (sensorLogic3 == false) {
 2371              		.loc 1 713 0
 2372 0190 444B     		ldr	r3, .L145+52
 2373 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2374 0194 002B     		cmp	r3, #0
 2375 0196 03D1     		bne	.L134
 714:.\main.c      ****             LED3_Write(0);
 2376              		.loc 1 714 0
 2377 0198 0020     		movs	r0, #0
 2378 019a FFF7FEFF 		bl	LED3_Write
 2379 019e 06E0     		b	.L135
 2380              	.L134:
 715:.\main.c      ****         } else if (sensorLogic3 == true) {
 2381              		.loc 1 715 0
 2382 01a0 404B     		ldr	r3, .L145+52
 2383 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2384 01a4 012B     		cmp	r3, #1
 2385 01a6 02D1     		bne	.L135
 716:.\main.c      ****             LED3_Write(1);
 2386              		.loc 1 716 0
 2387 01a8 0120     		movs	r0, #1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 56


 2388 01aa FFF7FEFF 		bl	LED3_Write
 2389              	.L135:
 717:.\main.c      ****         } else {
 718:.\main.c      ****         }
 719:.\main.c      **** 
 720:.\main.c      ****     //---------ADC4----------------------
 721:.\main.c      ****         result4 = ADC_CountsTo_mVolts(adcvalue[4]);
 2390              		.loc 1 721 0
 2391 01ae 314B     		ldr	r3, .L145+4
 2392 01b0 1B89     		ldrh	r3, [r3, #8]
 2393 01b2 9BB2     		uxth	r3, r3
 2394 01b4 1BB2     		sxth	r3, r3
 2395 01b6 1846     		mov	r0, r3
 2396 01b8 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2397 01bc 0346     		mov	r3, r0
 2398 01be 9AB2     		uxth	r2, r3
 2399 01c0 394B     		ldr	r3, .L145+56
 2400 01c2 1A80     		strh	r2, [r3]	@ movhi
 722:.\main.c      **** 
 723:.\main.c      ****         if (result4 > 1200) {
 2401              		.loc 1 723 0
 2402 01c4 384B     		ldr	r3, .L145+56
 2403 01c6 1B88     		ldrh	r3, [r3]
 2404 01c8 B3F5966F 		cmp	r3, #1200
 2405 01cc 06D9     		bls	.L136
 724:.\main.c      ****             counter4 = 0;
 2406              		.loc 1 724 0
 2407 01ce 374B     		ldr	r3, .L145+60
 2408 01d0 0022     		movs	r2, #0
 2409 01d2 1A80     		strh	r2, [r3]	@ movhi
 725:.\main.c      ****             sensorLogic4 = false;
 2410              		.loc 1 725 0
 2411 01d4 364B     		ldr	r3, .L145+64
 2412 01d6 0022     		movs	r2, #0
 2413 01d8 1A70     		strb	r2, [r3]
 2414 01da 0DE0     		b	.L137
 2415              	.L136:
 726:.\main.c      ****         } else {
 727:.\main.c      ****             if (counter4 > 100) {
 2416              		.loc 1 727 0
 2417 01dc 334B     		ldr	r3, .L145+60
 2418 01de 1B88     		ldrh	r3, [r3]
 2419 01e0 642B     		cmp	r3, #100
 2420 01e2 03D9     		bls	.L138
 728:.\main.c      ****                 sensorLogic4 = true;
 2421              		.loc 1 728 0
 2422 01e4 324B     		ldr	r3, .L145+64
 2423 01e6 0122     		movs	r2, #1
 2424 01e8 1A70     		strb	r2, [r3]
 2425 01ea 05E0     		b	.L137
 2426              	.L138:
 729:.\main.c      ****             } else {
 730:.\main.c      ****                 counter4 = counter4 + 1;
 2427              		.loc 1 730 0
 2428 01ec 2F4B     		ldr	r3, .L145+60
 2429 01ee 1B88     		ldrh	r3, [r3]
 2430 01f0 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 57


 2431 01f2 9AB2     		uxth	r2, r3
 2432 01f4 2D4B     		ldr	r3, .L145+60
 2433 01f6 1A80     		strh	r2, [r3]	@ movhi
 2434              	.L137:
 731:.\main.c      ****             }
 732:.\main.c      ****         }
 733:.\main.c      **** 
 734:.\main.c      ****         if (sensorLogic4 == false) {
 2435              		.loc 1 734 0
 2436 01f8 2D4B     		ldr	r3, .L145+64
 2437 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2438 01fc 002B     		cmp	r3, #0
 2439 01fe 03D1     		bne	.L139
 735:.\main.c      ****             LED4_Write(0);
 2440              		.loc 1 735 0
 2441 0200 0020     		movs	r0, #0
 2442 0202 FFF7FEFF 		bl	LED4_Write
 2443 0206 06E0     		b	.L140
 2444              	.L139:
 736:.\main.c      ****         } else if (sensorLogic4 == true) {
 2445              		.loc 1 736 0
 2446 0208 294B     		ldr	r3, .L145+64
 2447 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2448 020c 012B     		cmp	r3, #1
 2449 020e 02D1     		bne	.L140
 737:.\main.c      ****             LED4_Write(1);
 2450              		.loc 1 737 0
 2451 0210 0120     		movs	r0, #1
 2452 0212 FFF7FEFF 		bl	LED4_Write
 2453              	.L140:
 738:.\main.c      ****         } else {
 739:.\main.c      ****         }
 740:.\main.c      **** 
 741:.\main.c      ****     //---------ADC5----------------------
 742:.\main.c      ****         result5 = ADC_CountsTo_mVolts(adcvalue[5]);
 2454              		.loc 1 742 0
 2455 0216 174B     		ldr	r3, .L145+4
 2456 0218 5B89     		ldrh	r3, [r3, #10]
 2457 021a 9BB2     		uxth	r3, r3
 2458 021c 1BB2     		sxth	r3, r3
 2459 021e 1846     		mov	r0, r3
 2460 0220 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2461 0224 0346     		mov	r3, r0
 2462 0226 9AB2     		uxth	r2, r3
 2463 0228 224B     		ldr	r3, .L145+68
 2464 022a 1A80     		strh	r2, [r3]	@ movhi
 743:.\main.c      **** 
 744:.\main.c      ****         if (result5 > 1200) {
 2465              		.loc 1 744 0
 2466 022c 214B     		ldr	r3, .L145+68
 2467 022e 1B88     		ldrh	r3, [r3]
 2468 0230 B3F5966F 		cmp	r3, #1200
 2469 0234 06D9     		bls	.L141
 745:.\main.c      ****             counter5 = 0;
 2470              		.loc 1 745 0
 2471 0236 204B     		ldr	r3, .L145+72
 2472 0238 0022     		movs	r2, #0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 58


 2473 023a 1A80     		strh	r2, [r3]	@ movhi
 746:.\main.c      ****             sensorLogic5 = false;
 2474              		.loc 1 746 0
 2475 023c 1F4B     		ldr	r3, .L145+76
 2476 023e 0022     		movs	r2, #0
 2477 0240 1A70     		strb	r2, [r3]
 2478 0242 0DE0     		b	.L142
 2479              	.L141:
 747:.\main.c      ****         } else {
 748:.\main.c      ****             if (counter5 > 100) {
 2480              		.loc 1 748 0
 2481 0244 1C4B     		ldr	r3, .L145+72
 2482 0246 1B88     		ldrh	r3, [r3]
 2483 0248 642B     		cmp	r3, #100
 2484 024a 03D9     		bls	.L143
 749:.\main.c      ****                 sensorLogic5 = true;
 2485              		.loc 1 749 0
 2486 024c 1B4B     		ldr	r3, .L145+76
 2487 024e 0122     		movs	r2, #1
 2488 0250 1A70     		strb	r2, [r3]
 2489 0252 05E0     		b	.L142
 2490              	.L143:
 750:.\main.c      ****             } else {
 751:.\main.c      ****                 counter5 = counter5 + 1;
 2491              		.loc 1 751 0
 2492 0254 184B     		ldr	r3, .L145+72
 2493 0256 1B88     		ldrh	r3, [r3]
 2494 0258 0133     		adds	r3, r3, #1
 2495 025a 9AB2     		uxth	r2, r3
 2496 025c 164B     		ldr	r3, .L145+72
 2497 025e 1A80     		strh	r2, [r3]	@ movhi
 2498              	.L142:
 752:.\main.c      ****             }
 753:.\main.c      ****         }
 754:.\main.c      **** 
 755:.\main.c      ****         if (sensorLogic5 == false) {
 2499              		.loc 1 755 0
 2500 0260 164B     		ldr	r3, .L145+76
 2501 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2502 0264 002B     		cmp	r3, #0
 2503 0266 2BD1     		bne	.L144
 756:.\main.c      ****             LED5_Write(0);
 2504              		.loc 1 756 0
 2505 0268 0020     		movs	r0, #0
 2506 026a FFF7FEFF 		bl	LED5_Write
 2507 026e 2EE0     		b	.L115
 2508              	.L146:
 2509              		.align	2
 2510              	.L145:
 2511 0270 00000000 		.word	dataready_flag
 2512 0274 00000000 		.word	adcvalue
 2513 0278 00000000 		.word	result0
 2514 027c 00000000 		.word	counter0
 2515 0280 00000000 		.word	sensorLogic0
 2516 0284 00000000 		.word	result1
 2517 0288 00000000 		.word	counter1
 2518 028c 00000000 		.word	sensorLogic1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 59


 2519 0290 00000000 		.word	result2
 2520 0294 00000000 		.word	counter2
 2521 0298 00000000 		.word	sensorLogic2
 2522 029c 00000000 		.word	result3
 2523 02a0 00000000 		.word	counter3
 2524 02a4 00000000 		.word	sensorLogic3
 2525 02a8 00000000 		.word	result4
 2526 02ac 00000000 		.word	counter4
 2527 02b0 00000000 		.word	sensorLogic4
 2528 02b4 00000000 		.word	result5
 2529 02b8 00000000 		.word	counter5
 2530 02bc 00000000 		.word	sensorLogic5
 2531              	.L144:
 757:.\main.c      ****         } else if (sensorLogic5 == true) {
 2532              		.loc 1 757 0
 2533 02c0 054B     		ldr	r3, .L147
 2534 02c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2535 02c4 012B     		cmp	r3, #1
 2536 02c6 02D1     		bne	.L115
 758:.\main.c      ****             LED5_Write(1);
 2537              		.loc 1 758 0
 2538 02c8 0120     		movs	r0, #1
 2539 02ca FFF7FEFF 		bl	LED5_Write
 2540              	.L115:
 759:.\main.c      ****         } else {
 760:.\main.c      ****         }
 761:.\main.c      ****     }
 762:.\main.c      ****     dataready_flag = 0;
 2541              		.loc 1 762 0
 2542 02ce 034B     		ldr	r3, .L147+4
 2543 02d0 0022     		movs	r2, #0
 2544 02d2 1A70     		strb	r2, [r3]
 763:.\main.c      **** }
 2545              		.loc 1 763 0
 2546 02d4 80BD     		pop	{r7, pc}
 2547              	.L148:
 2548 02d6 00BF     		.align	2
 2549              	.L147:
 2550 02d8 00000000 		.word	sensorLogic5
 2551 02dc 00000000 		.word	dataready_flag
 2552              		.cfi_endproc
 2553              	.LFE72:
 2554              		.size	readADC, .-readADC
 2555              		.section	.text.readADC0,"ax",%progbits
 2556              		.align	2
 2557              		.global	readADC0
 2558              		.thumb
 2559              		.thumb_func
 2560              		.type	readADC0, %function
 2561              	readADC0:
 2562              	.LFB73:
 764:.\main.c      **** 
 765:.\main.c      **** void readADC0() {
 2563              		.loc 1 765 0
 2564              		.cfi_startproc
 2565              		@ args = 0, pretend = 0, frame = 0
 2566              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 60


 2567 0000 80B5     		push	{r7, lr}
 2568              		.cfi_def_cfa_offset 8
 2569              		.cfi_offset 7, -8
 2570              		.cfi_offset 14, -4
 2571 0002 00AF     		add	r7, sp, #0
 2572              		.cfi_def_cfa_register 7
 766:.\main.c      ****     if (dataready_flag == 1) {
 2573              		.loc 1 766 0
 2574 0004 164B     		ldr	r3, .L154
 2575 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2576 0008 012B     		cmp	r3, #1
 2577 000a 27D1     		bne	.L149
 767:.\main.c      ****         result0 = ADC_CountsTo_mVolts(adcvalue[0]);
 2578              		.loc 1 767 0
 2579 000c 154B     		ldr	r3, .L154+4
 2580 000e 1B88     		ldrh	r3, [r3]
 2581 0010 9BB2     		uxth	r3, r3
 2582 0012 1BB2     		sxth	r3, r3
 2583 0014 1846     		mov	r0, r3
 2584 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2585 001a 0346     		mov	r3, r0
 2586 001c 9AB2     		uxth	r2, r3
 2587 001e 124B     		ldr	r3, .L154+8
 2588 0020 1A80     		strh	r2, [r3]	@ movhi
 768:.\main.c      **** 
 769:.\main.c      ****         if (result0 > 1200) {
 2589              		.loc 1 769 0
 2590 0022 114B     		ldr	r3, .L154+8
 2591 0024 1B88     		ldrh	r3, [r3]
 2592 0026 B3F5966F 		cmp	r3, #1200
 2593 002a 06D9     		bls	.L151
 770:.\main.c      ****             counter0 = 0;
 2594              		.loc 1 770 0
 2595 002c 0F4B     		ldr	r3, .L154+12
 2596 002e 0022     		movs	r2, #0
 2597 0030 1A80     		strh	r2, [r3]	@ movhi
 771:.\main.c      ****             sensorLogic0 = false;
 2598              		.loc 1 771 0
 2599 0032 0F4B     		ldr	r3, .L154+16
 2600 0034 0022     		movs	r2, #0
 2601 0036 1A70     		strb	r2, [r3]
 2602 0038 0DE0     		b	.L152
 2603              	.L151:
 772:.\main.c      ****         } else {
 773:.\main.c      ****             if (counter0 > 100) {
 2604              		.loc 1 773 0
 2605 003a 0C4B     		ldr	r3, .L154+12
 2606 003c 1B88     		ldrh	r3, [r3]
 2607 003e 642B     		cmp	r3, #100
 2608 0040 03D9     		bls	.L153
 774:.\main.c      ****                 sensorLogic0 = true;
 2609              		.loc 1 774 0
 2610 0042 0B4B     		ldr	r3, .L154+16
 2611 0044 0122     		movs	r2, #1
 2612 0046 1A70     		strb	r2, [r3]
 2613 0048 05E0     		b	.L152
 2614              	.L153:
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 61


 775:.\main.c      ****             } else {
 776:.\main.c      ****                 counter0 = counter0 + 1;
 2615              		.loc 1 776 0
 2616 004a 084B     		ldr	r3, .L154+12
 2617 004c 1B88     		ldrh	r3, [r3]
 2618 004e 0133     		adds	r3, r3, #1
 2619 0050 9AB2     		uxth	r2, r3
 2620 0052 064B     		ldr	r3, .L154+12
 2621 0054 1A80     		strh	r2, [r3]	@ movhi
 2622              	.L152:
 777:.\main.c      ****             }
 778:.\main.c      ****         }
 779:.\main.c      **** 
 780:.\main.c      ****         dataready_flag = 0;
 2623              		.loc 1 780 0
 2624 0056 024B     		ldr	r3, .L154
 2625 0058 0022     		movs	r2, #0
 2626 005a 1A70     		strb	r2, [r3]
 2627              	.L149:
 781:.\main.c      ****     }
 782:.\main.c      **** }
 2628              		.loc 1 782 0
 2629 005c 80BD     		pop	{r7, pc}
 2630              	.L155:
 2631 005e 00BF     		.align	2
 2632              	.L154:
 2633 0060 00000000 		.word	dataready_flag
 2634 0064 00000000 		.word	adcvalue
 2635 0068 00000000 		.word	result0
 2636 006c 00000000 		.word	counter0
 2637 0070 00000000 		.word	sensorLogic0
 2638              		.cfi_endproc
 2639              	.LFE73:
 2640              		.size	readADC0, .-readADC0
 2641              		.section	.text.readADC1,"ax",%progbits
 2642              		.align	2
 2643              		.global	readADC1
 2644              		.thumb
 2645              		.thumb_func
 2646              		.type	readADC1, %function
 2647              	readADC1:
 2648              	.LFB74:
 783:.\main.c      **** 
 784:.\main.c      **** void readADC1() {
 2649              		.loc 1 784 0
 2650              		.cfi_startproc
 2651              		@ args = 0, pretend = 0, frame = 0
 2652              		@ frame_needed = 1, uses_anonymous_args = 0
 2653 0000 80B5     		push	{r7, lr}
 2654              		.cfi_def_cfa_offset 8
 2655              		.cfi_offset 7, -8
 2656              		.cfi_offset 14, -4
 2657 0002 00AF     		add	r7, sp, #0
 2658              		.cfi_def_cfa_register 7
 785:.\main.c      ****     if (dataready_flag == 1) {
 2659              		.loc 1 785 0
 2660 0004 164B     		ldr	r3, .L161
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 62


 2661 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2662 0008 012B     		cmp	r3, #1
 2663 000a 27D1     		bne	.L156
 786:.\main.c      ****         result1 = ADC_CountsTo_mVolts(adcvalue[1]);
 2664              		.loc 1 786 0
 2665 000c 154B     		ldr	r3, .L161+4
 2666 000e 5B88     		ldrh	r3, [r3, #2]
 2667 0010 9BB2     		uxth	r3, r3
 2668 0012 1BB2     		sxth	r3, r3
 2669 0014 1846     		mov	r0, r3
 2670 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2671 001a 0346     		mov	r3, r0
 2672 001c 9AB2     		uxth	r2, r3
 2673 001e 124B     		ldr	r3, .L161+8
 2674 0020 1A80     		strh	r2, [r3]	@ movhi
 787:.\main.c      **** 
 788:.\main.c      ****         if (result1 > 1200) {
 2675              		.loc 1 788 0
 2676 0022 114B     		ldr	r3, .L161+8
 2677 0024 1B88     		ldrh	r3, [r3]
 2678 0026 B3F5966F 		cmp	r3, #1200
 2679 002a 06D9     		bls	.L158
 789:.\main.c      ****             counter1 = 0;
 2680              		.loc 1 789 0
 2681 002c 0F4B     		ldr	r3, .L161+12
 2682 002e 0022     		movs	r2, #0
 2683 0030 1A80     		strh	r2, [r3]	@ movhi
 790:.\main.c      ****             sensorLogic1 = false;
 2684              		.loc 1 790 0
 2685 0032 0F4B     		ldr	r3, .L161+16
 2686 0034 0022     		movs	r2, #0
 2687 0036 1A70     		strb	r2, [r3]
 2688 0038 0DE0     		b	.L159
 2689              	.L158:
 791:.\main.c      ****         } else {
 792:.\main.c      ****             if (counter1 > 100) {
 2690              		.loc 1 792 0
 2691 003a 0C4B     		ldr	r3, .L161+12
 2692 003c 1B88     		ldrh	r3, [r3]
 2693 003e 642B     		cmp	r3, #100
 2694 0040 03D9     		bls	.L160
 793:.\main.c      ****                 sensorLogic1 = true;
 2695              		.loc 1 793 0
 2696 0042 0B4B     		ldr	r3, .L161+16
 2697 0044 0122     		movs	r2, #1
 2698 0046 1A70     		strb	r2, [r3]
 2699 0048 05E0     		b	.L159
 2700              	.L160:
 794:.\main.c      ****             } else {
 795:.\main.c      ****                 counter1 = counter1 + 1;
 2701              		.loc 1 795 0
 2702 004a 084B     		ldr	r3, .L161+12
 2703 004c 1B88     		ldrh	r3, [r3]
 2704 004e 0133     		adds	r3, r3, #1
 2705 0050 9AB2     		uxth	r2, r3
 2706 0052 064B     		ldr	r3, .L161+12
 2707 0054 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 63


 2708              	.L159:
 796:.\main.c      ****             }
 797:.\main.c      ****         }
 798:.\main.c      **** 
 799:.\main.c      ****         dataready_flag = 0;
 2709              		.loc 1 799 0
 2710 0056 024B     		ldr	r3, .L161
 2711 0058 0022     		movs	r2, #0
 2712 005a 1A70     		strb	r2, [r3]
 2713              	.L156:
 800:.\main.c      ****     }
 801:.\main.c      **** }
 2714              		.loc 1 801 0
 2715 005c 80BD     		pop	{r7, pc}
 2716              	.L162:
 2717 005e 00BF     		.align	2
 2718              	.L161:
 2719 0060 00000000 		.word	dataready_flag
 2720 0064 00000000 		.word	adcvalue
 2721 0068 00000000 		.word	result1
 2722 006c 00000000 		.word	counter1
 2723 0070 00000000 		.word	sensorLogic1
 2724              		.cfi_endproc
 2725              	.LFE74:
 2726              		.size	readADC1, .-readADC1
 2727              		.section	.text.readADC2,"ax",%progbits
 2728              		.align	2
 2729              		.global	readADC2
 2730              		.thumb
 2731              		.thumb_func
 2732              		.type	readADC2, %function
 2733              	readADC2:
 2734              	.LFB75:
 802:.\main.c      **** 
 803:.\main.c      **** void readADC2() {
 2735              		.loc 1 803 0
 2736              		.cfi_startproc
 2737              		@ args = 0, pretend = 0, frame = 0
 2738              		@ frame_needed = 1, uses_anonymous_args = 0
 2739 0000 80B5     		push	{r7, lr}
 2740              		.cfi_def_cfa_offset 8
 2741              		.cfi_offset 7, -8
 2742              		.cfi_offset 14, -4
 2743 0002 00AF     		add	r7, sp, #0
 2744              		.cfi_def_cfa_register 7
 804:.\main.c      ****     if (dataready_flag == 1) {
 2745              		.loc 1 804 0
 2746 0004 164B     		ldr	r3, .L168
 2747 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2748 0008 012B     		cmp	r3, #1
 2749 000a 27D1     		bne	.L163
 805:.\main.c      ****         result2 = ADC_CountsTo_mVolts(adcvalue[2]);
 2750              		.loc 1 805 0
 2751 000c 154B     		ldr	r3, .L168+4
 2752 000e 9B88     		ldrh	r3, [r3, #4]
 2753 0010 9BB2     		uxth	r3, r3
 2754 0012 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 64


 2755 0014 1846     		mov	r0, r3
 2756 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2757 001a 0346     		mov	r3, r0
 2758 001c 9AB2     		uxth	r2, r3
 2759 001e 124B     		ldr	r3, .L168+8
 2760 0020 1A80     		strh	r2, [r3]	@ movhi
 806:.\main.c      **** 
 807:.\main.c      ****         if (result2 > 1200) {
 2761              		.loc 1 807 0
 2762 0022 114B     		ldr	r3, .L168+8
 2763 0024 1B88     		ldrh	r3, [r3]
 2764 0026 B3F5966F 		cmp	r3, #1200
 2765 002a 06D9     		bls	.L165
 808:.\main.c      ****             counter2 = 0;
 2766              		.loc 1 808 0
 2767 002c 0F4B     		ldr	r3, .L168+12
 2768 002e 0022     		movs	r2, #0
 2769 0030 1A80     		strh	r2, [r3]	@ movhi
 809:.\main.c      ****             sensorLogic2 = false;
 2770              		.loc 1 809 0
 2771 0032 0F4B     		ldr	r3, .L168+16
 2772 0034 0022     		movs	r2, #0
 2773 0036 1A70     		strb	r2, [r3]
 2774 0038 0DE0     		b	.L166
 2775              	.L165:
 810:.\main.c      ****         } else {
 811:.\main.c      ****             if (counter2 > 100) {
 2776              		.loc 1 811 0
 2777 003a 0C4B     		ldr	r3, .L168+12
 2778 003c 1B88     		ldrh	r3, [r3]
 2779 003e 642B     		cmp	r3, #100
 2780 0040 03D9     		bls	.L167
 812:.\main.c      ****                 sensorLogic2 = true;
 2781              		.loc 1 812 0
 2782 0042 0B4B     		ldr	r3, .L168+16
 2783 0044 0122     		movs	r2, #1
 2784 0046 1A70     		strb	r2, [r3]
 2785 0048 05E0     		b	.L166
 2786              	.L167:
 813:.\main.c      ****             } else {
 814:.\main.c      ****                 counter2 = counter2 + 1;
 2787              		.loc 1 814 0
 2788 004a 084B     		ldr	r3, .L168+12
 2789 004c 1B88     		ldrh	r3, [r3]
 2790 004e 0133     		adds	r3, r3, #1
 2791 0050 9AB2     		uxth	r2, r3
 2792 0052 064B     		ldr	r3, .L168+12
 2793 0054 1A80     		strh	r2, [r3]	@ movhi
 2794              	.L166:
 815:.\main.c      ****             }
 816:.\main.c      ****         }
 817:.\main.c      **** 
 818:.\main.c      ****         dataready_flag = 0;
 2795              		.loc 1 818 0
 2796 0056 024B     		ldr	r3, .L168
 2797 0058 0022     		movs	r2, #0
 2798 005a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 65


 2799              	.L163:
 819:.\main.c      ****     }
 820:.\main.c      **** }
 2800              		.loc 1 820 0
 2801 005c 80BD     		pop	{r7, pc}
 2802              	.L169:
 2803 005e 00BF     		.align	2
 2804              	.L168:
 2805 0060 00000000 		.word	dataready_flag
 2806 0064 00000000 		.word	adcvalue
 2807 0068 00000000 		.word	result2
 2808 006c 00000000 		.word	counter2
 2809 0070 00000000 		.word	sensorLogic2
 2810              		.cfi_endproc
 2811              	.LFE75:
 2812              		.size	readADC2, .-readADC2
 2813              		.section	.text.readADC3,"ax",%progbits
 2814              		.align	2
 2815              		.global	readADC3
 2816              		.thumb
 2817              		.thumb_func
 2818              		.type	readADC3, %function
 2819              	readADC3:
 2820              	.LFB76:
 821:.\main.c      **** 
 822:.\main.c      **** void readADC3() {
 2821              		.loc 1 822 0
 2822              		.cfi_startproc
 2823              		@ args = 0, pretend = 0, frame = 0
 2824              		@ frame_needed = 1, uses_anonymous_args = 0
 2825 0000 80B5     		push	{r7, lr}
 2826              		.cfi_def_cfa_offset 8
 2827              		.cfi_offset 7, -8
 2828              		.cfi_offset 14, -4
 2829 0002 00AF     		add	r7, sp, #0
 2830              		.cfi_def_cfa_register 7
 823:.\main.c      ****     if (dataready_flag == 1) {
 2831              		.loc 1 823 0
 2832 0004 164B     		ldr	r3, .L175
 2833 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2834 0008 012B     		cmp	r3, #1
 2835 000a 27D1     		bne	.L170
 824:.\main.c      ****         result3 = ADC_CountsTo_mVolts(adcvalue[3]);
 2836              		.loc 1 824 0
 2837 000c 154B     		ldr	r3, .L175+4
 2838 000e DB88     		ldrh	r3, [r3, #6]
 2839 0010 9BB2     		uxth	r3, r3
 2840 0012 1BB2     		sxth	r3, r3
 2841 0014 1846     		mov	r0, r3
 2842 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2843 001a 0346     		mov	r3, r0
 2844 001c 9AB2     		uxth	r2, r3
 2845 001e 124B     		ldr	r3, .L175+8
 2846 0020 1A80     		strh	r2, [r3]	@ movhi
 825:.\main.c      **** 
 826:.\main.c      ****         if (result3 > 1200) {
 2847              		.loc 1 826 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 66


 2848 0022 114B     		ldr	r3, .L175+8
 2849 0024 1B88     		ldrh	r3, [r3]
 2850 0026 B3F5966F 		cmp	r3, #1200
 2851 002a 06D9     		bls	.L172
 827:.\main.c      ****             counter3 = 0;
 2852              		.loc 1 827 0
 2853 002c 0F4B     		ldr	r3, .L175+12
 2854 002e 0022     		movs	r2, #0
 2855 0030 1A80     		strh	r2, [r3]	@ movhi
 828:.\main.c      ****             sensorLogic3 = false;
 2856              		.loc 1 828 0
 2857 0032 0F4B     		ldr	r3, .L175+16
 2858 0034 0022     		movs	r2, #0
 2859 0036 1A70     		strb	r2, [r3]
 2860 0038 0DE0     		b	.L173
 2861              	.L172:
 829:.\main.c      ****         } else {
 830:.\main.c      ****             if (counter3 > 100) {
 2862              		.loc 1 830 0
 2863 003a 0C4B     		ldr	r3, .L175+12
 2864 003c 1B88     		ldrh	r3, [r3]
 2865 003e 642B     		cmp	r3, #100
 2866 0040 03D9     		bls	.L174
 831:.\main.c      ****                 sensorLogic3 = true;
 2867              		.loc 1 831 0
 2868 0042 0B4B     		ldr	r3, .L175+16
 2869 0044 0122     		movs	r2, #1
 2870 0046 1A70     		strb	r2, [r3]
 2871 0048 05E0     		b	.L173
 2872              	.L174:
 832:.\main.c      ****             } else {
 833:.\main.c      ****                 counter3 = counter3 + 1;
 2873              		.loc 1 833 0
 2874 004a 084B     		ldr	r3, .L175+12
 2875 004c 1B88     		ldrh	r3, [r3]
 2876 004e 0133     		adds	r3, r3, #1
 2877 0050 9AB2     		uxth	r2, r3
 2878 0052 064B     		ldr	r3, .L175+12
 2879 0054 1A80     		strh	r2, [r3]	@ movhi
 2880              	.L173:
 834:.\main.c      ****             }
 835:.\main.c      ****         }
 836:.\main.c      **** 
 837:.\main.c      ****         dataready_flag = 0;
 2881              		.loc 1 837 0
 2882 0056 024B     		ldr	r3, .L175
 2883 0058 0022     		movs	r2, #0
 2884 005a 1A70     		strb	r2, [r3]
 2885              	.L170:
 838:.\main.c      ****     }
 839:.\main.c      **** }
 2886              		.loc 1 839 0
 2887 005c 80BD     		pop	{r7, pc}
 2888              	.L176:
 2889 005e 00BF     		.align	2
 2890              	.L175:
 2891 0060 00000000 		.word	dataready_flag
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 67


 2892 0064 00000000 		.word	adcvalue
 2893 0068 00000000 		.word	result3
 2894 006c 00000000 		.word	counter3
 2895 0070 00000000 		.word	sensorLogic3
 2896              		.cfi_endproc
 2897              	.LFE76:
 2898              		.size	readADC3, .-readADC3
 2899              		.section	.text.readADC4,"ax",%progbits
 2900              		.align	2
 2901              		.global	readADC4
 2902              		.thumb
 2903              		.thumb_func
 2904              		.type	readADC4, %function
 2905              	readADC4:
 2906              	.LFB77:
 840:.\main.c      **** 
 841:.\main.c      **** void readADC4() {
 2907              		.loc 1 841 0
 2908              		.cfi_startproc
 2909              		@ args = 0, pretend = 0, frame = 0
 2910              		@ frame_needed = 1, uses_anonymous_args = 0
 2911 0000 80B5     		push	{r7, lr}
 2912              		.cfi_def_cfa_offset 8
 2913              		.cfi_offset 7, -8
 2914              		.cfi_offset 14, -4
 2915 0002 00AF     		add	r7, sp, #0
 2916              		.cfi_def_cfa_register 7
 842:.\main.c      ****     if (dataready_flag == 1) {
 2917              		.loc 1 842 0
 2918 0004 164B     		ldr	r3, .L182
 2919 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2920 0008 012B     		cmp	r3, #1
 2921 000a 27D1     		bne	.L177
 843:.\main.c      ****         result4 = ADC_CountsTo_mVolts(adcvalue[4]);
 2922              		.loc 1 843 0
 2923 000c 154B     		ldr	r3, .L182+4
 2924 000e 1B89     		ldrh	r3, [r3, #8]
 2925 0010 9BB2     		uxth	r3, r3
 2926 0012 1BB2     		sxth	r3, r3
 2927 0014 1846     		mov	r0, r3
 2928 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2929 001a 0346     		mov	r3, r0
 2930 001c 9AB2     		uxth	r2, r3
 2931 001e 124B     		ldr	r3, .L182+8
 2932 0020 1A80     		strh	r2, [r3]	@ movhi
 844:.\main.c      **** 
 845:.\main.c      ****         if (result4 > 1200) {
 2933              		.loc 1 845 0
 2934 0022 114B     		ldr	r3, .L182+8
 2935 0024 1B88     		ldrh	r3, [r3]
 2936 0026 B3F5966F 		cmp	r3, #1200
 2937 002a 06D9     		bls	.L179
 846:.\main.c      ****             counter4 = 0;
 2938              		.loc 1 846 0
 2939 002c 0F4B     		ldr	r3, .L182+12
 2940 002e 0022     		movs	r2, #0
 2941 0030 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 68


 847:.\main.c      ****             sensorLogic4 = false;
 2942              		.loc 1 847 0
 2943 0032 0F4B     		ldr	r3, .L182+16
 2944 0034 0022     		movs	r2, #0
 2945 0036 1A70     		strb	r2, [r3]
 2946 0038 0DE0     		b	.L180
 2947              	.L179:
 848:.\main.c      ****         } else {
 849:.\main.c      ****             if (counter4 > 100) {
 2948              		.loc 1 849 0
 2949 003a 0C4B     		ldr	r3, .L182+12
 2950 003c 1B88     		ldrh	r3, [r3]
 2951 003e 642B     		cmp	r3, #100
 2952 0040 03D9     		bls	.L181
 850:.\main.c      ****                 sensorLogic4 = true;
 2953              		.loc 1 850 0
 2954 0042 0B4B     		ldr	r3, .L182+16
 2955 0044 0122     		movs	r2, #1
 2956 0046 1A70     		strb	r2, [r3]
 2957 0048 05E0     		b	.L180
 2958              	.L181:
 851:.\main.c      ****             } else {
 852:.\main.c      ****                 counter4 = counter4 + 1;
 2959              		.loc 1 852 0
 2960 004a 084B     		ldr	r3, .L182+12
 2961 004c 1B88     		ldrh	r3, [r3]
 2962 004e 0133     		adds	r3, r3, #1
 2963 0050 9AB2     		uxth	r2, r3
 2964 0052 064B     		ldr	r3, .L182+12
 2965 0054 1A80     		strh	r2, [r3]	@ movhi
 2966              	.L180:
 853:.\main.c      ****             }
 854:.\main.c      ****         }
 855:.\main.c      **** 
 856:.\main.c      ****         dataready_flag = 0;
 2967              		.loc 1 856 0
 2968 0056 024B     		ldr	r3, .L182
 2969 0058 0022     		movs	r2, #0
 2970 005a 1A70     		strb	r2, [r3]
 2971              	.L177:
 857:.\main.c      ****     }
 858:.\main.c      **** }
 2972              		.loc 1 858 0
 2973 005c 80BD     		pop	{r7, pc}
 2974              	.L183:
 2975 005e 00BF     		.align	2
 2976              	.L182:
 2977 0060 00000000 		.word	dataready_flag
 2978 0064 00000000 		.word	adcvalue
 2979 0068 00000000 		.word	result4
 2980 006c 00000000 		.word	counter4
 2981 0070 00000000 		.word	sensorLogic4
 2982              		.cfi_endproc
 2983              	.LFE77:
 2984              		.size	readADC4, .-readADC4
 2985              		.section	.text.readADC5,"ax",%progbits
 2986              		.align	2
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 69


 2987              		.global	readADC5
 2988              		.thumb
 2989              		.thumb_func
 2990              		.type	readADC5, %function
 2991              	readADC5:
 2992              	.LFB78:
 859:.\main.c      **** 
 860:.\main.c      **** void readADC5() {
 2993              		.loc 1 860 0
 2994              		.cfi_startproc
 2995              		@ args = 0, pretend = 0, frame = 0
 2996              		@ frame_needed = 1, uses_anonymous_args = 0
 2997 0000 80B5     		push	{r7, lr}
 2998              		.cfi_def_cfa_offset 8
 2999              		.cfi_offset 7, -8
 3000              		.cfi_offset 14, -4
 3001 0002 00AF     		add	r7, sp, #0
 3002              		.cfi_def_cfa_register 7
 861:.\main.c      ****     if (dataready_flag == 1) {
 3003              		.loc 1 861 0
 3004 0004 164B     		ldr	r3, .L189
 3005 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3006 0008 012B     		cmp	r3, #1
 3007 000a 27D1     		bne	.L184
 862:.\main.c      ****         result5 = ADC_CountsTo_mVolts(adcvalue[5]);
 3008              		.loc 1 862 0
 3009 000c 154B     		ldr	r3, .L189+4
 3010 000e 5B89     		ldrh	r3, [r3, #10]
 3011 0010 9BB2     		uxth	r3, r3
 3012 0012 1BB2     		sxth	r3, r3
 3013 0014 1846     		mov	r0, r3
 3014 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 3015 001a 0346     		mov	r3, r0
 3016 001c 9AB2     		uxth	r2, r3
 3017 001e 124B     		ldr	r3, .L189+8
 3018 0020 1A80     		strh	r2, [r3]	@ movhi
 863:.\main.c      **** 
 864:.\main.c      ****         if (result5 > 1200) {
 3019              		.loc 1 864 0
 3020 0022 114B     		ldr	r3, .L189+8
 3021 0024 1B88     		ldrh	r3, [r3]
 3022 0026 B3F5966F 		cmp	r3, #1200
 3023 002a 06D9     		bls	.L186
 865:.\main.c      ****             counter5 = 0;
 3024              		.loc 1 865 0
 3025 002c 0F4B     		ldr	r3, .L189+12
 3026 002e 0022     		movs	r2, #0
 3027 0030 1A80     		strh	r2, [r3]	@ movhi
 866:.\main.c      ****             sensorLogic5 = false;
 3028              		.loc 1 866 0
 3029 0032 0F4B     		ldr	r3, .L189+16
 3030 0034 0022     		movs	r2, #0
 3031 0036 1A70     		strb	r2, [r3]
 3032 0038 0DE0     		b	.L187
 3033              	.L186:
 867:.\main.c      ****         } else {
 868:.\main.c      ****             if (counter5 > 100) {
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 70


 3034              		.loc 1 868 0
 3035 003a 0C4B     		ldr	r3, .L189+12
 3036 003c 1B88     		ldrh	r3, [r3]
 3037 003e 642B     		cmp	r3, #100
 3038 0040 03D9     		bls	.L188
 869:.\main.c      ****                 sensorLogic5 = true;
 3039              		.loc 1 869 0
 3040 0042 0B4B     		ldr	r3, .L189+16
 3041 0044 0122     		movs	r2, #1
 3042 0046 1A70     		strb	r2, [r3]
 3043 0048 05E0     		b	.L187
 3044              	.L188:
 870:.\main.c      ****             } else {
 871:.\main.c      ****                 counter5 = counter5 + 1;
 3045              		.loc 1 871 0
 3046 004a 084B     		ldr	r3, .L189+12
 3047 004c 1B88     		ldrh	r3, [r3]
 3048 004e 0133     		adds	r3, r3, #1
 3049 0050 9AB2     		uxth	r2, r3
 3050 0052 064B     		ldr	r3, .L189+12
 3051 0054 1A80     		strh	r2, [r3]	@ movhi
 3052              	.L187:
 872:.\main.c      ****             }
 873:.\main.c      ****         }
 874:.\main.c      **** 
 875:.\main.c      ****         dataready_flag = 0;
 3053              		.loc 1 875 0
 3054 0056 024B     		ldr	r3, .L189
 3055 0058 0022     		movs	r2, #0
 3056 005a 1A70     		strb	r2, [r3]
 3057              	.L184:
 876:.\main.c      ****     }
 877:.\main.c      **** }
 3058              		.loc 1 877 0
 3059 005c 80BD     		pop	{r7, pc}
 3060              	.L190:
 3061 005e 00BF     		.align	2
 3062              	.L189:
 3063 0060 00000000 		.word	dataready_flag
 3064 0064 00000000 		.word	adcvalue
 3065 0068 00000000 		.word	result5
 3066 006c 00000000 		.word	counter5
 3067 0070 00000000 		.word	sensorLogic5
 3068              		.cfi_endproc
 3069              	.LFE78:
 3070              		.size	readADC5, .-readADC5
 3071              		.section	.text.readADC6,"ax",%progbits
 3072              		.align	2
 3073              		.global	readADC6
 3074              		.thumb
 3075              		.thumb_func
 3076              		.type	readADC6, %function
 3077              	readADC6:
 3078              	.LFB79:
 878:.\main.c      **** 
 879:.\main.c      **** void readADC6() {
 3079              		.loc 1 879 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 71


 3080              		.cfi_startproc
 3081              		@ args = 0, pretend = 0, frame = 0
 3082              		@ frame_needed = 1, uses_anonymous_args = 0
 3083 0000 80B5     		push	{r7, lr}
 3084              		.cfi_def_cfa_offset 8
 3085              		.cfi_offset 7, -8
 3086              		.cfi_offset 14, -4
 3087 0002 00AF     		add	r7, sp, #0
 3088              		.cfi_def_cfa_register 7
 880:.\main.c      ****     if (dataready_flag == 1) {
 3089              		.loc 1 880 0
 3090 0004 164B     		ldr	r3, .L196
 3091 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3092 0008 012B     		cmp	r3, #1
 3093 000a 27D1     		bne	.L191
 881:.\main.c      ****         result6 = ADC_CountsTo_mVolts(adcvalue[6]);
 3094              		.loc 1 881 0
 3095 000c 154B     		ldr	r3, .L196+4
 3096 000e 9B89     		ldrh	r3, [r3, #12]
 3097 0010 9BB2     		uxth	r3, r3
 3098 0012 1BB2     		sxth	r3, r3
 3099 0014 1846     		mov	r0, r3
 3100 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 3101 001a 0346     		mov	r3, r0
 3102 001c 9AB2     		uxth	r2, r3
 3103 001e 124B     		ldr	r3, .L196+8
 3104 0020 1A80     		strh	r2, [r3]	@ movhi
 882:.\main.c      **** 
 883:.\main.c      ****         if (result6 > 1200) {
 3105              		.loc 1 883 0
 3106 0022 114B     		ldr	r3, .L196+8
 3107 0024 1B88     		ldrh	r3, [r3]
 3108 0026 B3F5966F 		cmp	r3, #1200
 3109 002a 06D9     		bls	.L193
 884:.\main.c      ****             counter6 = 0;
 3110              		.loc 1 884 0
 3111 002c 0F4B     		ldr	r3, .L196+12
 3112 002e 0022     		movs	r2, #0
 3113 0030 1A80     		strh	r2, [r3]	@ movhi
 885:.\main.c      ****             sensorLogic6 = false;
 3114              		.loc 1 885 0
 3115 0032 0F4B     		ldr	r3, .L196+16
 3116 0034 0022     		movs	r2, #0
 3117 0036 1A70     		strb	r2, [r3]
 3118 0038 0DE0     		b	.L194
 3119              	.L193:
 886:.\main.c      ****         } else {
 887:.\main.c      ****             if (counter6 > 100) {
 3120              		.loc 1 887 0
 3121 003a 0C4B     		ldr	r3, .L196+12
 3122 003c 1B88     		ldrh	r3, [r3]
 3123 003e 642B     		cmp	r3, #100
 3124 0040 03D9     		bls	.L195
 888:.\main.c      ****                 sensorLogic6 = true;
 3125              		.loc 1 888 0
 3126 0042 0B4B     		ldr	r3, .L196+16
 3127 0044 0122     		movs	r2, #1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 72


 3128 0046 1A70     		strb	r2, [r3]
 3129 0048 05E0     		b	.L194
 3130              	.L195:
 889:.\main.c      ****             } else {
 890:.\main.c      ****                 counter6 = counter6 + 1;
 3131              		.loc 1 890 0
 3132 004a 084B     		ldr	r3, .L196+12
 3133 004c 1B88     		ldrh	r3, [r3]
 3134 004e 0133     		adds	r3, r3, #1
 3135 0050 9AB2     		uxth	r2, r3
 3136 0052 064B     		ldr	r3, .L196+12
 3137 0054 1A80     		strh	r2, [r3]	@ movhi
 3138              	.L194:
 891:.\main.c      ****             }
 892:.\main.c      ****         }
 893:.\main.c      **** 
 894:.\main.c      ****         dataready_flag = 0;
 3139              		.loc 1 894 0
 3140 0056 024B     		ldr	r3, .L196
 3141 0058 0022     		movs	r2, #0
 3142 005a 1A70     		strb	r2, [r3]
 3143              	.L191:
 895:.\main.c      ****     }
 896:.\main.c      **** }
 3144              		.loc 1 896 0
 3145 005c 80BD     		pop	{r7, pc}
 3146              	.L197:
 3147 005e 00BF     		.align	2
 3148              	.L196:
 3149 0060 00000000 		.word	dataready_flag
 3150 0064 00000000 		.word	adcvalue
 3151 0068 00000000 		.word	result6
 3152 006c 00000000 		.word	counter6
 3153 0070 00000000 		.word	sensorLogic6
 3154              		.cfi_endproc
 3155              	.LFE79:
 3156              		.size	readADC6, .-readADC6
 3157              		.section	.text.turnLeft,"ax",%progbits
 3158              		.align	2
 3159              		.global	turnLeft
 3160              		.thumb
 3161              		.thumb_func
 3162              		.type	turnLeft, %function
 3163              	turnLeft:
 3164              	.LFB80:
 897:.\main.c      **** 
 898:.\main.c      **** void turnLeft() {
 3165              		.loc 1 898 0
 3166              		.cfi_startproc
 3167              		@ args = 0, pretend = 0, frame = 0
 3168              		@ frame_needed = 1, uses_anonymous_args = 0
 3169 0000 80B5     		push	{r7, lr}
 3170              		.cfi_def_cfa_offset 8
 3171              		.cfi_offset 7, -8
 3172              		.cfi_offset 14, -4
 3173 0002 00AF     		add	r7, sp, #0
 3174              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 73


 899:.\main.c      ****     PWM_1_WriteCompare(127 + turnConstant);
 3175              		.loc 1 899 0
 3176 0004 074B     		ldr	r3, .L199
 3177 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3178 0008 7F33     		adds	r3, r3, #127
 3179 000a DBB2     		uxtb	r3, r3
 3180 000c 1846     		mov	r0, r3
 3181 000e FFF7FEFF 		bl	PWM_1_WriteCompare
 900:.\main.c      ****     PWM_2_WriteCompare(127 - turnConstant);
 3182              		.loc 1 900 0
 3183 0012 044B     		ldr	r3, .L199
 3184 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3185 0016 C3F17F03 		rsb	r3, r3, #127
 3186 001a DBB2     		uxtb	r3, r3
 3187 001c 1846     		mov	r0, r3
 3188 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 901:.\main.c      **** }
 3189              		.loc 1 901 0
 3190 0022 80BD     		pop	{r7, pc}
 3191              	.L200:
 3192              		.align	2
 3193              	.L199:
 3194 0024 00000000 		.word	turnConstant
 3195              		.cfi_endproc
 3196              	.LFE80:
 3197              		.size	turnLeft, .-turnLeft
 3198              		.section	.text.turnRight,"ax",%progbits
 3199              		.align	2
 3200              		.global	turnRight
 3201              		.thumb
 3202              		.thumb_func
 3203              		.type	turnRight, %function
 3204              	turnRight:
 3205              	.LFB81:
 902:.\main.c      **** 
 903:.\main.c      **** void turnRight() {
 3206              		.loc 1 903 0
 3207              		.cfi_startproc
 3208              		@ args = 0, pretend = 0, frame = 0
 3209              		@ frame_needed = 1, uses_anonymous_args = 0
 3210 0000 80B5     		push	{r7, lr}
 3211              		.cfi_def_cfa_offset 8
 3212              		.cfi_offset 7, -8
 3213              		.cfi_offset 14, -4
 3214 0002 00AF     		add	r7, sp, #0
 3215              		.cfi_def_cfa_register 7
 904:.\main.c      ****     PWM_1_WriteCompare(127 - turnConstant);
 3216              		.loc 1 904 0
 3217 0004 074B     		ldr	r3, .L202
 3218 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3219 0008 C3F17F03 		rsb	r3, r3, #127
 3220 000c DBB2     		uxtb	r3, r3
 3221 000e 1846     		mov	r0, r3
 3222 0010 FFF7FEFF 		bl	PWM_1_WriteCompare
 905:.\main.c      ****     PWM_2_WriteCompare(127 + turnConstant);
 3223              		.loc 1 905 0
 3224 0014 034B     		ldr	r3, .L202
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 74


 3225 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3226 0018 7F33     		adds	r3, r3, #127
 3227 001a DBB2     		uxtb	r3, r3
 3228 001c 1846     		mov	r0, r3
 3229 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 906:.\main.c      **** }
 3230              		.loc 1 906 0
 3231 0022 80BD     		pop	{r7, pc}
 3232              	.L203:
 3233              		.align	2
 3234              	.L202:
 3235 0024 00000000 		.word	turnConstant
 3236              		.cfi_endproc
 3237              	.LFE81:
 3238              		.size	turnRight, .-turnRight
 3239              		.section	.text.stop,"ax",%progbits
 3240              		.align	2
 3241              		.global	stop
 3242              		.thumb
 3243              		.thumb_func
 3244              		.type	stop, %function
 3245              	stop:
 3246              	.LFB82:
 907:.\main.c      **** 
 908:.\main.c      **** void stop() {
 3247              		.loc 1 908 0
 3248              		.cfi_startproc
 3249              		@ args = 0, pretend = 0, frame = 0
 3250              		@ frame_needed = 1, uses_anonymous_args = 0
 3251 0000 80B5     		push	{r7, lr}
 3252              		.cfi_def_cfa_offset 8
 3253              		.cfi_offset 7, -8
 3254              		.cfi_offset 14, -4
 3255 0002 00AF     		add	r7, sp, #0
 3256              		.cfi_def_cfa_register 7
 909:.\main.c      ****     PWM_1_WriteCompare(127);
 3257              		.loc 1 909 0
 3258 0004 7F20     		movs	r0, #127
 3259 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 910:.\main.c      ****     PWM_2_WriteCompare(127);
 3260              		.loc 1 910 0
 3261 000a 7F20     		movs	r0, #127
 3262 000c FFF7FEFF 		bl	PWM_2_WriteCompare
 911:.\main.c      **** }
 3263              		.loc 1 911 0
 3264 0010 80BD     		pop	{r7, pc}
 3265              		.cfi_endproc
 3266              	.LFE82:
 3267              		.size	stop, .-stop
 3268 0012 00BF     		.section	.text.get_average_position,"ax",%progbits
 3269              		.align	2
 3270              		.global	get_average_position
 3271              		.thumb
 3272              		.thumb_func
 3273              		.type	get_average_position, %function
 3274              	get_average_position:
 3275              	.LFB83:
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 75


 912:.\main.c      **** 
 913:.\main.c      **** int get_average_position() {    
 3276              		.loc 1 913 0
 3277              		.cfi_startproc
 3278              		@ args = 0, pretend = 0, frame = 16
 3279              		@ frame_needed = 1, uses_anonymous_args = 0
 3280 0000 80B5     		push	{r7, lr}
 3281              		.cfi_def_cfa_offset 8
 3282              		.cfi_offset 7, -8
 3283              		.cfi_offset 14, -4
 3284 0002 84B0     		sub	sp, sp, #16
 3285              		.cfi_def_cfa_offset 24
 3286 0004 00AF     		add	r7, sp, #0
 3287              		.cfi_def_cfa_register 7
 914:.\main.c      ****     int Quad1Reading = -QuadDec_M1_GetCounter();
 3288              		.loc 1 914 0
 3289 0006 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3290 000a 0346     		mov	r3, r0
 3291 000c 5B42     		negs	r3, r3
 3292 000e FB60     		str	r3, [r7, #12]
 915:.\main.c      ****     int Quad2Reading = -QuadDec_M2_GetCounter();
 3293              		.loc 1 915 0
 3294 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3295 0014 0346     		mov	r3, r0
 3296 0016 5B42     		negs	r3, r3
 3297 0018 BB60     		str	r3, [r7, #8]
 916:.\main.c      ****     int QuadAverage = (Quad1Reading + Quad2Reading)/2;
 3298              		.loc 1 916 0
 3299 001a FA68     		ldr	r2, [r7, #12]
 3300 001c BB68     		ldr	r3, [r7, #8]
 3301 001e 1344     		add	r3, r3, r2
 3302 0020 DA0F     		lsrs	r2, r3, #31
 3303 0022 1344     		add	r3, r3, r2
 3304 0024 5B10     		asrs	r3, r3, #1
 3305 0026 7B60     		str	r3, [r7, #4]
 917:.\main.c      ****     
 918:.\main.c      ****     //sprintf(str,"QUAD AVERAGE : %d\n",QuadAverage);
 919:.\main.c      ****     //USBUART_PutString(str);
 920:.\main.c      ****     
 921:.\main.c      ****     return QuadAverage;
 3306              		.loc 1 921 0
 3307 0028 7B68     		ldr	r3, [r7, #4]
 922:.\main.c      **** }
 3308              		.loc 1 922 0
 3309 002a 1846     		mov	r0, r3
 3310 002c 1037     		adds	r7, r7, #16
 3311              		.cfi_def_cfa_offset 8
 3312 002e BD46     		mov	sp, r7
 3313              		.cfi_def_cfa_register 13
 3314              		@ sp needed
 3315 0030 80BD     		pop	{r7, pc}
 3316              		.cfi_endproc
 3317              	.LFE83:
 3318              		.size	get_average_position, .-get_average_position
 3319              		.global	__aeabi_i2d
 3320              		.global	__aeabi_dmul
 3321              		.global	__aeabi_ddiv
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 76


 3322              		.global	__aeabi_d2iz
 3323 0032 00BF     		.section	.text.getSpeed,"ax",%progbits
 3324              		.align	2
 3325              		.global	getSpeed
 3326              		.thumb
 3327              		.thumb_func
 3328              		.type	getSpeed, %function
 3329              	getSpeed:
 3330              	.LFB84:
 923:.\main.c      **** 
 924:.\main.c      **** int getSpeed(){
 3331              		.loc 1 924 0
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 16
 3334              		@ frame_needed = 1, uses_anonymous_args = 0
 3335 0000 80B5     		push	{r7, lr}
 3336              		.cfi_def_cfa_offset 8
 3337              		.cfi_offset 7, -8
 3338              		.cfi_offset 14, -4
 3339 0002 84B0     		sub	sp, sp, #16
 3340              		.cfi_def_cfa_offset 24
 3341 0004 00AF     		add	r7, sp, #0
 3342              		.cfi_def_cfa_register 7
 925:.\main.c      ****    if (timerOverflow_flag == 1){
 3343              		.loc 1 925 0
 3344 0006 244B     		ldr	r3, .L210+8
 3345 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3346 000a 012B     		cmp	r3, #1
 3347 000c 38D1     		bne	.L208
 3348              	.LBB2:
 926:.\main.c      ****     
 927:.\main.c      ****     int quadAverage = get_average_position();
 3349              		.loc 1 927 0
 3350 000e FFF7FEFF 		bl	get_average_position
 3351 0012 F860     		str	r0, [r7, #12]
 928:.\main.c      ****         int quadDifference = quadAverage - prevQuadReading; // delta s
 3352              		.loc 1 928 0
 3353 0014 214B     		ldr	r3, .L210+12
 3354 0016 1B68     		ldr	r3, [r3]
 3355 0018 FA68     		ldr	r2, [r7, #12]
 3356 001a D31A     		subs	r3, r2, r3
 3357 001c BB60     		str	r3, [r7, #8]
 929:.\main.c      ****         int speed = (19.468*quadDifference*10)/(57*4); //measurement in cm/s for 100ms
 3358              		.loc 1 929 0
 3359 001e B868     		ldr	r0, [r7, #8]
 3360 0020 FFF7FEFF 		bl	__aeabi_i2d
 3361 0024 0246     		mov	r2, r0
 3362 0026 0B46     		mov	r3, r1
 3363 0028 1046     		mov	r0, r2
 3364 002a 1946     		mov	r1, r3
 3365 002c 18A3     		adr	r3, .L210
 3366 002e D3E90023 		ldrd	r2, [r3]
 3367 0032 FFF7FEFF 		bl	__aeabi_dmul
 3368 0036 0246     		mov	r2, r0
 3369 0038 0B46     		mov	r3, r1
 3370 003a 1046     		mov	r0, r2
 3371 003c 1946     		mov	r1, r3
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 77


 3372 003e 4FF00002 		mov	r2, #0
 3373 0042 174B     		ldr	r3, .L210+16
 3374 0044 FFF7FEFF 		bl	__aeabi_dmul
 3375 0048 0246     		mov	r2, r0
 3376 004a 0B46     		mov	r3, r1
 3377 004c 1046     		mov	r0, r2
 3378 004e 1946     		mov	r1, r3
 3379 0050 4FF00002 		mov	r2, #0
 3380 0054 134B     		ldr	r3, .L210+20
 3381 0056 FFF7FEFF 		bl	__aeabi_ddiv
 3382 005a 0246     		mov	r2, r0
 3383 005c 0B46     		mov	r3, r1
 3384 005e 1046     		mov	r0, r2
 3385 0060 1946     		mov	r1, r3
 3386 0062 FFF7FEFF 		bl	__aeabi_d2iz
 3387 0066 0346     		mov	r3, r0
 3388 0068 7B60     		str	r3, [r7, #4]
 930:.\main.c      ****         
 931:.\main.c      ****         /*
 932:.\main.c      ****         sprintf(str,"Speed : %d\n",speed);
 933:.\main.c      ****         USBUART_PutString(str);
 934:.\main.c      ****         */
 935:.\main.c      ****         
 936:.\main.c      ****         prevQuadReading = quadAverage;
 3389              		.loc 1 936 0
 3390 006a 0C4A     		ldr	r2, .L210+12
 3391 006c FB68     		ldr	r3, [r7, #12]
 3392 006e 1360     		str	r3, [r2]
 937:.\main.c      ****         timerOverflow_flag = 0;
 3393              		.loc 1 937 0
 3394 0070 094B     		ldr	r3, .L210+8
 3395 0072 0022     		movs	r2, #0
 3396 0074 1A70     		strb	r2, [r3]
 938:.\main.c      ****         
 939:.\main.c      ****         speedFlag = 1;
 3397              		.loc 1 939 0
 3398 0076 0C4B     		ldr	r3, .L210+24
 3399 0078 0122     		movs	r2, #1
 3400 007a 1A60     		str	r2, [r3]
 940:.\main.c      ****         
 941:.\main.c      ****         return speed;
 3401              		.loc 1 941 0
 3402 007c 7B68     		ldr	r3, [r7, #4]
 3403 007e 00E0     		b	.L209
 3404              	.L208:
 3405              	.LBE2:
 942:.\main.c      ****     } 
 943:.\main.c      ****     
 944:.\main.c      ****     return 0;
 3406              		.loc 1 944 0
 3407 0080 0023     		movs	r3, #0
 3408              	.L209:
 945:.\main.c      **** }
 3409              		.loc 1 945 0
 3410 0082 1846     		mov	r0, r3
 3411 0084 1037     		adds	r7, r7, #16
 3412              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 78


 3413 0086 BD46     		mov	sp, r7
 3414              		.cfi_def_cfa_register 13
 3415              		@ sp needed
 3416 0088 80BD     		pop	{r7, pc}
 3417              	.L211:
 3418 008a 00BFAFF3 		.align	3
 3418      0080
 3419              	.L210:
 3420 0090 2B8716D9 		.word	-652835029
 3421 0094 CE773340 		.word	1077114830
 3422 0098 00000000 		.word	timerOverflow_flag
 3423 009c 00000000 		.word	prevQuadReading
 3424 00a0 00002440 		.word	1076101120
 3425 00a4 00806C40 		.word	1080852480
 3426 00a8 00000000 		.word	speedFlag
 3427              		.cfi_endproc
 3428              	.LFE84:
 3429              		.size	getSpeed, .-getSpeed
 3430 00ac AFF30080 		.section	.text.setSpeed,"ax",%progbits
 3431              		.align	2
 3432              		.global	setSpeed
 3433              		.thumb
 3434              		.thumb_func
 3435              		.type	setSpeed, %function
 3436              	setSpeed:
 3437              	.LFB85:
 946:.\main.c      **** 
 947:.\main.c      **** void setSpeed(int spd, int goalSpeed){
 3438              		.loc 1 947 0
 3439              		.cfi_startproc
 3440              		@ args = 0, pretend = 0, frame = 8
 3441              		@ frame_needed = 1, uses_anonymous_args = 0
 3442 0000 80B5     		push	{r7, lr}
 3443              		.cfi_def_cfa_offset 8
 3444              		.cfi_offset 7, -8
 3445              		.cfi_offset 14, -4
 3446 0002 82B0     		sub	sp, sp, #8
 3447              		.cfi_def_cfa_offset 16
 3448 0004 00AF     		add	r7, sp, #0
 3449              		.cfi_def_cfa_register 7
 3450 0006 7860     		str	r0, [r7, #4]
 3451 0008 3960     		str	r1, [r7]
 948:.\main.c      ****     if (speedFlag == 1){
 3452              		.loc 1 948 0
 3453 000a 194B     		ldr	r3, .L216
 3454 000c 1B68     		ldr	r3, [r3]
 3455 000e 012B     		cmp	r3, #1
 3456 0010 2BD1     		bne	.L212
 949:.\main.c      ****         if (spd < goalSpeed){
 3457              		.loc 1 949 0
 3458 0012 7A68     		ldr	r2, [r7, #4]
 3459 0014 3B68     		ldr	r3, [r7]
 3460 0016 9A42     		cmp	r2, r3
 3461 0018 10DA     		bge	.L214
 950:.\main.c      ****             PWMPower++;
 3462              		.loc 1 950 0
 3463 001a 164B     		ldr	r3, .L216+4
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 79


 3464 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3465 001e 0133     		adds	r3, r3, #1
 3466 0020 DAB2     		uxtb	r2, r3
 3467 0022 144B     		ldr	r3, .L216+4
 3468 0024 1A70     		strb	r2, [r3]
 951:.\main.c      ****             PWM_1_WriteCompare(PWMPower);
 3469              		.loc 1 951 0
 3470 0026 134B     		ldr	r3, .L216+4
 3471 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3472 002a 1846     		mov	r0, r3
 3473 002c FFF7FEFF 		bl	PWM_1_WriteCompare
 952:.\main.c      ****             PWM_2_WriteCompare(PWMPower);
 3474              		.loc 1 952 0
 3475 0030 104B     		ldr	r3, .L216+4
 3476 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3477 0034 1846     		mov	r0, r3
 3478 0036 FFF7FEFF 		bl	PWM_2_WriteCompare
 3479 003a 13E0     		b	.L215
 3480              	.L214:
 953:.\main.c      ****         } else if (spd > goalSpeed){
 3481              		.loc 1 953 0
 3482 003c 7A68     		ldr	r2, [r7, #4]
 3483 003e 3B68     		ldr	r3, [r7]
 3484 0040 9A42     		cmp	r2, r3
 3485 0042 0FDD     		ble	.L215
 954:.\main.c      ****             PWMPower--;
 3486              		.loc 1 954 0
 3487 0044 0B4B     		ldr	r3, .L216+4
 3488 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3489 0048 013B     		subs	r3, r3, #1
 3490 004a DAB2     		uxtb	r2, r3
 3491 004c 094B     		ldr	r3, .L216+4
 3492 004e 1A70     		strb	r2, [r3]
 955:.\main.c      ****             PWM_1_WriteCompare(PWMPower);
 3493              		.loc 1 955 0
 3494 0050 084B     		ldr	r3, .L216+4
 3495 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3496 0054 1846     		mov	r0, r3
 3497 0056 FFF7FEFF 		bl	PWM_1_WriteCompare
 956:.\main.c      ****             PWM_2_WriteCompare(PWMPower);
 3498              		.loc 1 956 0
 3499 005a 064B     		ldr	r3, .L216+4
 3500 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3501 005e 1846     		mov	r0, r3
 3502 0060 FFF7FEFF 		bl	PWM_2_WriteCompare
 3503              	.L215:
 957:.\main.c      ****         }
 958:.\main.c      ****         
 959:.\main.c      ****         speedFlag = 0;
 3504              		.loc 1 959 0
 3505 0064 024B     		ldr	r3, .L216
 3506 0066 0022     		movs	r2, #0
 3507 0068 1A60     		str	r2, [r3]
 3508              	.L212:
 960:.\main.c      ****     }   
 961:.\main.c      **** }
 3509              		.loc 1 961 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 80


 3510 006a 0837     		adds	r7, r7, #8
 3511              		.cfi_def_cfa_offset 8
 3512 006c BD46     		mov	sp, r7
 3513              		.cfi_def_cfa_register 13
 3514              		@ sp needed
 3515 006e 80BD     		pop	{r7, pc}
 3516              	.L217:
 3517              		.align	2
 3518              	.L216:
 3519 0070 00000000 		.word	speedFlag
 3520 0074 00000000 		.word	PWMPower
 3521              		.cfi_endproc
 3522              	.LFE85:
 3523              		.size	setSpeed, .-setSpeed
 3524              		.section	.text.incrementQuadGoal,"ax",%progbits
 3525              		.align	2
 3526              		.global	incrementQuadGoal
 3527              		.thumb
 3528              		.thumb_func
 3529              		.type	incrementQuadGoal, %function
 3530              	incrementQuadGoal:
 3531              	.LFB86:
 962:.\main.c      **** 
 963:.\main.c      **** void incrementQuadGoal(int goalQuad){
 3532              		.loc 1 963 0
 3533              		.cfi_startproc
 3534              		@ args = 0, pretend = 0, frame = 8
 3535              		@ frame_needed = 1, uses_anonymous_args = 0
 3536              		@ link register save eliminated.
 3537 0000 80B4     		push	{r7}
 3538              		.cfi_def_cfa_offset 4
 3539              		.cfi_offset 7, -4
 3540 0002 83B0     		sub	sp, sp, #12
 3541              		.cfi_def_cfa_offset 16
 3542 0004 00AF     		add	r7, sp, #0
 3543              		.cfi_def_cfa_register 7
 3544 0006 7860     		str	r0, [r7, #4]
 964:.\main.c      ****     goalQuad = goalQuad + 2; 
 3545              		.loc 1 964 0
 3546 0008 7B68     		ldr	r3, [r7, #4]
 3547 000a 0233     		adds	r3, r3, #2
 3548 000c 7B60     		str	r3, [r7, #4]
 965:.\main.c      **** }
 3549              		.loc 1 965 0
 3550 000e 0C37     		adds	r7, r7, #12
 3551              		.cfi_def_cfa_offset 4
 3552 0010 BD46     		mov	sp, r7
 3553              		.cfi_def_cfa_register 13
 3554              		@ sp needed
 3555 0012 5DF8047B 		ldr	r7, [sp], #4
 3556              		.cfi_restore 7
 3557              		.cfi_def_cfa_offset 0
 3558 0016 7047     		bx	lr
 3559              		.cfi_endproc
 3560              	.LFE86:
 3561              		.size	incrementQuadGoal, .-incrementQuadGoal
 3562              		.section	.text.stopAfterX,"ax",%progbits
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 81


 3563              		.align	2
 3564              		.global	stopAfterX
 3565              		.thumb
 3566              		.thumb_func
 3567              		.type	stopAfterX, %function
 3568              	stopAfterX:
 3569              	.LFB87:
 966:.\main.c      **** 
 967:.\main.c      **** void stopAfterX(int quadAverage, int goalQuad){
 3570              		.loc 1 967 0
 3571              		.cfi_startproc
 3572              		@ args = 0, pretend = 0, frame = 8
 3573              		@ frame_needed = 1, uses_anonymous_args = 0
 3574 0000 80B5     		push	{r7, lr}
 3575              		.cfi_def_cfa_offset 8
 3576              		.cfi_offset 7, -8
 3577              		.cfi_offset 14, -4
 3578 0002 82B0     		sub	sp, sp, #8
 3579              		.cfi_def_cfa_offset 16
 3580 0004 00AF     		add	r7, sp, #0
 3581              		.cfi_def_cfa_register 7
 3582 0006 7860     		str	r0, [r7, #4]
 3583 0008 3960     		str	r1, [r7]
 968:.\main.c      ****     if (quadAverage > goalQuad || quadAverage < -goalQuad){
 3584              		.loc 1 968 0
 3585 000a 7A68     		ldr	r2, [r7, #4]
 3586 000c 3B68     		ldr	r3, [r7]
 3587 000e 9A42     		cmp	r2, r3
 3588 0010 04DC     		bgt	.L220
 3589              		.loc 1 968 0 is_stmt 0 discriminator 1
 3590 0012 3B68     		ldr	r3, [r7]
 3591 0014 5A42     		negs	r2, r3
 3592 0016 7B68     		ldr	r3, [r7, #4]
 3593 0018 9A42     		cmp	r2, r3
 3594 001a 02DD     		ble	.L219
 3595              	.L220:
 969:.\main.c      ****         stop();
 3596              		.loc 1 969 0 is_stmt 1
 3597 001c FFF7FEFF 		bl	stop
 3598              	.L222:
 970:.\main.c      ****         while(1);
 3599              		.loc 1 970 0 discriminator 1
 3600 0020 FEE7     		b	.L222
 3601              	.L219:
 971:.\main.c      ****     } 
 972:.\main.c      **** }
 3602              		.loc 1 972 0
 3603 0022 0837     		adds	r7, r7, #8
 3604              		.cfi_def_cfa_offset 8
 3605 0024 BD46     		mov	sp, r7
 3606              		.cfi_def_cfa_register 13
 3607              		@ sp needed
 3608 0026 80BD     		pop	{r7, pc}
 3609              		.cfi_endproc
 3610              	.LFE87:
 3611              		.size	stopAfterX, .-stopAfterX
 3612              		.section	.text.receiveRX,"ax",%progbits
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 82


 3613              		.align	2
 3614              		.global	receiveRX
 3615              		.thumb
 3616              		.thumb_func
 3617              		.type	receiveRX, %function
 3618              	receiveRX:
 3619              	.LFB88:
 973:.\main.c      **** 
 974:.\main.c      **** void receiveRX(){
 3620              		.loc 1 974 0
 3621              		.cfi_startproc
 3622              		@ args = 0, pretend = 0, frame = 0
 3623              		@ frame_needed = 1, uses_anonymous_args = 0
 3624 0000 80B5     		push	{r7, lr}
 3625              		.cfi_def_cfa_offset 8
 3626              		.cfi_offset 7, -8
 3627              		.cfi_offset 14, -4
 3628 0002 00AF     		add	r7, sp, #0
 3629              		.cfi_def_cfa_register 7
 975:.\main.c      ****     if (flag_rx == 1){
 3630              		.loc 1 975 0
 3631 0004 9B4B     		ldr	r3, .L285
 3632 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3633 0008 012B     		cmp	r3, #1
 3634 000a 40F07383 		bne	.L223
 976:.\main.c      ****         asciiValue = UART_GetChar();
 3635              		.loc 1 976 0
 3636 000e FFF7FEFF 		bl	UART_GetChar
 3637 0012 0346     		mov	r3, r0
 3638 0014 1A46     		mov	r2, r3
 3639 0016 984B     		ldr	r3, .L285+4
 3640 0018 1A60     		str	r2, [r3]
 977:.\main.c      ****         USBUART_PutChar(asciiValue);
 3641              		.loc 1 977 0
 3642 001a 974B     		ldr	r3, .L285+4
 3643 001c 1B68     		ldr	r3, [r3]
 3644 001e DBB2     		uxtb	r3, r3
 3645 0020 1846     		mov	r0, r3
 3646 0022 FFF7FEFF 		bl	USBUART_PutChar
 978:.\main.c      **** 
 979:.\main.c      ****         if (asciiValue == '#'){
 3647              		.loc 1 979 0
 3648 0026 944B     		ldr	r3, .L285+4
 3649 0028 1B68     		ldr	r3, [r3]
 3650 002a 232B     		cmp	r3, #35
 3651 002c 03D1     		bne	.L225
 980:.\main.c      ****             packetCntr = 0;
 3652              		.loc 1 980 0
 3653 002e 934B     		ldr	r3, .L285+8
 3654 0030 0022     		movs	r2, #0
 3655 0032 1A60     		str	r2, [r3]
 3656 0034 59E3     		b	.L226
 3657              	.L225:
 981:.\main.c      ****         } else if (asciiValue == ','){
 3658              		.loc 1 981 0
 3659 0036 904B     		ldr	r3, .L285+4
 3660 0038 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 83


 3661 003a 2C2B     		cmp	r3, #44
 3662 003c 40F0A682 		bne	.L227
 982:.\main.c      **** 
 983:.\main.c      ****             switch (packetCntr) {
 3663              		.loc 1 983 0
 3664 0040 8E4B     		ldr	r3, .L285+8
 3665 0042 1B68     		ldr	r3, [r3]
 3666 0044 0F2B     		cmp	r3, #15
 3667 0046 00F29B82 		bhi	.L228
 3668 004a 01A2     		adr	r2, .L230
 3669 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3670              		.p2align 2
 3671              	.L230:
 3672 0050 91000000 		.word	.L229+1
 3673 0054 F9000000 		.word	.L231+1
 3674 0058 43010000 		.word	.L232+1
 3675 005c 8D010000 		.word	.L233+1
 3676 0060 D7010000 		.word	.L234+1
 3677 0064 21020000 		.word	.L235+1
 3678 0068 6B020000 		.word	.L236+1
 3679 006c D7020000 		.word	.L237+1
 3680 0070 21030000 		.word	.L238+1
 3681 0074 6B030000 		.word	.L239+1
 3682 0078 B5030000 		.word	.L240+1
 3683 007c FF030000 		.word	.L241+1
 3684 0080 49040000 		.word	.L242+1
 3685 0084 93040000 		.word	.L243+1
 3686 0088 DD040000 		.word	.L244+1
 3687 008c 37050000 		.word	.L245+1
 3688              		.p2align 1
 3689              	.L229:
 984:.\main.c      ****                 case 0 :                    
 985:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 3690              		.loc 1 985 0
 3691 0090 7B4B     		ldr	r3, .L285+12
 3692 0092 0A22     		movs	r2, #10
 3693 0094 1A60     		str	r2, [r3]
 3694 0096 09E0     		b	.L246
 3695              	.L247:
 986:.\main.c      ****                     locationArray[i] = 0;
 3696              		.loc 1 986 0 discriminator 3
 3697 0098 794B     		ldr	r3, .L285+12
 3698 009a 1B68     		ldr	r3, [r3]
 3699 009c 794A     		ldr	r2, .L285+16
 3700 009e 0021     		movs	r1, #0
 3701 00a0 D154     		strb	r1, [r2, r3]
 985:.\main.c      ****                     locationArray[i] = 0;
 3702              		.loc 1 985 0 discriminator 3
 3703 00a2 774B     		ldr	r3, .L285+12
 3704 00a4 1B68     		ldr	r3, [r3]
 3705 00a6 013B     		subs	r3, r3, #1
 3706 00a8 754A     		ldr	r2, .L285+12
 3707 00aa 1360     		str	r3, [r2]
 3708              	.L246:
 985:.\main.c      ****                     locationArray[i] = 0;
 3709              		.loc 1 985 0 is_stmt 0 discriminator 1
 3710 00ac 764B     		ldr	r3, .L285+20
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 84


 3711 00ae 1B68     		ldr	r3, [r3]
 3712 00b0 5A1E     		subs	r2, r3, #1
 3713 00b2 734B     		ldr	r3, .L285+12
 3714 00b4 1B68     		ldr	r3, [r3]
 3715 00b6 9A42     		cmp	r2, r3
 3716 00b8 EEDB     		blt	.L247
 987:.\main.c      ****                 }
 988:.\main.c      ****                 locationArrayCntr = 0;
 3717              		.loc 1 988 0 is_stmt 1
 3718 00ba 734B     		ldr	r3, .L285+20
 3719 00bc 0022     		movs	r2, #0
 3720 00be 1A60     		str	r2, [r3]
 989:.\main.c      ****                 robotLocation.rssi = atoi(locationArray);
 3721              		.loc 1 989 0
 3722 00c0 7048     		ldr	r0, .L285+16
 3723 00c2 FFF7FEFF 		bl	atoi
 3724 00c6 0346     		mov	r3, r0
 3725 00c8 DAB2     		uxtb	r2, r3
 3726 00ca 704B     		ldr	r3, .L285+24
 3727 00cc 1A70     		strb	r2, [r3]
 990:.\main.c      ****                 if(negate == 1){
 3728              		.loc 1 990 0
 3729 00ce 704B     		ldr	r3, .L285+28
 3730 00d0 1B68     		ldr	r3, [r3]
 3731 00d2 012B     		cmp	r3, #1
 3732 00d4 0AD1     		bne	.L248
 991:.\main.c      ****                     negate = 0;
 3733              		.loc 1 991 0
 3734 00d6 6E4B     		ldr	r3, .L285+28
 3735 00d8 0022     		movs	r2, #0
 3736 00da 1A60     		str	r2, [r3]
 992:.\main.c      ****                     robotLocation.rssi = -1 * robotLocation.rssi;
 3737              		.loc 1 992 0
 3738 00dc 6B4B     		ldr	r3, .L285+24
 3739 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3740 00e0 DBB2     		uxtb	r3, r3
 3741 00e2 5B42     		negs	r3, r3
 3742 00e4 DBB2     		uxtb	r3, r3
 3743 00e6 DAB2     		uxtb	r2, r3
 3744 00e8 684B     		ldr	r3, .L285+24
 3745 00ea 1A70     		strb	r2, [r3]
 3746              	.L248:
 993:.\main.c      ****                 }
 994:.\main.c      **** 
 995:.\main.c      ****                 memset(locationArray, 0, 10);
 3747              		.loc 1 995 0
 3748 00ec 6548     		ldr	r0, .L285+16
 3749 00ee 0021     		movs	r1, #0
 3750 00f0 0A22     		movs	r2, #10
 3751 00f2 FFF7FEFF 		bl	memset
 996:.\main.c      ****                 break;
 3752              		.loc 1 996 0
 3753 00f6 43E2     		b	.L228
 3754              	.L231:
 997:.\main.c      ****                 case 1 :
 998:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 3755              		.loc 1 998 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 85


 3756 00f8 614B     		ldr	r3, .L285+12
 3757 00fa 0A22     		movs	r2, #10
 3758 00fc 1A60     		str	r2, [r3]
 3759 00fe 09E0     		b	.L249
 3760              	.L250:
 999:.\main.c      ****                     locationArray[i] = 0;
 3761              		.loc 1 999 0 discriminator 3
 3762 0100 5F4B     		ldr	r3, .L285+12
 3763 0102 1B68     		ldr	r3, [r3]
 3764 0104 5F4A     		ldr	r2, .L285+16
 3765 0106 0021     		movs	r1, #0
 3766 0108 D154     		strb	r1, [r2, r3]
 998:.\main.c      ****                     locationArray[i] = 0;
 3767              		.loc 1 998 0 discriminator 3
 3768 010a 5D4B     		ldr	r3, .L285+12
 3769 010c 1B68     		ldr	r3, [r3]
 3770 010e 013B     		subs	r3, r3, #1
 3771 0110 5B4A     		ldr	r2, .L285+12
 3772 0112 1360     		str	r3, [r2]
 3773              	.L249:
 998:.\main.c      ****                     locationArray[i] = 0;
 3774              		.loc 1 998 0 is_stmt 0 discriminator 1
 3775 0114 5C4B     		ldr	r3, .L285+20
 3776 0116 1B68     		ldr	r3, [r3]
 3777 0118 5A1E     		subs	r2, r3, #1
 3778 011a 594B     		ldr	r3, .L285+12
 3779 011c 1B68     		ldr	r3, [r3]
 3780 011e 9A42     		cmp	r2, r3
 3781 0120 EEDB     		blt	.L250
1000:.\main.c      ****                 }
1001:.\main.c      ****                 locationArrayCntr = 0;
 3782              		.loc 1 1001 0 is_stmt 1
 3783 0122 594B     		ldr	r3, .L285+20
 3784 0124 0022     		movs	r2, #0
 3785 0126 1A60     		str	r2, [r3]
1002:.\main.c      ****                 robotLocation.index = atoi(locationArray);
 3786              		.loc 1 1002 0
 3787 0128 5648     		ldr	r0, .L285+16
 3788 012a FFF7FEFF 		bl	atoi
 3789 012e 0346     		mov	r3, r0
 3790 0130 DAB2     		uxtb	r2, r3
 3791 0132 564B     		ldr	r3, .L285+24
 3792 0134 5A70     		strb	r2, [r3, #1]
1003:.\main.c      ****                 memset(locationArray, 0, 10);
 3793              		.loc 1 1003 0
 3794 0136 5348     		ldr	r0, .L285+16
 3795 0138 0021     		movs	r1, #0
 3796 013a 0A22     		movs	r2, #10
 3797 013c FFF7FEFF 		bl	memset
1004:.\main.c      **** 
1005:.\main.c      ****                 break;
 3798              		.loc 1 1005 0
 3799 0140 1EE2     		b	.L228
 3800              	.L232:
1006:.\main.c      ****                 case 2 : 
1007:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 3801              		.loc 1 1007 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 86


 3802 0142 4F4B     		ldr	r3, .L285+12
 3803 0144 0A22     		movs	r2, #10
 3804 0146 1A60     		str	r2, [r3]
 3805 0148 09E0     		b	.L251
 3806              	.L252:
1008:.\main.c      ****                     locationArray[i] = 0;
 3807              		.loc 1 1008 0 discriminator 3
 3808 014a 4D4B     		ldr	r3, .L285+12
 3809 014c 1B68     		ldr	r3, [r3]
 3810 014e 4D4A     		ldr	r2, .L285+16
 3811 0150 0021     		movs	r1, #0
 3812 0152 D154     		strb	r1, [r2, r3]
1007:.\main.c      ****                     locationArray[i] = 0;
 3813              		.loc 1 1007 0 discriminator 3
 3814 0154 4A4B     		ldr	r3, .L285+12
 3815 0156 1B68     		ldr	r3, [r3]
 3816 0158 013B     		subs	r3, r3, #1
 3817 015a 494A     		ldr	r2, .L285+12
 3818 015c 1360     		str	r3, [r2]
 3819              	.L251:
1007:.\main.c      ****                     locationArray[i] = 0;
 3820              		.loc 1 1007 0 is_stmt 0 discriminator 1
 3821 015e 4A4B     		ldr	r3, .L285+20
 3822 0160 1B68     		ldr	r3, [r3]
 3823 0162 5A1E     		subs	r2, r3, #1
 3824 0164 464B     		ldr	r3, .L285+12
 3825 0166 1B68     		ldr	r3, [r3]
 3826 0168 9A42     		cmp	r2, r3
 3827 016a EEDB     		blt	.L252
1009:.\main.c      ****                 }
1010:.\main.c      ****                 locationArrayCntr = 0;
 3828              		.loc 1 1010 0 is_stmt 1
 3829 016c 464B     		ldr	r3, .L285+20
 3830 016e 0022     		movs	r2, #0
 3831 0170 1A60     		str	r2, [r3]
1011:.\main.c      ****                 robotLocation.robot_xpos = atoi(locationArray);
 3832              		.loc 1 1011 0
 3833 0172 4448     		ldr	r0, .L285+16
 3834 0174 FFF7FEFF 		bl	atoi
 3835 0178 0346     		mov	r3, r0
 3836 017a 9AB2     		uxth	r2, r3
 3837 017c 434B     		ldr	r3, .L285+24
 3838 017e 5A80     		strh	r2, [r3, #2]	@ movhi
1012:.\main.c      ****                 memset(locationArray, 0, 10);
 3839              		.loc 1 1012 0
 3840 0180 4048     		ldr	r0, .L285+16
 3841 0182 0021     		movs	r1, #0
 3842 0184 0A22     		movs	r2, #10
 3843 0186 FFF7FEFF 		bl	memset
1013:.\main.c      **** 
1014:.\main.c      **** 
1015:.\main.c      ****                 break;
 3844              		.loc 1 1015 0
 3845 018a F9E1     		b	.L228
 3846              	.L233:
1016:.\main.c      ****                 case 3 : 
1017:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 87


 3847              		.loc 1 1017 0
 3848 018c 3C4B     		ldr	r3, .L285+12
 3849 018e 0A22     		movs	r2, #10
 3850 0190 1A60     		str	r2, [r3]
 3851 0192 09E0     		b	.L253
 3852              	.L254:
1018:.\main.c      ****                     locationArray[i] = 0;
 3853              		.loc 1 1018 0 discriminator 3
 3854 0194 3A4B     		ldr	r3, .L285+12
 3855 0196 1B68     		ldr	r3, [r3]
 3856 0198 3A4A     		ldr	r2, .L285+16
 3857 019a 0021     		movs	r1, #0
 3858 019c D154     		strb	r1, [r2, r3]
1017:.\main.c      ****                     locationArray[i] = 0;
 3859              		.loc 1 1017 0 discriminator 3
 3860 019e 384B     		ldr	r3, .L285+12
 3861 01a0 1B68     		ldr	r3, [r3]
 3862 01a2 013B     		subs	r3, r3, #1
 3863 01a4 364A     		ldr	r2, .L285+12
 3864 01a6 1360     		str	r3, [r2]
 3865              	.L253:
1017:.\main.c      ****                     locationArray[i] = 0;
 3866              		.loc 1 1017 0 is_stmt 0 discriminator 1
 3867 01a8 374B     		ldr	r3, .L285+20
 3868 01aa 1B68     		ldr	r3, [r3]
 3869 01ac 5A1E     		subs	r2, r3, #1
 3870 01ae 344B     		ldr	r3, .L285+12
 3871 01b0 1B68     		ldr	r3, [r3]
 3872 01b2 9A42     		cmp	r2, r3
 3873 01b4 EEDB     		blt	.L254
1019:.\main.c      ****                 }
1020:.\main.c      ****                 locationArrayCntr = 0;
 3874              		.loc 1 1020 0 is_stmt 1
 3875 01b6 344B     		ldr	r3, .L285+20
 3876 01b8 0022     		movs	r2, #0
 3877 01ba 1A60     		str	r2, [r3]
1021:.\main.c      ****                 robotLocation.robot_ypos = atoi(locationArray);
 3878              		.loc 1 1021 0
 3879 01bc 3148     		ldr	r0, .L285+16
 3880 01be FFF7FEFF 		bl	atoi
 3881 01c2 0346     		mov	r3, r0
 3882 01c4 9AB2     		uxth	r2, r3
 3883 01c6 314B     		ldr	r3, .L285+24
 3884 01c8 9A80     		strh	r2, [r3, #4]	@ movhi
1022:.\main.c      ****                 memset(locationArray, 0, 10);
 3885              		.loc 1 1022 0
 3886 01ca 2E48     		ldr	r0, .L285+16
 3887 01cc 0021     		movs	r1, #0
 3888 01ce 0A22     		movs	r2, #10
 3889 01d0 FFF7FEFF 		bl	memset
1023:.\main.c      ****                 break;
 3890              		.loc 1 1023 0
 3891 01d4 D4E1     		b	.L228
 3892              	.L234:
1024:.\main.c      ****                 case 4 : 
1025:.\main.c      **** 
1026:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 88


 3893              		.loc 1 1026 0
 3894 01d6 2A4B     		ldr	r3, .L285+12
 3895 01d8 0A22     		movs	r2, #10
 3896 01da 1A60     		str	r2, [r3]
 3897 01dc 09E0     		b	.L255
 3898              	.L256:
1027:.\main.c      ****                     locationArray[i] = 0;
 3899              		.loc 1 1027 0 discriminator 3
 3900 01de 284B     		ldr	r3, .L285+12
 3901 01e0 1B68     		ldr	r3, [r3]
 3902 01e2 284A     		ldr	r2, .L285+16
 3903 01e4 0021     		movs	r1, #0
 3904 01e6 D154     		strb	r1, [r2, r3]
1026:.\main.c      ****                     locationArray[i] = 0;
 3905              		.loc 1 1026 0 discriminator 3
 3906 01e8 254B     		ldr	r3, .L285+12
 3907 01ea 1B68     		ldr	r3, [r3]
 3908 01ec 013B     		subs	r3, r3, #1
 3909 01ee 244A     		ldr	r2, .L285+12
 3910 01f0 1360     		str	r3, [r2]
 3911              	.L255:
1026:.\main.c      ****                     locationArray[i] = 0;
 3912              		.loc 1 1026 0 is_stmt 0 discriminator 1
 3913 01f2 254B     		ldr	r3, .L285+20
 3914 01f4 1B68     		ldr	r3, [r3]
 3915 01f6 5A1E     		subs	r2, r3, #1
 3916 01f8 214B     		ldr	r3, .L285+12
 3917 01fa 1B68     		ldr	r3, [r3]
 3918 01fc 9A42     		cmp	r2, r3
 3919 01fe EEDB     		blt	.L256
1028:.\main.c      ****                 }
1029:.\main.c      ****                 locationArrayCntr = 0;
 3920              		.loc 1 1029 0 is_stmt 1
 3921 0200 214B     		ldr	r3, .L285+20
 3922 0202 0022     		movs	r2, #0
 3923 0204 1A60     		str	r2, [r3]
1030:.\main.c      ****                 robotLocation.robot_orientation = atoi(locationArray);
 3924              		.loc 1 1030 0
 3925 0206 1F48     		ldr	r0, .L285+16
 3926 0208 FFF7FEFF 		bl	atoi
 3927 020c 0346     		mov	r3, r0
 3928 020e 9AB2     		uxth	r2, r3
 3929 0210 1E4B     		ldr	r3, .L285+24
 3930 0212 DA80     		strh	r2, [r3, #6]	@ movhi
1031:.\main.c      ****                 memset(locationArray, 0, 10);
 3931              		.loc 1 1031 0
 3932 0214 1B48     		ldr	r0, .L285+16
 3933 0216 0021     		movs	r1, #0
 3934 0218 0A22     		movs	r2, #10
 3935 021a FFF7FEFF 		bl	memset
1032:.\main.c      ****                 break;
 3936              		.loc 1 1032 0
 3937 021e AFE1     		b	.L228
 3938              	.L235:
1033:.\main.c      ****                 case 5 : 
1034:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 3939              		.loc 1 1034 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 89


 3940 0220 174B     		ldr	r3, .L285+12
 3941 0222 0A22     		movs	r2, #10
 3942 0224 1A60     		str	r2, [r3]
 3943 0226 09E0     		b	.L257
 3944              	.L258:
1035:.\main.c      ****                     locationArray[i] = 0;
 3945              		.loc 1 1035 0 discriminator 3
 3946 0228 154B     		ldr	r3, .L285+12
 3947 022a 1B68     		ldr	r3, [r3]
 3948 022c 154A     		ldr	r2, .L285+16
 3949 022e 0021     		movs	r1, #0
 3950 0230 D154     		strb	r1, [r2, r3]
1034:.\main.c      ****                     locationArray[i] = 0;
 3951              		.loc 1 1034 0 discriminator 3
 3952 0232 134B     		ldr	r3, .L285+12
 3953 0234 1B68     		ldr	r3, [r3]
 3954 0236 013B     		subs	r3, r3, #1
 3955 0238 114A     		ldr	r2, .L285+12
 3956 023a 1360     		str	r3, [r2]
 3957              	.L257:
1034:.\main.c      ****                     locationArray[i] = 0;
 3958              		.loc 1 1034 0 is_stmt 0 discriminator 1
 3959 023c 124B     		ldr	r3, .L285+20
 3960 023e 1B68     		ldr	r3, [r3]
 3961 0240 5A1E     		subs	r2, r3, #1
 3962 0242 0F4B     		ldr	r3, .L285+12
 3963 0244 1B68     		ldr	r3, [r3]
 3964 0246 9A42     		cmp	r2, r3
 3965 0248 EEDB     		blt	.L258
1036:.\main.c      ****                 }
1037:.\main.c      ****                 locationArrayCntr = 0;
 3966              		.loc 1 1037 0 is_stmt 1
 3967 024a 0F4B     		ldr	r3, .L285+20
 3968 024c 0022     		movs	r2, #0
 3969 024e 1A60     		str	r2, [r3]
1038:.\main.c      ****                 robotLocation.g0_xpos = atoi(locationArray);
 3970              		.loc 1 1038 0
 3971 0250 0C48     		ldr	r0, .L285+16
 3972 0252 FFF7FEFF 		bl	atoi
 3973 0256 0346     		mov	r3, r0
 3974 0258 9AB2     		uxth	r2, r3
 3975 025a 0C4B     		ldr	r3, .L285+24
 3976 025c 1A81     		strh	r2, [r3, #8]	@ movhi
1039:.\main.c      ****                 memset(locationArray, 0, 10);
 3977              		.loc 1 1039 0
 3978 025e 0948     		ldr	r0, .L285+16
 3979 0260 0021     		movs	r1, #0
 3980 0262 0A22     		movs	r2, #10
 3981 0264 FFF7FEFF 		bl	memset
1040:.\main.c      ****                 break;
 3982              		.loc 1 1040 0
 3983 0268 8AE1     		b	.L228
 3984              	.L236:
1041:.\main.c      ****                 case 6 : 
1042:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 3985              		.loc 1 1042 0
 3986 026a 054B     		ldr	r3, .L285+12
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 90


 3987 026c 0A22     		movs	r2, #10
 3988 026e 1A60     		str	r2, [r3]
 3989 0270 1AE0     		b	.L259
 3990              	.L286:
 3991 0272 00BF     		.align	2
 3992              	.L285:
 3993 0274 00000000 		.word	flag_rx
 3994 0278 00000000 		.word	asciiValue
 3995 027c 00000000 		.word	packetCntr
 3996 0280 00000000 		.word	i
 3997 0284 00000000 		.word	locationArray
 3998 0288 00000000 		.word	locationArrayCntr
 3999 028c 00000000 		.word	robotLocation
 4000 0290 00000000 		.word	negate
 4001              	.L260:
1043:.\main.c      ****                     locationArray[i] = 0;
 4002              		.loc 1 1043 0 discriminator 3
 4003 0294 934B     		ldr	r3, .L287
 4004 0296 1B68     		ldr	r3, [r3]
 4005 0298 934A     		ldr	r2, .L287+4
 4006 029a 0021     		movs	r1, #0
 4007 029c D154     		strb	r1, [r2, r3]
1042:.\main.c      ****                     locationArray[i] = 0;
 4008              		.loc 1 1042 0 discriminator 3
 4009 029e 914B     		ldr	r3, .L287
 4010 02a0 1B68     		ldr	r3, [r3]
 4011 02a2 013B     		subs	r3, r3, #1
 4012 02a4 8F4A     		ldr	r2, .L287
 4013 02a6 1360     		str	r3, [r2]
 4014              	.L259:
1042:.\main.c      ****                     locationArray[i] = 0;
 4015              		.loc 1 1042 0 is_stmt 0 discriminator 1
 4016 02a8 904B     		ldr	r3, .L287+8
 4017 02aa 1B68     		ldr	r3, [r3]
 4018 02ac 5A1E     		subs	r2, r3, #1
 4019 02ae 8D4B     		ldr	r3, .L287
 4020 02b0 1B68     		ldr	r3, [r3]
 4021 02b2 9A42     		cmp	r2, r3
 4022 02b4 EEDB     		blt	.L260
1044:.\main.c      ****                 }
1045:.\main.c      ****                 locationArrayCntr = 0;
 4023              		.loc 1 1045 0 is_stmt 1
 4024 02b6 8D4B     		ldr	r3, .L287+8
 4025 02b8 0022     		movs	r2, #0
 4026 02ba 1A60     		str	r2, [r3]
1046:.\main.c      ****                 robotLocation.g0_ypos = atoi(locationArray);
 4027              		.loc 1 1046 0
 4028 02bc 8A48     		ldr	r0, .L287+4
 4029 02be FFF7FEFF 		bl	atoi
 4030 02c2 0346     		mov	r3, r0
 4031 02c4 9AB2     		uxth	r2, r3
 4032 02c6 8A4B     		ldr	r3, .L287+12
 4033 02c8 5A81     		strh	r2, [r3, #10]	@ movhi
1047:.\main.c      ****                 memset(locationArray, 0, 10);
 4034              		.loc 1 1047 0
 4035 02ca 8748     		ldr	r0, .L287+4
 4036 02cc 0021     		movs	r1, #0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 91


 4037 02ce 0A22     		movs	r2, #10
 4038 02d0 FFF7FEFF 		bl	memset
1048:.\main.c      ****                 break;
 4039              		.loc 1 1048 0
 4040 02d4 54E1     		b	.L228
 4041              	.L237:
1049:.\main.c      ****                 case 7 : 
1050:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 4042              		.loc 1 1050 0
 4043 02d6 834B     		ldr	r3, .L287
 4044 02d8 0A22     		movs	r2, #10
 4045 02da 1A60     		str	r2, [r3]
 4046 02dc 09E0     		b	.L261
 4047              	.L262:
1051:.\main.c      ****                     locationArray[i] = 0;
 4048              		.loc 1 1051 0 discriminator 3
 4049 02de 814B     		ldr	r3, .L287
 4050 02e0 1B68     		ldr	r3, [r3]
 4051 02e2 814A     		ldr	r2, .L287+4
 4052 02e4 0021     		movs	r1, #0
 4053 02e6 D154     		strb	r1, [r2, r3]
1050:.\main.c      ****                     locationArray[i] = 0;
 4054              		.loc 1 1050 0 discriminator 3
 4055 02e8 7E4B     		ldr	r3, .L287
 4056 02ea 1B68     		ldr	r3, [r3]
 4057 02ec 013B     		subs	r3, r3, #1
 4058 02ee 7D4A     		ldr	r2, .L287
 4059 02f0 1360     		str	r3, [r2]
 4060              	.L261:
1050:.\main.c      ****                     locationArray[i] = 0;
 4061              		.loc 1 1050 0 is_stmt 0 discriminator 1
 4062 02f2 7E4B     		ldr	r3, .L287+8
 4063 02f4 1B68     		ldr	r3, [r3]
 4064 02f6 5A1E     		subs	r2, r3, #1
 4065 02f8 7A4B     		ldr	r3, .L287
 4066 02fa 1B68     		ldr	r3, [r3]
 4067 02fc 9A42     		cmp	r2, r3
 4068 02fe EEDB     		blt	.L262
1052:.\main.c      ****                 }
1053:.\main.c      ****                 locationArrayCntr = 0;
 4069              		.loc 1 1053 0 is_stmt 1
 4070 0300 7A4B     		ldr	r3, .L287+8
 4071 0302 0022     		movs	r2, #0
 4072 0304 1A60     		str	r2, [r3]
1054:.\main.c      ****                 robotLocation.g0_speed = atoi(locationArray);
 4073              		.loc 1 1054 0
 4074 0306 7848     		ldr	r0, .L287+4
 4075 0308 FFF7FEFF 		bl	atoi
 4076 030c 0346     		mov	r3, r0
 4077 030e 9AB2     		uxth	r2, r3
 4078 0310 774B     		ldr	r3, .L287+12
 4079 0312 9A81     		strh	r2, [r3, #12]	@ movhi
1055:.\main.c      ****                 memset(locationArray, 0, 10);
 4080              		.loc 1 1055 0
 4081 0314 7448     		ldr	r0, .L287+4
 4082 0316 0021     		movs	r1, #0
 4083 0318 0A22     		movs	r2, #10
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 92


 4084 031a FFF7FEFF 		bl	memset
1056:.\main.c      ****                 break;
 4085              		.loc 1 1056 0
 4086 031e 2FE1     		b	.L228
 4087              	.L238:
1057:.\main.c      ****                 case 8 : 
1058:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 4088              		.loc 1 1058 0
 4089 0320 704B     		ldr	r3, .L287
 4090 0322 0A22     		movs	r2, #10
 4091 0324 1A60     		str	r2, [r3]
 4092 0326 09E0     		b	.L263
 4093              	.L264:
1059:.\main.c      ****                     locationArray[i] = 0;
 4094              		.loc 1 1059 0 discriminator 3
 4095 0328 6E4B     		ldr	r3, .L287
 4096 032a 1B68     		ldr	r3, [r3]
 4097 032c 6E4A     		ldr	r2, .L287+4
 4098 032e 0021     		movs	r1, #0
 4099 0330 D154     		strb	r1, [r2, r3]
1058:.\main.c      ****                     locationArray[i] = 0;
 4100              		.loc 1 1058 0 discriminator 3
 4101 0332 6C4B     		ldr	r3, .L287
 4102 0334 1B68     		ldr	r3, [r3]
 4103 0336 013B     		subs	r3, r3, #1
 4104 0338 6A4A     		ldr	r2, .L287
 4105 033a 1360     		str	r3, [r2]
 4106              	.L263:
1058:.\main.c      ****                     locationArray[i] = 0;
 4107              		.loc 1 1058 0 is_stmt 0 discriminator 1
 4108 033c 6B4B     		ldr	r3, .L287+8
 4109 033e 1B68     		ldr	r3, [r3]
 4110 0340 5A1E     		subs	r2, r3, #1
 4111 0342 684B     		ldr	r3, .L287
 4112 0344 1B68     		ldr	r3, [r3]
 4113 0346 9A42     		cmp	r2, r3
 4114 0348 EEDB     		blt	.L264
1060:.\main.c      ****                 }
1061:.\main.c      ****                 locationArrayCntr = 0;
 4115              		.loc 1 1061 0 is_stmt 1
 4116 034a 684B     		ldr	r3, .L287+8
 4117 034c 0022     		movs	r2, #0
 4118 034e 1A60     		str	r2, [r3]
1062:.\main.c      ****                 robotLocation.g0_direction = atoi(locationArray);
 4119              		.loc 1 1062 0
 4120 0350 6548     		ldr	r0, .L287+4
 4121 0352 FFF7FEFF 		bl	atoi
 4122 0356 0346     		mov	r3, r0
 4123 0358 9AB2     		uxth	r2, r3
 4124 035a 654B     		ldr	r3, .L287+12
 4125 035c DA81     		strh	r2, [r3, #14]	@ movhi
1063:.\main.c      ****                 memset(locationArray, 0, 10);
 4126              		.loc 1 1063 0
 4127 035e 6248     		ldr	r0, .L287+4
 4128 0360 0021     		movs	r1, #0
 4129 0362 0A22     		movs	r2, #10
 4130 0364 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 93


1064:.\main.c      ****                 break;
 4131              		.loc 1 1064 0
 4132 0368 0AE1     		b	.L228
 4133              	.L239:
1065:.\main.c      ****                 case 9 : 
1066:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 4134              		.loc 1 1066 0
 4135 036a 5E4B     		ldr	r3, .L287
 4136 036c 0A22     		movs	r2, #10
 4137 036e 1A60     		str	r2, [r3]
 4138 0370 09E0     		b	.L265
 4139              	.L266:
1067:.\main.c      ****                     locationArray[i] = 0;
 4140              		.loc 1 1067 0 discriminator 3
 4141 0372 5C4B     		ldr	r3, .L287
 4142 0374 1B68     		ldr	r3, [r3]
 4143 0376 5C4A     		ldr	r2, .L287+4
 4144 0378 0021     		movs	r1, #0
 4145 037a D154     		strb	r1, [r2, r3]
1066:.\main.c      ****                     locationArray[i] = 0;
 4146              		.loc 1 1066 0 discriminator 3
 4147 037c 594B     		ldr	r3, .L287
 4148 037e 1B68     		ldr	r3, [r3]
 4149 0380 013B     		subs	r3, r3, #1
 4150 0382 584A     		ldr	r2, .L287
 4151 0384 1360     		str	r3, [r2]
 4152              	.L265:
1066:.\main.c      ****                     locationArray[i] = 0;
 4153              		.loc 1 1066 0 is_stmt 0 discriminator 1
 4154 0386 594B     		ldr	r3, .L287+8
 4155 0388 1B68     		ldr	r3, [r3]
 4156 038a 5A1E     		subs	r2, r3, #1
 4157 038c 554B     		ldr	r3, .L287
 4158 038e 1B68     		ldr	r3, [r3]
 4159 0390 9A42     		cmp	r2, r3
 4160 0392 EEDB     		blt	.L266
1068:.\main.c      ****                 }
1069:.\main.c      ****                 locationArrayCntr = 0;
 4161              		.loc 1 1069 0 is_stmt 1
 4162 0394 554B     		ldr	r3, .L287+8
 4163 0396 0022     		movs	r2, #0
 4164 0398 1A60     		str	r2, [r3]
1070:.\main.c      ****                 robotLocation.g1_xpos = atoi(locationArray);
 4165              		.loc 1 1070 0
 4166 039a 5348     		ldr	r0, .L287+4
 4167 039c FFF7FEFF 		bl	atoi
 4168 03a0 0346     		mov	r3, r0
 4169 03a2 9AB2     		uxth	r2, r3
 4170 03a4 524B     		ldr	r3, .L287+12
 4171 03a6 1A82     		strh	r2, [r3, #16]	@ movhi
1071:.\main.c      ****                 memset(locationArray, 0, 10);
 4172              		.loc 1 1071 0
 4173 03a8 4F48     		ldr	r0, .L287+4
 4174 03aa 0021     		movs	r1, #0
 4175 03ac 0A22     		movs	r2, #10
 4176 03ae FFF7FEFF 		bl	memset
1072:.\main.c      ****                 break;
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 94


 4177              		.loc 1 1072 0
 4178 03b2 E5E0     		b	.L228
 4179              	.L240:
1073:.\main.c      ****                 case 10 : 
1074:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 4180              		.loc 1 1074 0
 4181 03b4 4B4B     		ldr	r3, .L287
 4182 03b6 0A22     		movs	r2, #10
 4183 03b8 1A60     		str	r2, [r3]
 4184 03ba 09E0     		b	.L267
 4185              	.L268:
1075:.\main.c      ****                     locationArray[i] = 0;
 4186              		.loc 1 1075 0 discriminator 3
 4187 03bc 494B     		ldr	r3, .L287
 4188 03be 1B68     		ldr	r3, [r3]
 4189 03c0 494A     		ldr	r2, .L287+4
 4190 03c2 0021     		movs	r1, #0
 4191 03c4 D154     		strb	r1, [r2, r3]
1074:.\main.c      ****                     locationArray[i] = 0;
 4192              		.loc 1 1074 0 discriminator 3
 4193 03c6 474B     		ldr	r3, .L287
 4194 03c8 1B68     		ldr	r3, [r3]
 4195 03ca 013B     		subs	r3, r3, #1
 4196 03cc 454A     		ldr	r2, .L287
 4197 03ce 1360     		str	r3, [r2]
 4198              	.L267:
1074:.\main.c      ****                     locationArray[i] = 0;
 4199              		.loc 1 1074 0 is_stmt 0 discriminator 1
 4200 03d0 464B     		ldr	r3, .L287+8
 4201 03d2 1B68     		ldr	r3, [r3]
 4202 03d4 5A1E     		subs	r2, r3, #1
 4203 03d6 434B     		ldr	r3, .L287
 4204 03d8 1B68     		ldr	r3, [r3]
 4205 03da 9A42     		cmp	r2, r3
 4206 03dc EEDB     		blt	.L268
1076:.\main.c      ****                 }
1077:.\main.c      ****                 locationArrayCntr = 0;
 4207              		.loc 1 1077 0 is_stmt 1
 4208 03de 434B     		ldr	r3, .L287+8
 4209 03e0 0022     		movs	r2, #0
 4210 03e2 1A60     		str	r2, [r3]
1078:.\main.c      ****                 robotLocation.g1_ypos = atoi(locationArray);
 4211              		.loc 1 1078 0
 4212 03e4 4048     		ldr	r0, .L287+4
 4213 03e6 FFF7FEFF 		bl	atoi
 4214 03ea 0346     		mov	r3, r0
 4215 03ec 9AB2     		uxth	r2, r3
 4216 03ee 404B     		ldr	r3, .L287+12
 4217 03f0 5A82     		strh	r2, [r3, #18]	@ movhi
1079:.\main.c      ****                 memset(locationArray, 0, 10);
 4218              		.loc 1 1079 0
 4219 03f2 3D48     		ldr	r0, .L287+4
 4220 03f4 0021     		movs	r1, #0
 4221 03f6 0A22     		movs	r2, #10
 4222 03f8 FFF7FEFF 		bl	memset
1080:.\main.c      ****                 break;
 4223              		.loc 1 1080 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 95


 4224 03fc C0E0     		b	.L228
 4225              	.L241:
1081:.\main.c      ****                 case 11 : 
1082:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 4226              		.loc 1 1082 0
 4227 03fe 394B     		ldr	r3, .L287
 4228 0400 0A22     		movs	r2, #10
 4229 0402 1A60     		str	r2, [r3]
 4230 0404 09E0     		b	.L269
 4231              	.L270:
1083:.\main.c      ****                     locationArray[i] = 0;
 4232              		.loc 1 1083 0 discriminator 3
 4233 0406 374B     		ldr	r3, .L287
 4234 0408 1B68     		ldr	r3, [r3]
 4235 040a 374A     		ldr	r2, .L287+4
 4236 040c 0021     		movs	r1, #0
 4237 040e D154     		strb	r1, [r2, r3]
1082:.\main.c      ****                     locationArray[i] = 0;
 4238              		.loc 1 1082 0 discriminator 3
 4239 0410 344B     		ldr	r3, .L287
 4240 0412 1B68     		ldr	r3, [r3]
 4241 0414 013B     		subs	r3, r3, #1
 4242 0416 334A     		ldr	r2, .L287
 4243 0418 1360     		str	r3, [r2]
 4244              	.L269:
1082:.\main.c      ****                     locationArray[i] = 0;
 4245              		.loc 1 1082 0 is_stmt 0 discriminator 1
 4246 041a 344B     		ldr	r3, .L287+8
 4247 041c 1B68     		ldr	r3, [r3]
 4248 041e 5A1E     		subs	r2, r3, #1
 4249 0420 304B     		ldr	r3, .L287
 4250 0422 1B68     		ldr	r3, [r3]
 4251 0424 9A42     		cmp	r2, r3
 4252 0426 EEDB     		blt	.L270
1084:.\main.c      ****                 }
1085:.\main.c      ****                 locationArrayCntr = 0;
 4253              		.loc 1 1085 0 is_stmt 1
 4254 0428 304B     		ldr	r3, .L287+8
 4255 042a 0022     		movs	r2, #0
 4256 042c 1A60     		str	r2, [r3]
1086:.\main.c      ****                 robotLocation.g1_speed = atoi(locationArray);
 4257              		.loc 1 1086 0
 4258 042e 2E48     		ldr	r0, .L287+4
 4259 0430 FFF7FEFF 		bl	atoi
 4260 0434 0346     		mov	r3, r0
 4261 0436 9AB2     		uxth	r2, r3
 4262 0438 2D4B     		ldr	r3, .L287+12
 4263 043a 9A82     		strh	r2, [r3, #20]	@ movhi
1087:.\main.c      ****                 memset(locationArray, 0, 10);
 4264              		.loc 1 1087 0
 4265 043c 2A48     		ldr	r0, .L287+4
 4266 043e 0021     		movs	r1, #0
 4267 0440 0A22     		movs	r2, #10
 4268 0442 FFF7FEFF 		bl	memset
1088:.\main.c      ****                 break;
 4269              		.loc 1 1088 0
 4270 0446 9BE0     		b	.L228
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 96


 4271              	.L242:
1089:.\main.c      ****                 case 12 : 
1090:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 4272              		.loc 1 1090 0
 4273 0448 264B     		ldr	r3, .L287
 4274 044a 0A22     		movs	r2, #10
 4275 044c 1A60     		str	r2, [r3]
 4276 044e 09E0     		b	.L271
 4277              	.L272:
1091:.\main.c      ****                     locationArray[i] = 0;
 4278              		.loc 1 1091 0 discriminator 3
 4279 0450 244B     		ldr	r3, .L287
 4280 0452 1B68     		ldr	r3, [r3]
 4281 0454 244A     		ldr	r2, .L287+4
 4282 0456 0021     		movs	r1, #0
 4283 0458 D154     		strb	r1, [r2, r3]
1090:.\main.c      ****                     locationArray[i] = 0;
 4284              		.loc 1 1090 0 discriminator 3
 4285 045a 224B     		ldr	r3, .L287
 4286 045c 1B68     		ldr	r3, [r3]
 4287 045e 013B     		subs	r3, r3, #1
 4288 0460 204A     		ldr	r2, .L287
 4289 0462 1360     		str	r3, [r2]
 4290              	.L271:
1090:.\main.c      ****                     locationArray[i] = 0;
 4291              		.loc 1 1090 0 is_stmt 0 discriminator 1
 4292 0464 214B     		ldr	r3, .L287+8
 4293 0466 1B68     		ldr	r3, [r3]
 4294 0468 5A1E     		subs	r2, r3, #1
 4295 046a 1E4B     		ldr	r3, .L287
 4296 046c 1B68     		ldr	r3, [r3]
 4297 046e 9A42     		cmp	r2, r3
 4298 0470 EEDB     		blt	.L272
1092:.\main.c      ****                 }
1093:.\main.c      ****                 locationArrayCntr = 0;
 4299              		.loc 1 1093 0 is_stmt 1
 4300 0472 1E4B     		ldr	r3, .L287+8
 4301 0474 0022     		movs	r2, #0
 4302 0476 1A60     		str	r2, [r3]
1094:.\main.c      ****                 robotLocation.g1_direction = atoi(locationArray);
 4303              		.loc 1 1094 0
 4304 0478 1B48     		ldr	r0, .L287+4
 4305 047a FFF7FEFF 		bl	atoi
 4306 047e 0346     		mov	r3, r0
 4307 0480 9AB2     		uxth	r2, r3
 4308 0482 1B4B     		ldr	r3, .L287+12
 4309 0484 DA82     		strh	r2, [r3, #22]	@ movhi
1095:.\main.c      ****                 memset(locationArray, 0, 10);
 4310              		.loc 1 1095 0
 4311 0486 1848     		ldr	r0, .L287+4
 4312 0488 0021     		movs	r1, #0
 4313 048a 0A22     		movs	r2, #10
 4314 048c FFF7FEFF 		bl	memset
1096:.\main.c      ****                 break;
 4315              		.loc 1 1096 0
 4316 0490 76E0     		b	.L228
 4317              	.L243:
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 97


1097:.\main.c      ****                 case 13 : 
1098:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 4318              		.loc 1 1098 0
 4319 0492 144B     		ldr	r3, .L287
 4320 0494 0A22     		movs	r2, #10
 4321 0496 1A60     		str	r2, [r3]
 4322 0498 09E0     		b	.L273
 4323              	.L274:
1099:.\main.c      ****                     locationArray[i] = 0;
 4324              		.loc 1 1099 0 discriminator 3
 4325 049a 124B     		ldr	r3, .L287
 4326 049c 1B68     		ldr	r3, [r3]
 4327 049e 124A     		ldr	r2, .L287+4
 4328 04a0 0021     		movs	r1, #0
 4329 04a2 D154     		strb	r1, [r2, r3]
1098:.\main.c      ****                     locationArray[i] = 0;
 4330              		.loc 1 1098 0 discriminator 3
 4331 04a4 0F4B     		ldr	r3, .L287
 4332 04a6 1B68     		ldr	r3, [r3]
 4333 04a8 013B     		subs	r3, r3, #1
 4334 04aa 0E4A     		ldr	r2, .L287
 4335 04ac 1360     		str	r3, [r2]
 4336              	.L273:
1098:.\main.c      ****                     locationArray[i] = 0;
 4337              		.loc 1 1098 0 is_stmt 0 discriminator 1
 4338 04ae 0F4B     		ldr	r3, .L287+8
 4339 04b0 1B68     		ldr	r3, [r3]
 4340 04b2 5A1E     		subs	r2, r3, #1
 4341 04b4 0B4B     		ldr	r3, .L287
 4342 04b6 1B68     		ldr	r3, [r3]
 4343 04b8 9A42     		cmp	r2, r3
 4344 04ba EEDB     		blt	.L274
1100:.\main.c      ****                 }
1101:.\main.c      ****                 locationArrayCntr = 0;
 4345              		.loc 1 1101 0 is_stmt 1
 4346 04bc 0B4B     		ldr	r3, .L287+8
 4347 04be 0022     		movs	r2, #0
 4348 04c0 1A60     		str	r2, [r3]
1102:.\main.c      ****                 robotLocation.g2_xpos = atoi(locationArray);
 4349              		.loc 1 1102 0
 4350 04c2 0948     		ldr	r0, .L287+4
 4351 04c4 FFF7FEFF 		bl	atoi
 4352 04c8 0346     		mov	r3, r0
 4353 04ca 9AB2     		uxth	r2, r3
 4354 04cc 084B     		ldr	r3, .L287+12
 4355 04ce 1A83     		strh	r2, [r3, #24]	@ movhi
1103:.\main.c      ****                 memset(locationArray, 0, 10);
 4356              		.loc 1 1103 0
 4357 04d0 0548     		ldr	r0, .L287+4
 4358 04d2 0021     		movs	r1, #0
 4359 04d4 0A22     		movs	r2, #10
 4360 04d6 FFF7FEFF 		bl	memset
1104:.\main.c      ****                 break;
 4361              		.loc 1 1104 0
 4362 04da 51E0     		b	.L228
 4363              	.L244:
1105:.\main.c      ****                 case 14 : 
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 98


1106:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 4364              		.loc 1 1106 0
 4365 04dc 014B     		ldr	r3, .L287
 4366 04de 0A22     		movs	r2, #10
 4367 04e0 1A60     		str	r2, [r3]
 4368 04e2 11E0     		b	.L275
 4369              	.L288:
 4370              		.align	2
 4371              	.L287:
 4372 04e4 00000000 		.word	i
 4373 04e8 00000000 		.word	locationArray
 4374 04ec 00000000 		.word	locationArrayCntr
 4375 04f0 00000000 		.word	robotLocation
 4376              	.L276:
1107:.\main.c      ****                     locationArray[i] = 0;
 4377              		.loc 1 1107 0 discriminator 3
 4378 04f4 804B     		ldr	r3, .L289
 4379 04f6 1B68     		ldr	r3, [r3]
 4380 04f8 804A     		ldr	r2, .L289+4
 4381 04fa 0021     		movs	r1, #0
 4382 04fc D154     		strb	r1, [r2, r3]
1106:.\main.c      ****                     locationArray[i] = 0;
 4383              		.loc 1 1106 0 discriminator 3
 4384 04fe 7E4B     		ldr	r3, .L289
 4385 0500 1B68     		ldr	r3, [r3]
 4386 0502 013B     		subs	r3, r3, #1
 4387 0504 7C4A     		ldr	r2, .L289
 4388 0506 1360     		str	r3, [r2]
 4389              	.L275:
1106:.\main.c      ****                     locationArray[i] = 0;
 4390              		.loc 1 1106 0 is_stmt 0 discriminator 1
 4391 0508 7D4B     		ldr	r3, .L289+8
 4392 050a 1B68     		ldr	r3, [r3]
 4393 050c 5A1E     		subs	r2, r3, #1
 4394 050e 7A4B     		ldr	r3, .L289
 4395 0510 1B68     		ldr	r3, [r3]
 4396 0512 9A42     		cmp	r2, r3
 4397 0514 EEDB     		blt	.L276
1108:.\main.c      ****                 }
1109:.\main.c      ****                 locationArrayCntr = 0;
 4398              		.loc 1 1109 0 is_stmt 1
 4399 0516 7A4B     		ldr	r3, .L289+8
 4400 0518 0022     		movs	r2, #0
 4401 051a 1A60     		str	r2, [r3]
1110:.\main.c      ****                 robotLocation.g2_ypos = atoi(locationArray);
 4402              		.loc 1 1110 0
 4403 051c 7748     		ldr	r0, .L289+4
 4404 051e FFF7FEFF 		bl	atoi
 4405 0522 0346     		mov	r3, r0
 4406 0524 9AB2     		uxth	r2, r3
 4407 0526 774B     		ldr	r3, .L289+12
 4408 0528 5A83     		strh	r2, [r3, #26]	@ movhi
1111:.\main.c      ****                 memset(locationArray, 0, 10);
 4409              		.loc 1 1111 0
 4410 052a 7448     		ldr	r0, .L289+4
 4411 052c 0021     		movs	r1, #0
 4412 052e 0A22     		movs	r2, #10
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 99


 4413 0530 FFF7FEFF 		bl	memset
1112:.\main.c      ****                 break;
 4414              		.loc 1 1112 0
 4415 0534 24E0     		b	.L228
 4416              	.L245:
1113:.\main.c      ****                 case 15 : 
1114:.\main.c      ****                 for(i = 10; i>locationArrayCntr-1; i--){
 4417              		.loc 1 1114 0
 4418 0536 704B     		ldr	r3, .L289
 4419 0538 0A22     		movs	r2, #10
 4420 053a 1A60     		str	r2, [r3]
 4421 053c 09E0     		b	.L277
 4422              	.L278:
1115:.\main.c      ****                     locationArray[i] = 0;
 4423              		.loc 1 1115 0 discriminator 3
 4424 053e 6E4B     		ldr	r3, .L289
 4425 0540 1B68     		ldr	r3, [r3]
 4426 0542 6E4A     		ldr	r2, .L289+4
 4427 0544 0021     		movs	r1, #0
 4428 0546 D154     		strb	r1, [r2, r3]
1114:.\main.c      ****                     locationArray[i] = 0;
 4429              		.loc 1 1114 0 discriminator 3
 4430 0548 6B4B     		ldr	r3, .L289
 4431 054a 1B68     		ldr	r3, [r3]
 4432 054c 013B     		subs	r3, r3, #1
 4433 054e 6A4A     		ldr	r2, .L289
 4434 0550 1360     		str	r3, [r2]
 4435              	.L277:
1114:.\main.c      ****                     locationArray[i] = 0;
 4436              		.loc 1 1114 0 is_stmt 0 discriminator 1
 4437 0552 6B4B     		ldr	r3, .L289+8
 4438 0554 1B68     		ldr	r3, [r3]
 4439 0556 5A1E     		subs	r2, r3, #1
 4440 0558 674B     		ldr	r3, .L289
 4441 055a 1B68     		ldr	r3, [r3]
 4442 055c 9A42     		cmp	r2, r3
 4443 055e EEDB     		blt	.L278
1116:.\main.c      ****                 }
1117:.\main.c      ****                 locationArrayCntr = 0;
 4444              		.loc 1 1117 0 is_stmt 1
 4445 0560 674B     		ldr	r3, .L289+8
 4446 0562 0022     		movs	r2, #0
 4447 0564 1A60     		str	r2, [r3]
1118:.\main.c      ****                 robotLocation.g2_speed = atoi(locationArray);
 4448              		.loc 1 1118 0
 4449 0566 6548     		ldr	r0, .L289+4
 4450 0568 FFF7FEFF 		bl	atoi
 4451 056c 0346     		mov	r3, r0
 4452 056e 9AB2     		uxth	r2, r3
 4453 0570 644B     		ldr	r3, .L289+12
 4454 0572 9A83     		strh	r2, [r3, #28]	@ movhi
1119:.\main.c      ****                 memset(locationArray, 0, 10);
 4455              		.loc 1 1119 0
 4456 0574 6148     		ldr	r0, .L289+4
 4457 0576 0021     		movs	r1, #0
 4458 0578 0A22     		movs	r2, #10
 4459 057a FFF7FEFF 		bl	memset
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 100


1120:.\main.c      ****                 break;
 4460              		.loc 1 1120 0
 4461 057e 00BF     		nop
 4462              	.L228:
1121:.\main.c      **** 
1122:.\main.c      ****             }
1123:.\main.c      **** 
1124:.\main.c      ****             packetCntr = packetCntr + 1;
 4463              		.loc 1 1124 0
 4464 0580 614B     		ldr	r3, .L289+16
 4465 0582 1B68     		ldr	r3, [r3]
 4466 0584 0133     		adds	r3, r3, #1
 4467 0586 604A     		ldr	r2, .L289+16
 4468 0588 1360     		str	r3, [r2]
 4469 058a AEE0     		b	.L226
 4470              	.L227:
1125:.\main.c      **** 
1126:.\main.c      **** 
1127:.\main.c      ****         } else {
1128:.\main.c      **** 
1129:.\main.c      ****             if (asciiValue == '[' || asciiValue == ']'){
 4471              		.loc 1 1129 0
 4472 058c 5F4B     		ldr	r3, .L289+20
 4473 058e 1B68     		ldr	r3, [r3]
 4474 0590 5B2B     		cmp	r3, #91
 4475 0592 1BD0     		beq	.L279
 4476              		.loc 1 1129 0 is_stmt 0 discriminator 1
 4477 0594 5D4B     		ldr	r3, .L289+20
 4478 0596 1B68     		ldr	r3, [r3]
 4479 0598 5D2B     		cmp	r3, #93
 4480 059a 17D0     		beq	.L279
1130:.\main.c      ****                     //locationArrayCntr = 0;
1131:.\main.c      ****             } else {
1132:.\main.c      ****                 if(asciiValue == 45){
 4481              		.loc 1 1132 0 is_stmt 1
 4482 059c 5B4B     		ldr	r3, .L289+20
 4483 059e 1B68     		ldr	r3, [r3]
 4484 05a0 2D2B     		cmp	r3, #45
 4485 05a2 03D1     		bne	.L280
1133:.\main.c      ****                     negate = 1;
 4486              		.loc 1 1133 0
 4487 05a4 5A4B     		ldr	r3, .L289+24
 4488 05a6 0122     		movs	r2, #1
 4489 05a8 1A60     		str	r2, [r3]
 4490 05aa 0FE0     		b	.L279
 4491              	.L280:
1134:.\main.c      ****                 }else if(asciiValue == 10){
 4492              		.loc 1 1134 0
 4493 05ac 574B     		ldr	r3, .L289+20
 4494 05ae 1B68     		ldr	r3, [r3]
 4495 05b0 0A2B     		cmp	r3, #10
 4496 05b2 0BD0     		beq	.L279
1135:.\main.c      ****                 }
1136:.\main.c      ****                 else{
1137:.\main.c      **** 
1138:.\main.c      ****                     locationArray[locationArrayCntr] = asciiValue;
 4497              		.loc 1 1138 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 101


 4498 05b4 524B     		ldr	r3, .L289+8
 4499 05b6 1B68     		ldr	r3, [r3]
 4500 05b8 544A     		ldr	r2, .L289+20
 4501 05ba 1268     		ldr	r2, [r2]
 4502 05bc D1B2     		uxtb	r1, r2
 4503 05be 4F4A     		ldr	r2, .L289+4
 4504 05c0 D154     		strb	r1, [r2, r3]
1139:.\main.c      ****                     locationArrayCntr = locationArrayCntr + 1;
 4505              		.loc 1 1139 0
 4506 05c2 4F4B     		ldr	r3, .L289+8
 4507 05c4 1B68     		ldr	r3, [r3]
 4508 05c6 0133     		adds	r3, r3, #1
 4509 05c8 4D4A     		ldr	r2, .L289+8
 4510 05ca 1360     		str	r3, [r2]
 4511              	.L279:
1140:.\main.c      ****                 }
1141:.\main.c      **** 
1142:.\main.c      ****             }
1143:.\main.c      ****             if(packetCntr == 16){
 4512              		.loc 1 1143 0
 4513 05cc 4E4B     		ldr	r3, .L289+16
 4514 05ce 1B68     		ldr	r3, [r3]
 4515 05d0 102B     		cmp	r3, #16
 4516 05d2 40F08A80 		bne	.L226
1144:.\main.c      **** 
1145:.\main.c      ****                 robotLocation.g2_direction = asciiValue-48;
 4517              		.loc 1 1145 0
 4518 05d6 4D4B     		ldr	r3, .L289+20
 4519 05d8 1B68     		ldr	r3, [r3]
 4520 05da 9BB2     		uxth	r3, r3
 4521 05dc 303B     		subs	r3, r3, #48
 4522 05de 9BB2     		uxth	r3, r3
 4523 05e0 9AB2     		uxth	r2, r3
 4524 05e2 484B     		ldr	r3, .L289+12
 4525 05e4 DA83     		strh	r2, [r3, #30]	@ movhi
1146:.\main.c      ****                 locationArrayCntr = 0;
 4526              		.loc 1 1146 0
 4527 05e6 464B     		ldr	r3, .L289+8
 4528 05e8 0022     		movs	r2, #0
 4529 05ea 1A60     		str	r2, [r3]
1147:.\main.c      ****                 
1148:.\main.c      ****                 
1149:.\main.c      ****                 //////////////////////////////////////////////////////
1150:.\main.c      ****                 
1151:.\main.c      ****                 if (firstinit == 0){
 4530              		.loc 1 1151 0
 4531 05ec 494B     		ldr	r3, .L289+28
 4532 05ee 1B68     		ldr	r3, [r3]
 4533 05f0 002B     		cmp	r3, #0
 4534 05f2 70D1     		bne	.L281
1152:.\main.c      ****                     if (firstCounter < 10){
 4535              		.loc 1 1152 0
 4536 05f4 484B     		ldr	r3, .L289+32
 4537 05f6 1B68     		ldr	r3, [r3]
 4538 05f8 092B     		cmp	r3, #9
 4539 05fa 3ADC     		bgt	.L282
1153:.\main.c      ****                         firstx = firstx + robotLocation.robot_xpos;
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 102


 4540              		.loc 1 1153 0
 4541 05fc 414B     		ldr	r3, .L289+12
 4542 05fe 5B88     		ldrh	r3, [r3, #2]
 4543 0600 1AB2     		sxth	r2, r3
 4544 0602 464B     		ldr	r3, .L289+36
 4545 0604 1B68     		ldr	r3, [r3]
 4546 0606 1344     		add	r3, r3, r2
 4547 0608 444A     		ldr	r2, .L289+36
 4548 060a 1360     		str	r3, [r2]
1154:.\main.c      ****                         firsty = firsty + robotLocation.robot_ypos;
 4549              		.loc 1 1154 0
 4550 060c 3D4B     		ldr	r3, .L289+12
 4551 060e 9B88     		ldrh	r3, [r3, #4]
 4552 0610 1AB2     		sxth	r2, r3
 4553 0612 434B     		ldr	r3, .L289+40
 4554 0614 1B68     		ldr	r3, [r3]
 4555 0616 1344     		add	r3, r3, r2
 4556 0618 414A     		ldr	r2, .L289+40
 4557 061a 1360     		str	r3, [r2]
1155:.\main.c      ****                         
1156:.\main.c      ****                         if ((robotLocation.robot_orientation - 1350)> 0){
 4558              		.loc 1 1156 0
 4559 061c 394B     		ldr	r3, .L289+12
 4560 061e DB88     		ldrh	r3, [r3, #6]
 4561 0620 1BB2     		sxth	r3, r3
 4562 0622 A3F24653 		subw	r3, r3, #1350
 4563 0626 002B     		cmp	r3, #0
 4564 0628 0ADD     		ble	.L283
1157:.\main.c      ****                             firstAngle = firstAngle + (robotLocation.robot_orientation - 1350);    
 4565              		.loc 1 1157 0
 4566 062a 364B     		ldr	r3, .L289+12
 4567 062c DB88     		ldrh	r3, [r3, #6]
 4568 062e 1BB2     		sxth	r3, r3
 4569 0630 A3F24652 		subw	r2, r3, #1350
 4570 0634 3B4B     		ldr	r3, .L289+44
 4571 0636 1B68     		ldr	r3, [r3]
 4572 0638 1344     		add	r3, r3, r2
 4573 063a 3A4A     		ldr	r2, .L289+44
 4574 063c 1360     		str	r3, [r2]
 4575 063e 10E0     		b	.L284
 4576              	.L283:
1158:.\main.c      ****                         } else if ((robotLocation.robot_orientation - 1350) <= 0){
 4577              		.loc 1 1158 0
 4578 0640 304B     		ldr	r3, .L289+12
 4579 0642 DB88     		ldrh	r3, [r3, #6]
 4580 0644 1BB2     		sxth	r3, r3
 4581 0646 A3F24653 		subw	r3, r3, #1350
 4582 064a 002B     		cmp	r3, #0
 4583 064c 09DC     		bgt	.L284
1159:.\main.c      ****                             firstAngle = firstAngle + (3600 + (robotLocation.robot_orientation - 13
 4584              		.loc 1 1159 0
 4585 064e 2D4B     		ldr	r3, .L289+12
 4586 0650 DB88     		ldrh	r3, [r3, #6]
 4587 0652 1BB2     		sxth	r3, r3
 4588 0654 03F6CA02 		addw	r2, r3, #2250
 4589 0658 324B     		ldr	r3, .L289+44
 4590 065a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 103


 4591 065c 1344     		add	r3, r3, r2
 4592 065e 314A     		ldr	r2, .L289+44
 4593 0660 1360     		str	r3, [r2]
 4594              	.L284:
1160:.\main.c      ****                         }
1161:.\main.c      ****                         
1162:.\main.c      ****                         stop();
 4595              		.loc 1 1162 0
 4596 0662 FFF7FEFF 		bl	stop
1163:.\main.c      ****                         
1164:.\main.c      ****                         firstCounter++;
 4597              		.loc 1 1164 0
 4598 0666 2C4B     		ldr	r3, .L289+32
 4599 0668 1B68     		ldr	r3, [r3]
 4600 066a 0133     		adds	r3, r3, #1
 4601 066c 2A4A     		ldr	r2, .L289+32
 4602 066e 1360     		str	r3, [r2]
 4603 0670 31E0     		b	.L281
 4604              	.L282:
1165:.\main.c      ****                     } else if (firstCounter == 10){
 4605              		.loc 1 1165 0
 4606 0672 294B     		ldr	r3, .L289+32
 4607 0674 1B68     		ldr	r3, [r3]
 4608 0676 0A2B     		cmp	r3, #10
 4609 0678 2DD1     		bne	.L281
1166:.\main.c      ****                         firstx = firstx / 10;
 4610              		.loc 1 1166 0
 4611 067a 284B     		ldr	r3, .L289+36
 4612 067c 1B68     		ldr	r3, [r3]
 4613 067e 2A4A     		ldr	r2, .L289+48
 4614 0680 82FB0312 		smull	r1, r2, r2, r3
 4615 0684 9210     		asrs	r2, r2, #2
 4616 0686 DB17     		asrs	r3, r3, #31
 4617 0688 D31A     		subs	r3, r2, r3
 4618 068a 244A     		ldr	r2, .L289+36
 4619 068c 1360     		str	r3, [r2]
1167:.\main.c      ****                         firsty = firsty / 10;
 4620              		.loc 1 1167 0
 4621 068e 244B     		ldr	r3, .L289+40
 4622 0690 1B68     		ldr	r3, [r3]
 4623 0692 254A     		ldr	r2, .L289+48
 4624 0694 82FB0312 		smull	r1, r2, r2, r3
 4625 0698 9210     		asrs	r2, r2, #2
 4626 069a DB17     		asrs	r3, r3, #31
 4627 069c D31A     		subs	r3, r2, r3
 4628 069e 204A     		ldr	r2, .L289+40
 4629 06a0 1360     		str	r3, [r2]
1168:.\main.c      ****                         firstAngle = firstAngle / 10;
 4630              		.loc 1 1168 0
 4631 06a2 204B     		ldr	r3, .L289+44
 4632 06a4 1B68     		ldr	r3, [r3]
 4633 06a6 204A     		ldr	r2, .L289+48
 4634 06a8 82FB0312 		smull	r1, r2, r2, r3
 4635 06ac 9210     		asrs	r2, r2, #2
 4636 06ae DB17     		asrs	r3, r3, #31
 4637 06b0 D31A     		subs	r3, r2, r3
 4638 06b2 1C4A     		ldr	r2, .L289+44
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 104


 4639 06b4 1360     		str	r3, [r2]
1169:.\main.c      ****                         PWM_1_WriteCompare(PWMPower);
 4640              		.loc 1 1169 0
 4641 06b6 1D4B     		ldr	r3, .L289+52
 4642 06b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4643 06ba 1846     		mov	r0, r3
 4644 06bc FFF7FEFF 		bl	PWM_1_WriteCompare
1170:.\main.c      ****                         PWM_2_WriteCompare(PWMPower);
 4645              		.loc 1 1170 0
 4646 06c0 1A4B     		ldr	r3, .L289+52
 4647 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4648 06c4 1846     		mov	r0, r3
 4649 06c6 FFF7FEFF 		bl	PWM_2_WriteCompare
1171:.\main.c      ****                         firstinit = 1;
 4650              		.loc 1 1171 0
 4651 06ca 124B     		ldr	r3, .L289+28
 4652 06cc 0122     		movs	r2, #1
 4653 06ce 1A60     		str	r2, [r3]
1172:.\main.c      ****                         
1173:.\main.c      ****                         LED0_Write(1);
 4654              		.loc 1 1173 0
 4655 06d0 0120     		movs	r0, #1
 4656 06d2 FFF7FEFF 		bl	LED0_Write
 4657              	.L281:
1174:.\main.c      ****                     }
1175:.\main.c      ****                 }
1176:.\main.c      ****                 
1177:.\main.c      ****                 /////////////////////////////////////////////////////////
1178:.\main.c      ****                 
1179:.\main.c      ****                 /*
1180:.\main.c      ****                 sprintf(str,"[%d,%d,%d],[%d,%d,%d,%d],[%d,%d,%d,%d],[%d,%d,%d,%d]\n",robotLocation.
1181:.\main.c      ****                 USBUART_PutString(str);
1182:.\main.c      ****                 */
1183:.\main.c      ****                 memset(locationArray, 0, 10);
 4658              		.loc 1 1183 0
 4659 06d6 0948     		ldr	r0, .L289+4
 4660 06d8 0021     		movs	r1, #0
 4661 06da 0A22     		movs	r2, #10
 4662 06dc FFF7FEFF 		bl	memset
1184:.\main.c      ****                 packetCntr++;
 4663              		.loc 1 1184 0
 4664 06e0 094B     		ldr	r3, .L289+16
 4665 06e2 1B68     		ldr	r3, [r3]
 4666 06e4 0133     		adds	r3, r3, #1
 4667 06e6 084A     		ldr	r2, .L289+16
 4668 06e8 1360     		str	r3, [r2]
 4669              	.L226:
1185:.\main.c      ****             }
1186:.\main.c      **** 
1187:.\main.c      ****         }
1188:.\main.c      ****         UART_ReadControlRegister();   
 4670              		.loc 1 1188 0
 4671 06ea FFF7FEFF 		bl	UART_ReadControlRegister
1189:.\main.c      ****         flag_rx = 0;
 4672              		.loc 1 1189 0
 4673 06ee 104B     		ldr	r3, .L289+56
 4674 06f0 0022     		movs	r2, #0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 105


 4675 06f2 1A70     		strb	r2, [r3]
 4676              	.L223:
1190:.\main.c      ****     }
1191:.\main.c      **** 
1192:.\main.c      **** }
 4677              		.loc 1 1192 0
 4678 06f4 80BD     		pop	{r7, pc}
 4679              	.L290:
 4680 06f6 00BF     		.align	2
 4681              	.L289:
 4682 06f8 00000000 		.word	i
 4683 06fc 00000000 		.word	locationArray
 4684 0700 00000000 		.word	locationArrayCntr
 4685 0704 00000000 		.word	robotLocation
 4686 0708 00000000 		.word	packetCntr
 4687 070c 00000000 		.word	asciiValue
 4688 0710 00000000 		.word	negate
 4689 0714 00000000 		.word	firstinit
 4690 0718 00000000 		.word	firstCounter
 4691 071c 00000000 		.word	firstx
 4692 0720 00000000 		.word	firsty
 4693 0724 00000000 		.word	firstAngle
 4694 0728 67666666 		.word	1717986919
 4695 072c 00000000 		.word	PWMPower
 4696 0730 00000000 		.word	flag_rx
 4697              		.cfi_endproc
 4698              	.LFE88:
 4699              		.size	receiveRX, .-receiveRX
 4700              		.section	.text.usbPutString,"ax",%progbits
 4701              		.align	2
 4702              		.global	usbPutString
 4703              		.thumb
 4704              		.thumb_func
 4705              		.type	usbPutString, %function
 4706              	usbPutString:
 4707              	.LFB89:
1193:.\main.c      **** 
1194:.\main.c      **** //* ========================================
1195:.\main.c      **** void usbPutString(char *s) {
 4708              		.loc 1 1195 0
 4709              		.cfi_startproc
 4710              		@ args = 0, pretend = 0, frame = 8
 4711              		@ frame_needed = 1, uses_anonymous_args = 0
 4712              		@ link register save eliminated.
 4713 0000 80B4     		push	{r7}
 4714              		.cfi_def_cfa_offset 4
 4715              		.cfi_offset 7, -4
 4716 0002 83B0     		sub	sp, sp, #12
 4717              		.cfi_def_cfa_offset 16
 4718 0004 00AF     		add	r7, sp, #0
 4719              		.cfi_def_cfa_register 7
 4720 0006 7860     		str	r0, [r7, #4]
1196:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1197:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1198:.\main.c      **** //  length to 62 char (63rd char is a '!')
1199:.\main.c      **** 
1200:.\main.c      **** #ifdef USE_USB     
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 106


1201:.\main.c      ****     while (USBUART_CDCIsReady() == 0);
1202:.\main.c      ****     s[63]='\0';
1203:.\main.c      ****     s[62]='!';
1204:.\main.c      ****     USBUART_PutData((uint8*)s,strlen(s));
1205:.\main.c      **** #endif
1206:.\main.c      **** }
 4721              		.loc 1 1206 0
 4722 0008 0C37     		adds	r7, r7, #12
 4723              		.cfi_def_cfa_offset 4
 4724 000a BD46     		mov	sp, r7
 4725              		.cfi_def_cfa_register 13
 4726              		@ sp needed
 4727 000c 5DF8047B 		ldr	r7, [sp], #4
 4728              		.cfi_restore 7
 4729              		.cfi_def_cfa_offset 0
 4730 0010 7047     		bx	lr
 4731              		.cfi_endproc
 4732              	.LFE89:
 4733              		.size	usbPutString, .-usbPutString
 4734 0012 00BF     		.section	.text.usbPutChar,"ax",%progbits
 4735              		.align	2
 4736              		.global	usbPutChar
 4737              		.thumb
 4738              		.thumb_func
 4739              		.type	usbPutChar, %function
 4740              	usbPutChar:
 4741              	.LFB90:
1207:.\main.c      **** //* ========================================
1208:.\main.c      **** void usbPutChar(char c) {
 4742              		.loc 1 1208 0
 4743              		.cfi_startproc
 4744              		@ args = 0, pretend = 0, frame = 8
 4745              		@ frame_needed = 1, uses_anonymous_args = 0
 4746              		@ link register save eliminated.
 4747 0000 80B4     		push	{r7}
 4748              		.cfi_def_cfa_offset 4
 4749              		.cfi_offset 7, -4
 4750 0002 83B0     		sub	sp, sp, #12
 4751              		.cfi_def_cfa_offset 16
 4752 0004 00AF     		add	r7, sp, #0
 4753              		.cfi_def_cfa_register 7
 4754 0006 0346     		mov	r3, r0
 4755 0008 FB71     		strb	r3, [r7, #7]
1209:.\main.c      **** #ifdef USE_USB     
1210:.\main.c      ****     while (USBUART_CDCIsReady() == 0);
1211:.\main.c      ****     USBUART_PutChar(c);
1212:.\main.c      **** #endif    
1213:.\main.c      **** }
 4756              		.loc 1 1213 0
 4757 000a 0C37     		adds	r7, r7, #12
 4758              		.cfi_def_cfa_offset 4
 4759 000c BD46     		mov	sp, r7
 4760              		.cfi_def_cfa_register 13
 4761              		@ sp needed
 4762 000e 5DF8047B 		ldr	r7, [sp], #4
 4763              		.cfi_restore 7
 4764              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 107


 4765 0012 7047     		bx	lr
 4766              		.cfi_endproc
 4767              	.LFE90:
 4768              		.size	usbPutChar, .-usbPutChar
 4769              		.section	.text.handle_usb,"ax",%progbits
 4770              		.align	2
 4771              		.global	handle_usb
 4772              		.thumb
 4773              		.thumb_func
 4774              		.type	handle_usb, %function
 4775              	handle_usb:
 4776              	.LFB91:
1214:.\main.c      **** //* ========================================
1215:.\main.c      **** void handle_usb() {
 4777              		.loc 1 1215 0
 4778              		.cfi_startproc
 4779              		@ args = 0, pretend = 0, frame = 8
 4780              		@ frame_needed = 1, uses_anonymous_args = 0
 4781 0000 80B5     		push	{r7, lr}
 4782              		.cfi_def_cfa_offset 8
 4783              		.cfi_offset 7, -8
 4784              		.cfi_offset 14, -4
 4785 0002 82B0     		sub	sp, sp, #8
 4786              		.cfi_def_cfa_offset 16
 4787 0004 00AF     		add	r7, sp, #0
 4788              		.cfi_def_cfa_register 7
1216:.\main.c      **** // handles input at terminal, echos it back to the terminal
1217:.\main.c      **** // turn echo OFF, key emulation: only CR
1218:.\main.c      **** // entered string is made available in 'line' and 'flag_KB_string' is set
1219:.\main.c      **** 
1220:.\main.c      ****     static uint8 usbStarted = FALSE;
1221:.\main.c      ****     static uint16 usbBufCount = 0;
1222:.\main.c      ****     uint8 c;
1223:.\main.c      **** 
1224:.\main.c      ****     if (!usbStarted) {
 4789              		.loc 1 1224 0
 4790 0006 2A4B     		ldr	r3, .L302
 4791 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4792 000a 002B     		cmp	r3, #0
 4793 000c 0AD1     		bne	.L294
1225:.\main.c      ****         if (USBUART_GetConfiguration()) {
 4794              		.loc 1 1225 0
 4795 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 4796 0012 0346     		mov	r3, r0
 4797 0014 002B     		cmp	r3, #0
 4798 0016 48D0     		beq	.L293
1226:.\main.c      ****             USBUART_CDC_Init();
 4799              		.loc 1 1226 0
 4800 0018 FFF7FEFF 		bl	USBUART_CDC_Init
1227:.\main.c      ****             usbStarted = TRUE;
 4801              		.loc 1 1227 0
 4802 001c 244B     		ldr	r3, .L302
 4803 001e 0122     		movs	r2, #1
 4804 0020 1A70     		strb	r2, [r3]
 4805 0022 42E0     		b	.L293
 4806              	.L294:
1228:.\main.c      ****         }
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 108


1229:.\main.c      ****     } else {
1230:.\main.c      ****         if (USBUART_DataIsReady() != 0) {
 4807              		.loc 1 1230 0
 4808 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 4809 0028 0346     		mov	r3, r0
 4810 002a 002B     		cmp	r3, #0
 4811 002c 3DD0     		beq	.L293
1231:.\main.c      ****             c = USBUART_GetChar();
 4812              		.loc 1 1231 0
 4813 002e FFF7FEFF 		bl	USBUART_GetChar
 4814 0032 0346     		mov	r3, r0
 4815 0034 FB71     		strb	r3, [r7, #7]
1232:.\main.c      **** 
1233:.\main.c      ****             if ((c == 13) || (c == 10)) {
 4816              		.loc 1 1233 0
 4817 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4818 0038 0D2B     		cmp	r3, #13
 4819 003a 02D0     		beq	.L297
 4820              		.loc 1 1233 0 is_stmt 0 discriminator 1
 4821 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4822 003e 0A2B     		cmp	r3, #10
 4823 0040 10D1     		bne	.L298
 4824              	.L297:
1234:.\main.c      **** //                if (usbBufCount > 0)
1235:.\main.c      ****                 {
1236:.\main.c      ****                     entry[usbBufCount] = '\0';
 4825              		.loc 1 1236 0 is_stmt 1
 4826 0042 1C4B     		ldr	r3, .L302+4
 4827 0044 1B88     		ldrh	r3, [r3]
 4828 0046 1A46     		mov	r2, r3
 4829 0048 1B4B     		ldr	r3, .L302+8
 4830 004a 0021     		movs	r1, #0
 4831 004c 9954     		strb	r1, [r3, r2]
1237:.\main.c      ****                     strcpy(line, entry);
 4832              		.loc 1 1237 0
 4833 004e 1B48     		ldr	r0, .L302+12
 4834 0050 1949     		ldr	r1, .L302+8
 4835 0052 FFF7FEFF 		bl	strcpy
1238:.\main.c      ****                     usbBufCount = 0;
 4836              		.loc 1 1238 0
 4837 0056 174B     		ldr	r3, .L302+4
 4838 0058 0022     		movs	r2, #0
 4839 005a 1A80     		strh	r2, [r3]	@ movhi
1239:.\main.c      ****                     flag_KB_string = 1;
 4840              		.loc 1 1239 0
 4841 005c 184B     		ldr	r3, .L302+16
 4842 005e 0122     		movs	r2, #1
 4843 0060 1A70     		strb	r2, [r3]
 4844 0062 22E0     		b	.L293
 4845              	.L298:
1240:.\main.c      ****                 }
1241:.\main.c      ****             } else {
1242:.\main.c      ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL)) && (usbBufCount > 0))
 4846              		.loc 1 1242 0
 4847 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4848 0066 082B     		cmp	r3, #8
 4849 0068 02D0     		beq	.L299
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 109


 4850              		.loc 1 1242 0 is_stmt 0 discriminator 2
 4851 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4852 006c 7F2B     		cmp	r3, #127
 4853 006e 0AD1     		bne	.L300
 4854              	.L299:
 4855              		.loc 1 1242 0 discriminator 3
 4856 0070 104B     		ldr	r3, .L302+4
 4857 0072 1B88     		ldrh	r3, [r3]
 4858 0074 002B     		cmp	r3, #0
 4859 0076 06D0     		beq	.L300
1243:.\main.c      ****                     usbBufCount--;
 4860              		.loc 1 1243 0 is_stmt 1
 4861 0078 0E4B     		ldr	r3, .L302+4
 4862 007a 1B88     		ldrh	r3, [r3]
 4863 007c 013B     		subs	r3, r3, #1
 4864 007e 9AB2     		uxth	r2, r3
 4865 0080 0C4B     		ldr	r3, .L302+4
 4866 0082 1A80     		strh	r2, [r3]	@ movhi
 4867 0084 11E0     		b	.L293
 4868              	.L300:
1244:.\main.c      ****                 else {
1245:.\main.c      ****                 if (usbBufCount > (BUF_SIZE - 2)) // one less else strtok triggers a crash
 4869              		.loc 1 1245 0
 4870 0086 0B4B     		ldr	r3, .L302+4
 4871 0088 1B88     		ldrh	r3, [r3]
 4872 008a 3E2B     		cmp	r3, #62
 4873 008c 03D9     		bls	.L301
1246:.\main.c      ****                 {
1247:.\main.c      ****                     USBUART_PutChar('!');
 4874              		.loc 1 1247 0
 4875 008e 2120     		movs	r0, #33
 4876 0090 FFF7FEFF 		bl	USBUART_PutChar
 4877 0094 09E0     		b	.L293
 4878              	.L301:
1248:.\main.c      ****                 } else
1249:.\main.c      ****                 entry[usbBufCount++] = c;
 4879              		.loc 1 1249 0
 4880 0096 074B     		ldr	r3, .L302+4
 4881 0098 1B88     		ldrh	r3, [r3]
 4882 009a 5A1C     		adds	r2, r3, #1
 4883 009c 91B2     		uxth	r1, r2
 4884 009e 054A     		ldr	r2, .L302+4
 4885 00a0 1180     		strh	r1, [r2]	@ movhi
 4886 00a2 1946     		mov	r1, r3
 4887 00a4 044A     		ldr	r2, .L302+8
 4888 00a6 FB79     		ldrb	r3, [r7, #7]
 4889 00a8 5354     		strb	r3, [r2, r1]
 4890              	.L293:
1250:.\main.c      ****             }
1251:.\main.c      ****         }
1252:.\main.c      ****     }
1253:.\main.c      **** }
1254:.\main.c      **** }
 4891              		.loc 1 1254 0
 4892 00aa 0837     		adds	r7, r7, #8
 4893              		.cfi_def_cfa_offset 8
 4894 00ac BD46     		mov	sp, r7
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 110


 4895              		.cfi_def_cfa_register 13
 4896              		@ sp needed
 4897 00ae 80BD     		pop	{r7, pc}
 4898              	.L303:
 4899              		.align	2
 4900              	.L302:
 4901 00b0 DF000000 		.word	usbStarted.8360
 4902 00b4 E0000000 		.word	usbBufCount.8361
 4903 00b8 00000000 		.word	entry
 4904 00bc 00000000 		.word	line
 4905 00c0 00000000 		.word	flag_KB_string
 4906              		.cfi_endproc
 4907              	.LFE91:
 4908              		.size	handle_usb, .-handle_usb
 4909              		.bss
 4910              	usbStarted.8360:
 4911 00df 00       		.space	1
 4912              		.align	1
 4913              	usbBufCount.8361:
 4914 00e0 0000     		.space	2
 4915 00e2 0000     		.text
 4916              	.Letext0:
 4917              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4918              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4919              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4920              		.file 5 ".\\vars.h"
 4921              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4922              		.section	.debug_info,"",%progbits
 4923              	.Ldebug_info0:
 4924 0000 E70A0000 		.4byte	0xae7
 4925 0004 0400     		.2byte	0x4
 4926 0006 00000000 		.4byte	.Ldebug_abbrev0
 4927 000a 04       		.byte	0x4
 4928 000b 01       		.uleb128 0x1
 4929 000c F2020000 		.4byte	.LASF153
 4930 0010 01       		.byte	0x1
 4931 0011 51070000 		.4byte	.LASF154
 4932 0015 FD030000 		.4byte	.LASF155
 4933 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4934 001d 00000000 		.4byte	0
 4935 0021 00000000 		.4byte	.Ldebug_line0
 4936 0025 02       		.uleb128 0x2
 4937 0026 01       		.byte	0x1
 4938 0027 06       		.byte	0x6
 4939 0028 38060000 		.4byte	.LASF0
 4940 002c 02       		.uleb128 0x2
 4941 002d 01       		.byte	0x1
 4942 002e 08       		.byte	0x8
 4943 002f 72050000 		.4byte	.LASF1
 4944 0033 02       		.uleb128 0x2
 4945 0034 02       		.byte	0x2
 4946 0035 05       		.byte	0x5
 4947 0036 54040000 		.4byte	.LASF2
 4948 003a 02       		.uleb128 0x2
 4949 003b 02       		.byte	0x2
 4950 003c 07       		.byte	0x7
 4951 003d 5B060000 		.4byte	.LASF3
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 111


 4952 0041 03       		.uleb128 0x3
 4953 0042 BE000000 		.4byte	.LASF11
 4954 0046 02       		.byte	0x2
 4955 0047 3F       		.byte	0x3f
 4956 0048 4C000000 		.4byte	0x4c
 4957 004c 02       		.uleb128 0x2
 4958 004d 04       		.byte	0x4
 4959 004e 05       		.byte	0x5
 4960 004f 5E040000 		.4byte	.LASF4
 4961 0053 02       		.uleb128 0x2
 4962 0054 04       		.byte	0x4
 4963 0055 07       		.byte	0x7
 4964 0056 11050000 		.4byte	.LASF5
 4965 005a 02       		.uleb128 0x2
 4966 005b 08       		.byte	0x8
 4967 005c 05       		.byte	0x5
 4968 005d C3020000 		.4byte	.LASF6
 4969 0061 02       		.uleb128 0x2
 4970 0062 08       		.byte	0x8
 4971 0063 07       		.byte	0x7
 4972 0064 73010000 		.4byte	.LASF7
 4973 0068 04       		.uleb128 0x4
 4974 0069 04       		.byte	0x4
 4975 006a 05       		.byte	0x5
 4976 006b 696E7400 		.ascii	"int\000"
 4977 006f 02       		.uleb128 0x2
 4978 0070 04       		.byte	0x4
 4979 0071 07       		.byte	0x7
 4980 0072 70000000 		.4byte	.LASF8
 4981 0076 02       		.uleb128 0x2
 4982 0077 04       		.byte	0x4
 4983 0078 07       		.byte	0x7
 4984 0079 08050000 		.4byte	.LASF9
 4985 007d 05       		.uleb128 0x5
 4986 007e 04       		.byte	0x4
 4987 007f 83000000 		.4byte	0x83
 4988 0083 02       		.uleb128 0x2
 4989 0084 01       		.byte	0x1
 4990 0085 08       		.byte	0x8
 4991 0086 7C020000 		.4byte	.LASF10
 4992 008a 03       		.uleb128 0x3
 4993 008b 38050000 		.4byte	.LASF12
 4994 008f 03       		.byte	0x3
 4995 0090 2C       		.byte	0x2c
 4996 0091 41000000 		.4byte	0x41
 4997 0095 06       		.uleb128 0x6
 4998 0096 E4060000 		.4byte	.LASF13
 4999 009a 04       		.byte	0x4
 5000 009b 9201     		.2byte	0x192
 5001 009d 2C000000 		.4byte	0x2c
 5002 00a1 06       		.uleb128 0x6
 5003 00a2 94020000 		.4byte	.LASF14
 5004 00a6 04       		.byte	0x4
 5005 00a7 9301     		.2byte	0x193
 5006 00a9 3A000000 		.4byte	0x3a
 5007 00ad 06       		.uleb128 0x6
 5008 00ae 9B020000 		.4byte	.LASF15
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 112


 5009 00b2 04       		.byte	0x4
 5010 00b3 9501     		.2byte	0x195
 5011 00b5 25000000 		.4byte	0x25
 5012 00b9 06       		.uleb128 0x6
 5013 00ba C8000000 		.4byte	.LASF16
 5014 00be 04       		.byte	0x4
 5015 00bf 9601     		.2byte	0x196
 5016 00c1 33000000 		.4byte	0x33
 5017 00c5 02       		.uleb128 0x2
 5018 00c6 04       		.byte	0x4
 5019 00c7 04       		.byte	0x4
 5020 00c8 40010000 		.4byte	.LASF17
 5021 00cc 02       		.uleb128 0x2
 5022 00cd 08       		.byte	0x8
 5023 00ce 04       		.byte	0x4
 5024 00cf EA060000 		.4byte	.LASF18
 5025 00d3 07       		.uleb128 0x7
 5026 00d4 95000000 		.4byte	0x95
 5027 00d8 07       		.uleb128 0x7
 5028 00d9 A1000000 		.4byte	0xa1
 5029 00dd 08       		.uleb128 0x8
 5030 00de A1030000 		.4byte	.LASF156
 5031 00e2 20       		.byte	0x20
 5032 00e3 05       		.byte	0x5
 5033 00e4 2B       		.byte	0x2b
 5034 00e5 B6010000 		.4byte	0x1b6
 5035 00e9 09       		.uleb128 0x9
 5036 00ea AB030000 		.4byte	.LASF19
 5037 00ee 05       		.byte	0x5
 5038 00ef 2C       		.byte	0x2c
 5039 00f0 AD000000 		.4byte	0xad
 5040 00f4 00       		.byte	0
 5041 00f5 09       		.uleb128 0x9
 5042 00f6 64010000 		.4byte	.LASF20
 5043 00fa 05       		.byte	0x5
 5044 00fb 2D       		.byte	0x2d
 5045 00fc 95000000 		.4byte	0x95
 5046 0100 01       		.byte	0x1
 5047 0101 09       		.uleb128 0x9
 5048 0102 4C050000 		.4byte	.LASF21
 5049 0106 05       		.byte	0x5
 5050 0107 2E       		.byte	0x2e
 5051 0108 B9000000 		.4byte	0xb9
 5052 010c 02       		.byte	0x2
 5053 010d 09       		.uleb128 0x9
 5054 010e 5F020000 		.4byte	.LASF22
 5055 0112 05       		.byte	0x5
 5056 0113 2F       		.byte	0x2f
 5057 0114 B9000000 		.4byte	0xb9
 5058 0118 04       		.byte	0x4
 5059 0119 09       		.uleb128 0x9
 5060 011a 6E060000 		.4byte	.LASF23
 5061 011e 05       		.byte	0x5
 5062 011f 30       		.byte	0x30
 5063 0120 B9000000 		.4byte	0xb9
 5064 0124 06       		.byte	0x6
 5065 0125 09       		.uleb128 0x9
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 113


 5066 0126 04070000 		.4byte	.LASF24
 5067 012a 05       		.byte	0x5
 5068 012b 31       		.byte	0x31
 5069 012c B9000000 		.4byte	0xb9
 5070 0130 08       		.byte	0x8
 5071 0131 09       		.uleb128 0x9
 5072 0132 89030000 		.4byte	.LASF25
 5073 0136 05       		.byte	0x5
 5074 0137 32       		.byte	0x32
 5075 0138 B9000000 		.4byte	0xb9
 5076 013c 0A       		.byte	0xa
 5077 013d 09       		.uleb128 0x9
 5078 013e 81020000 		.4byte	.LASF26
 5079 0142 05       		.byte	0x5
 5080 0143 33       		.byte	0x33
 5081 0144 B9000000 		.4byte	0xb9
 5082 0148 0C       		.byte	0xc
 5083 0149 09       		.uleb128 0x9
 5084 014a B0030000 		.4byte	.LASF27
 5085 014e 05       		.byte	0x5
 5086 014f 34       		.byte	0x34
 5087 0150 B9000000 		.4byte	0xb9
 5088 0154 0E       		.byte	0xe
 5089 0155 09       		.uleb128 0x9
 5090 0156 D1020000 		.4byte	.LASF28
 5091 015a 05       		.byte	0x5
 5092 015b 35       		.byte	0x35
 5093 015c B9000000 		.4byte	0xb9
 5094 0160 10       		.byte	0x10
 5095 0161 09       		.uleb128 0x9
 5096 0162 ED040000 		.4byte	.LASF29
 5097 0166 05       		.byte	0x5
 5098 0167 36       		.byte	0x36
 5099 0168 B9000000 		.4byte	0xb9
 5100 016c 12       		.byte	0x12
 5101 016d 09       		.uleb128 0x9
 5102 016e 22070000 		.4byte	.LASF30
 5103 0172 05       		.byte	0x5
 5104 0173 37       		.byte	0x37
 5105 0174 B9000000 		.4byte	0xb9
 5106 0178 14       		.byte	0x14
 5107 0179 09       		.uleb128 0x9
 5108 017a A0020000 		.4byte	.LASF31
 5109 017e 05       		.byte	0x5
 5110 017f 38       		.byte	0x38
 5111 0180 B9000000 		.4byte	0xb9
 5112 0184 16       		.byte	0x16
 5113 0185 09       		.uleb128 0x9
 5114 0186 E4000000 		.4byte	.LASF32
 5115 018a 05       		.byte	0x5
 5116 018b 39       		.byte	0x39
 5117 018c B9000000 		.4byte	0xb9
 5118 0190 18       		.byte	0x18
 5119 0191 09       		.uleb128 0x9
 5120 0192 86040000 		.4byte	.LASF33
 5121 0196 05       		.byte	0x5
 5122 0197 3A       		.byte	0x3a
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 114


 5123 0198 B9000000 		.4byte	0xb9
 5124 019c 1A       		.byte	0x1a
 5125 019d 09       		.uleb128 0x9
 5126 019e 80030000 		.4byte	.LASF34
 5127 01a2 05       		.byte	0x5
 5128 01a3 3B       		.byte	0x3b
 5129 01a4 B9000000 		.4byte	0xb9
 5130 01a8 1C       		.byte	0x1c
 5131 01a9 09       		.uleb128 0x9
 5132 01aa 25010000 		.4byte	.LASF35
 5133 01ae 05       		.byte	0x5
 5134 01af 3C       		.byte	0x3c
 5135 01b0 B9000000 		.4byte	0xb9
 5136 01b4 1E       		.byte	0x1e
 5137 01b5 00       		.byte	0
 5138 01b6 03       		.uleb128 0x3
 5139 01b7 75020000 		.4byte	.LASF36
 5140 01bb 05       		.byte	0x5
 5141 01bc 3D       		.byte	0x3d
 5142 01bd DD000000 		.4byte	0xdd
 5143 01c1 0A       		.uleb128 0xa
 5144 01c2 01       		.byte	0x1
 5145 01c3 01       		.byte	0x1
 5146 01c4 71       		.byte	0x71
 5147 01c5 D6010000 		.4byte	0x1d6
 5148 01c9 0B       		.uleb128 0xb
 5149 01ca 85050000 		.4byte	.LASF37
 5150 01ce 00       		.sleb128 0
 5151 01cf 0B       		.uleb128 0xb
 5152 01d0 48020000 		.4byte	.LASF38
 5153 01d4 01       		.sleb128 1
 5154 01d5 00       		.byte	0
 5155 01d6 03       		.uleb128 0x3
 5156 01d7 D9020000 		.4byte	.LASF39
 5157 01db 01       		.byte	0x1
 5158 01dc 72       		.byte	0x72
 5159 01dd C1010000 		.4byte	0x1c1
 5160 01e1 0C       		.uleb128 0xc
 5161 01e2 80060000 		.4byte	.LASF157
 5162 01e6 01       		.byte	0x1
 5163 01e7 77       		.byte	0x77
 5164 01e8 68000000 		.4byte	0x68
 5165 01ec 00000000 		.4byte	.LFB63
 5166 01f0 A4000000 		.4byte	.LFE63-.LFB63
 5167 01f4 01       		.uleb128 0x1
 5168 01f5 9C       		.byte	0x9c
 5169 01f6 0D       		.uleb128 0xd
 5170 01f7 C1040000 		.4byte	.LASF40
 5171 01fb 01       		.byte	0x1
 5172 01fc B7       		.byte	0xb7
 5173 01fd 00000000 		.4byte	.LFB64
 5174 0201 3C000000 		.4byte	.LFE64-.LFB64
 5175 0205 01       		.uleb128 0x1
 5176 0206 9C       		.byte	0x9c
 5177 0207 0D       		.uleb128 0xd
 5178 0208 85060000 		.4byte	.LASF41
 5179 020c 01       		.byte	0x1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 115


 5180 020d C0       		.byte	0xc0
 5181 020e 00000000 		.4byte	.LFB65
 5182 0212 F8000000 		.4byte	.LFE65-.LFB65
 5183 0216 01       		.uleb128 0x1
 5184 0217 9C       		.byte	0x9c
 5185 0218 0E       		.uleb128 0xe
 5186 0219 4B000000 		.4byte	.LASF42
 5187 021d 01       		.byte	0x1
 5188 021e 2201     		.2byte	0x122
 5189 0220 00000000 		.4byte	.LFB66
 5190 0224 C8010000 		.4byte	.LFE66-.LFB66
 5191 0228 01       		.uleb128 0x1
 5192 0229 9C       		.byte	0x9c
 5193 022a 0E       		.uleb128 0xe
 5194 022b 8E040000 		.4byte	.LASF43
 5195 022f 01       		.byte	0x1
 5196 0230 6101     		.2byte	0x161
 5197 0232 00000000 		.4byte	.LFB67
 5198 0236 CC010000 		.4byte	.LFE67-.LFB67
 5199 023a 01       		.uleb128 0x1
 5200 023b 9C       		.byte	0x9c
 5201 023c 0E       		.uleb128 0xe
 5202 023d 9B040000 		.4byte	.LASF44
 5203 0241 01       		.byte	0x1
 5204 0242 9F01     		.2byte	0x19f
 5205 0244 00000000 		.4byte	.LFB68
 5206 0248 FC010000 		.4byte	.LFE68-.LFB68
 5207 024c 01       		.uleb128 0x1
 5208 024d 9C       		.byte	0x9c
 5209 024e 0E       		.uleb128 0xe
 5210 024f A8040000 		.4byte	.LASF45
 5211 0253 01       		.byte	0x1
 5212 0254 E701     		.2byte	0x1e7
 5213 0256 00000000 		.4byte	.LFB69
 5214 025a C8010000 		.4byte	.LFE69-.LFB69
 5215 025e 01       		.uleb128 0x1
 5216 025f 9C       		.byte	0x9c
 5217 0260 0E       		.uleb128 0xe
 5218 0261 7D000000 		.4byte	.LASF46
 5219 0265 01       		.byte	0x1
 5220 0266 2502     		.2byte	0x225
 5221 0268 00000000 		.4byte	.LFB70
 5222 026c 5C000000 		.4byte	.LFE70-.LFB70
 5223 0270 01       		.uleb128 0x1
 5224 0271 9C       		.byte	0x9c
 5225 0272 0E       		.uleb128 0xe
 5226 0273 0A000000 		.4byte	.LASF47
 5227 0277 01       		.byte	0x1
 5228 0278 3302     		.2byte	0x233
 5229 027a 00000000 		.4byte	.LFB71
 5230 027e BC010000 		.4byte	.LFE71-.LFB71
 5231 0282 01       		.uleb128 0x1
 5232 0283 9C       		.byte	0x9c
 5233 0284 0E       		.uleb128 0xe
 5234 0285 40020000 		.4byte	.LASF48
 5235 0289 01       		.byte	0x1
 5236 028a 7502     		.2byte	0x275
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 116


 5237 028c 00000000 		.4byte	.LFB72
 5238 0290 E0020000 		.4byte	.LFE72-.LFB72
 5239 0294 01       		.uleb128 0x1
 5240 0295 9C       		.byte	0x9c
 5241 0296 0E       		.uleb128 0xe
 5242 0297 9A060000 		.4byte	.LASF49
 5243 029b 01       		.byte	0x1
 5244 029c FD02     		.2byte	0x2fd
 5245 029e 00000000 		.4byte	.LFB73
 5246 02a2 74000000 		.4byte	.LFE73-.LFB73
 5247 02a6 01       		.uleb128 0x1
 5248 02a7 9C       		.byte	0x9c
 5249 02a8 0E       		.uleb128 0xe
 5250 02a9 A3060000 		.4byte	.LASF50
 5251 02ad 01       		.byte	0x1
 5252 02ae 1003     		.2byte	0x310
 5253 02b0 00000000 		.4byte	.LFB74
 5254 02b4 74000000 		.4byte	.LFE74-.LFB74
 5255 02b8 01       		.uleb128 0x1
 5256 02b9 9C       		.byte	0x9c
 5257 02ba 0E       		.uleb128 0xe
 5258 02bb AC060000 		.4byte	.LASF51
 5259 02bf 01       		.byte	0x1
 5260 02c0 2303     		.2byte	0x323
 5261 02c2 00000000 		.4byte	.LFB75
 5262 02c6 74000000 		.4byte	.LFE75-.LFB75
 5263 02ca 01       		.uleb128 0x1
 5264 02cb 9C       		.byte	0x9c
 5265 02cc 0E       		.uleb128 0xe
 5266 02cd B5060000 		.4byte	.LASF52
 5267 02d1 01       		.byte	0x1
 5268 02d2 3603     		.2byte	0x336
 5269 02d4 00000000 		.4byte	.LFB76
 5270 02d8 74000000 		.4byte	.LFE76-.LFB76
 5271 02dc 01       		.uleb128 0x1
 5272 02dd 9C       		.byte	0x9c
 5273 02de 0E       		.uleb128 0xe
 5274 02df BE060000 		.4byte	.LASF53
 5275 02e3 01       		.byte	0x1
 5276 02e4 4903     		.2byte	0x349
 5277 02e6 00000000 		.4byte	.LFB77
 5278 02ea 74000000 		.4byte	.LFE77-.LFB77
 5279 02ee 01       		.uleb128 0x1
 5280 02ef 9C       		.byte	0x9c
 5281 02f0 0E       		.uleb128 0xe
 5282 02f1 C7060000 		.4byte	.LASF54
 5283 02f5 01       		.byte	0x1
 5284 02f6 5C03     		.2byte	0x35c
 5285 02f8 00000000 		.4byte	.LFB78
 5286 02fc 74000000 		.4byte	.LFE78-.LFB78
 5287 0300 01       		.uleb128 0x1
 5288 0301 9C       		.byte	0x9c
 5289 0302 0E       		.uleb128 0xe
 5290 0303 D0060000 		.4byte	.LASF55
 5291 0307 01       		.byte	0x1
 5292 0308 6F03     		.2byte	0x36f
 5293 030a 00000000 		.4byte	.LFB79
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 117


 5294 030e 74000000 		.4byte	.LFE79-.LFB79
 5295 0312 01       		.uleb128 0x1
 5296 0313 9C       		.byte	0x9c
 5297 0314 0E       		.uleb128 0xe
 5298 0315 6A010000 		.4byte	.LASF56
 5299 0319 01       		.byte	0x1
 5300 031a 8203     		.2byte	0x382
 5301 031c 00000000 		.4byte	.LFB80
 5302 0320 28000000 		.4byte	.LFE80-.LFB80
 5303 0324 01       		.uleb128 0x1
 5304 0325 9C       		.byte	0x9c
 5305 0326 0E       		.uleb128 0xe
 5306 0327 E3040000 		.4byte	.LASF57
 5307 032b 01       		.byte	0x1
 5308 032c 8703     		.2byte	0x387
 5309 032e 00000000 		.4byte	.LFB81
 5310 0332 28000000 		.4byte	.LFE81-.LFB81
 5311 0336 01       		.uleb128 0x1
 5312 0337 9C       		.byte	0x9c
 5313 0338 0E       		.uleb128 0xe
 5314 0339 3B010000 		.4byte	.LASF58
 5315 033d 01       		.byte	0x1
 5316 033e 8C03     		.2byte	0x38c
 5317 0340 00000000 		.4byte	.LFB82
 5318 0344 12000000 		.4byte	.LFE82-.LFB82
 5319 0348 01       		.uleb128 0x1
 5320 0349 9C       		.byte	0x9c
 5321 034a 0F       		.uleb128 0xf
 5322 034b 23050000 		.4byte	.LASF62
 5323 034f 01       		.byte	0x1
 5324 0350 9103     		.2byte	0x391
 5325 0352 68000000 		.4byte	0x68
 5326 0356 00000000 		.4byte	.LFB83
 5327 035a 32000000 		.4byte	.LFE83-.LFB83
 5328 035e 01       		.uleb128 0x1
 5329 035f 9C       		.byte	0x9c
 5330 0360 92030000 		.4byte	0x392
 5331 0364 10       		.uleb128 0x10
 5332 0365 BD030000 		.4byte	.LASF59
 5333 0369 01       		.byte	0x1
 5334 036a 9203     		.2byte	0x392
 5335 036c 68000000 		.4byte	0x68
 5336 0370 02       		.uleb128 0x2
 5337 0371 91       		.byte	0x91
 5338 0372 74       		.sleb128 -12
 5339 0373 10       		.uleb128 0x10
 5340 0374 35070000 		.4byte	.LASF60
 5341 0378 01       		.byte	0x1
 5342 0379 9303     		.2byte	0x393
 5343 037b 68000000 		.4byte	0x68
 5344 037f 02       		.uleb128 0x2
 5345 0380 91       		.byte	0x91
 5346 0381 70       		.sleb128 -16
 5347 0382 10       		.uleb128 0x10
 5348 0383 BB010000 		.4byte	.LASF61
 5349 0387 01       		.byte	0x1
 5350 0388 9403     		.2byte	0x394
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 118


 5351 038a 68000000 		.4byte	0x68
 5352 038e 02       		.uleb128 0x2
 5353 038f 91       		.byte	0x91
 5354 0390 6C       		.sleb128 -20
 5355 0391 00       		.byte	0
 5356 0392 0F       		.uleb128 0xf
 5357 0393 91060000 		.4byte	.LASF63
 5358 0397 01       		.byte	0x1
 5359 0398 9C03     		.2byte	0x39c
 5360 039a 68000000 		.4byte	0x68
 5361 039e 00000000 		.4byte	.LFB84
 5362 03a2 AC000000 		.4byte	.LFE84-.LFB84
 5363 03a6 01       		.uleb128 0x1
 5364 03a7 9C       		.byte	0x9c
 5365 03a8 E4030000 		.4byte	0x3e4
 5366 03ac 11       		.uleb128 0x11
 5367 03ad 0E000000 		.4byte	.LBB2
 5368 03b1 72000000 		.4byte	.LBE2-.LBB2
 5369 03b5 10       		.uleb128 0x10
 5370 03b6 B5040000 		.4byte	.LASF64
 5371 03ba 01       		.byte	0x1
 5372 03bb 9F03     		.2byte	0x39f
 5373 03bd 68000000 		.4byte	0x68
 5374 03c1 02       		.uleb128 0x2
 5375 03c2 91       		.byte	0x91
 5376 03c3 74       		.sleb128 -12
 5377 03c4 10       		.uleb128 0x10
 5378 03c5 42070000 		.4byte	.LASF65
 5379 03c9 01       		.byte	0x1
 5380 03ca A003     		.2byte	0x3a0
 5381 03cc 68000000 		.4byte	0x68
 5382 03d0 02       		.uleb128 0x2
 5383 03d1 91       		.byte	0x91
 5384 03d2 70       		.sleb128 -16
 5385 03d3 10       		.uleb128 0x10
 5386 03d4 F6000000 		.4byte	.LASF66
 5387 03d8 01       		.byte	0x1
 5388 03d9 A103     		.2byte	0x3a1
 5389 03db 68000000 		.4byte	0x68
 5390 03df 02       		.uleb128 0x2
 5391 03e0 91       		.byte	0x91
 5392 03e1 6C       		.sleb128 -20
 5393 03e2 00       		.byte	0
 5394 03e3 00       		.byte	0
 5395 03e4 12       		.uleb128 0x12
 5396 03e5 51010000 		.4byte	.LASF67
 5397 03e9 01       		.byte	0x1
 5398 03ea B303     		.2byte	0x3b3
 5399 03ec 00000000 		.4byte	.LFB85
 5400 03f0 78000000 		.4byte	.LFE85-.LFB85
 5401 03f4 01       		.uleb128 0x1
 5402 03f5 9C       		.byte	0x9c
 5403 03f6 19040000 		.4byte	0x419
 5404 03fa 13       		.uleb128 0x13
 5405 03fb 73706400 		.ascii	"spd\000"
 5406 03ff 01       		.byte	0x1
 5407 0400 B303     		.2byte	0x3b3
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 119


 5408 0402 68000000 		.4byte	0x68
 5409 0406 02       		.uleb128 0x2
 5410 0407 91       		.byte	0x91
 5411 0408 74       		.sleb128 -12
 5412 0409 14       		.uleb128 0x14
 5413 040a EC000000 		.4byte	.LASF68
 5414 040e 01       		.byte	0x1
 5415 040f B303     		.2byte	0x3b3
 5416 0411 68000000 		.4byte	0x68
 5417 0415 02       		.uleb128 0x2
 5418 0416 91       		.byte	0x91
 5419 0417 70       		.sleb128 -16
 5420 0418 00       		.byte	0
 5421 0419 15       		.uleb128 0x15
 5422 041a 4D020000 		.4byte	.LASF69
 5423 041e 01       		.byte	0x1
 5424 041f C303     		.2byte	0x3c3
 5425 0421 00000000 		.4byte	.LFB86
 5426 0425 18000000 		.4byte	.LFE86-.LFB86
 5427 0429 01       		.uleb128 0x1
 5428 042a 9C       		.byte	0x9c
 5429 042b 3F040000 		.4byte	0x43f
 5430 042f 14       		.uleb128 0x14
 5431 0430 AD020000 		.4byte	.LASF70
 5432 0434 01       		.byte	0x1
 5433 0435 C303     		.2byte	0x3c3
 5434 0437 68000000 		.4byte	0x68
 5435 043b 02       		.uleb128 0x2
 5436 043c 91       		.byte	0x91
 5437 043d 74       		.sleb128 -12
 5438 043e 00       		.byte	0
 5439 043f 12       		.uleb128 0x12
 5440 0440 AD050000 		.4byte	.LASF71
 5441 0444 01       		.byte	0x1
 5442 0445 C703     		.2byte	0x3c7
 5443 0447 00000000 		.4byte	.LFB87
 5444 044b 28000000 		.4byte	.LFE87-.LFB87
 5445 044f 01       		.uleb128 0x1
 5446 0450 9C       		.byte	0x9c
 5447 0451 74040000 		.4byte	0x474
 5448 0455 14       		.uleb128 0x14
 5449 0456 B5040000 		.4byte	.LASF64
 5450 045a 01       		.byte	0x1
 5451 045b C703     		.2byte	0x3c7
 5452 045d 68000000 		.4byte	0x68
 5453 0461 02       		.uleb128 0x2
 5454 0462 91       		.byte	0x91
 5455 0463 74       		.sleb128 -12
 5456 0464 14       		.uleb128 0x14
 5457 0465 AD020000 		.4byte	.LASF70
 5458 0469 01       		.byte	0x1
 5459 046a C703     		.2byte	0x3c7
 5460 046c 68000000 		.4byte	0x68
 5461 0470 02       		.uleb128 0x2
 5462 0471 91       		.byte	0x91
 5463 0472 70       		.sleb128 -16
 5464 0473 00       		.byte	0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 120


 5465 0474 0E       		.uleb128 0xe
 5466 0475 62050000 		.4byte	.LASF72
 5467 0479 01       		.byte	0x1
 5468 047a CE03     		.2byte	0x3ce
 5469 047c 00000000 		.4byte	.LFB88
 5470 0480 34070000 		.4byte	.LFE88-.LFB88
 5471 0484 01       		.uleb128 0x1
 5472 0485 9C       		.byte	0x9c
 5473 0486 15       		.uleb128 0x15
 5474 0487 18010000 		.4byte	.LASF73
 5475 048b 01       		.byte	0x1
 5476 048c AB04     		.2byte	0x4ab
 5477 048e 00000000 		.4byte	.LFB89
 5478 0492 12000000 		.4byte	.LFE89-.LFB89
 5479 0496 01       		.uleb128 0x1
 5480 0497 9C       		.byte	0x9c
 5481 0498 AA040000 		.4byte	0x4aa
 5482 049c 13       		.uleb128 0x13
 5483 049d 7300     		.ascii	"s\000"
 5484 049f 01       		.byte	0x1
 5485 04a0 AB04     		.2byte	0x4ab
 5486 04a2 7D000000 		.4byte	0x7d
 5487 04a6 02       		.uleb128 0x2
 5488 04a7 91       		.byte	0x91
 5489 04a8 74       		.sleb128 -12
 5490 04a9 00       		.byte	0
 5491 04aa 15       		.uleb128 0x15
 5492 04ab 2D060000 		.4byte	.LASF74
 5493 04af 01       		.byte	0x1
 5494 04b0 B804     		.2byte	0x4b8
 5495 04b2 00000000 		.4byte	.LFB90
 5496 04b6 14000000 		.4byte	.LFE90-.LFB90
 5497 04ba 01       		.uleb128 0x1
 5498 04bb 9C       		.byte	0x9c
 5499 04bc CE040000 		.4byte	0x4ce
 5500 04c0 13       		.uleb128 0x13
 5501 04c1 6300     		.ascii	"c\000"
 5502 04c3 01       		.byte	0x1
 5503 04c4 B804     		.2byte	0x4b8
 5504 04c6 83000000 		.4byte	0x83
 5505 04ca 02       		.uleb128 0x2
 5506 04cb 91       		.byte	0x91
 5507 04cc 77       		.sleb128 -9
 5508 04cd 00       		.byte	0
 5509 04ce 16       		.uleb128 0x16
 5510 04cf DE020000 		.4byte	.LASF158
 5511 04d3 01       		.byte	0x1
 5512 04d4 BF04     		.2byte	0x4bf
 5513 04d6 00000000 		.4byte	.LFB91
 5514 04da C4000000 		.4byte	.LFE91-.LFB91
 5515 04de 01       		.uleb128 0x1
 5516 04df 9C       		.byte	0x9c
 5517 04e0 16050000 		.4byte	0x516
 5518 04e4 10       		.uleb128 0x10
 5519 04e5 57050000 		.4byte	.LASF75
 5520 04e9 01       		.byte	0x1
 5521 04ea C404     		.2byte	0x4c4
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 121


 5522 04ec 95000000 		.4byte	0x95
 5523 04f0 05       		.uleb128 0x5
 5524 04f1 03       		.byte	0x3
 5525 04f2 DF000000 		.4byte	usbStarted.8360
 5526 04f6 10       		.uleb128 0x10
 5527 04f7 1F020000 		.4byte	.LASF76
 5528 04fb 01       		.byte	0x1
 5529 04fc C504     		.2byte	0x4c5
 5530 04fe A1000000 		.4byte	0xa1
 5531 0502 05       		.uleb128 0x5
 5532 0503 03       		.byte	0x3
 5533 0504 E0000000 		.4byte	usbBufCount.8361
 5534 0508 17       		.uleb128 0x17
 5535 0509 6300     		.ascii	"c\000"
 5536 050b 01       		.byte	0x1
 5537 050c C604     		.2byte	0x4c6
 5538 050e 95000000 		.4byte	0x95
 5539 0512 02       		.uleb128 0x2
 5540 0513 91       		.byte	0x91
 5541 0514 77       		.sleb128 -9
 5542 0515 00       		.byte	0
 5543 0516 18       		.uleb128 0x18
 5544 0517 67040000 		.4byte	.LASF77
 5545 051b 06       		.byte	0x6
 5546 051c 9606     		.2byte	0x696
 5547 051e 22050000 		.4byte	0x522
 5548 0522 07       		.uleb128 0x7
 5549 0523 8A000000 		.4byte	0x8a
 5550 0527 19       		.uleb128 0x19
 5551 0528 747300   		.ascii	"ts\000"
 5552 052b 05       		.byte	0x5
 5553 052c 10       		.byte	0x10
 5554 052d 95000000 		.4byte	0x95
 5555 0531 05       		.uleb128 0x5
 5556 0532 03       		.byte	0x3
 5557 0533 00000000 		.4byte	ts
 5558 0537 1A       		.uleb128 0x1a
 5559 0538 8B050000 		.4byte	.LASF78
 5560 053c 05       		.byte	0x5
 5561 053d 11       		.byte	0x11
 5562 053e A1000000 		.4byte	0xa1
 5563 0542 05       		.uleb128 0x5
 5564 0543 03       		.byte	0x3
 5565 0544 00000000 		.4byte	ts_enc
 5566 0548 1A       		.uleb128 0x1a
 5567 0549 74040000 		.4byte	.LASF79
 5568 054d 05       		.byte	0x5
 5569 054e 12       		.byte	0x12
 5570 054f A1000000 		.4byte	0xa1
 5571 0553 05       		.uleb128 0x5
 5572 0554 03       		.byte	0x3
 5573 0555 00000000 		.4byte	ts_update
 5574 0559 1A       		.uleb128 0x1a
 5575 055a 98030000 		.4byte	.LASF80
 5576 055e 05       		.byte	0x5
 5577 055f 13       		.byte	0x13
 5578 0560 A1000000 		.4byte	0xa1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 122


 5579 0564 05       		.uleb128 0x5
 5580 0565 03       		.byte	0x3
 5581 0566 00000000 		.4byte	ts_speed
 5582 056a 1A       		.uleb128 0x1a
 5583 056b 6A020000 		.4byte	.LASF81
 5584 056f 05       		.byte	0x5
 5585 0570 14       		.byte	0x14
 5586 0571 A1000000 		.4byte	0xa1
 5587 0575 05       		.uleb128 0x5
 5588 0576 03       		.byte	0x3
 5589 0577 00000000 		.4byte	ts_display
 5590 057b 1A       		.uleb128 0x1a
 5591 057c 13020000 		.4byte	.LASF82
 5592 0580 05       		.byte	0x5
 5593 0581 16       		.byte	0x16
 5594 0582 95000000 		.4byte	0x95
 5595 0586 05       		.uleb128 0x5
 5596 0587 03       		.byte	0x3
 5597 0588 00000000 		.4byte	flag_ts_enc
 5598 058c 1A       		.uleb128 0x1a
 5599 058d E2010000 		.4byte	.LASF83
 5600 0591 05       		.byte	0x5
 5601 0592 17       		.byte	0x17
 5602 0593 95000000 		.4byte	0x95
 5603 0597 05       		.uleb128 0x5
 5604 0598 03       		.byte	0x3
 5605 0599 00000000 		.4byte	flag_ts_update
 5606 059d 1A       		.uleb128 0x1a
 5607 059e E0030000 		.4byte	.LASF84
 5608 05a2 05       		.byte	0x5
 5609 05a3 18       		.byte	0x18
 5610 05a4 95000000 		.4byte	0x95
 5611 05a8 05       		.uleb128 0x5
 5612 05a9 03       		.byte	0x3
 5613 05aa 00000000 		.4byte	flag_ts_speed
 5614 05ae 1A       		.uleb128 0x1a
 5615 05af 92050000 		.4byte	.LASF85
 5616 05b3 05       		.byte	0x5
 5617 05b4 19       		.byte	0x19
 5618 05b5 95000000 		.4byte	0x95
 5619 05b9 05       		.uleb128 0x5
 5620 05ba 03       		.byte	0x3
 5621 05bb 00000000 		.4byte	flag_ts_display
 5622 05bf 1A       		.uleb128 0x1a
 5623 05c0 7E040000 		.4byte	.LASF86
 5624 05c4 05       		.byte	0x5
 5625 05c5 1B       		.byte	0x1b
 5626 05c6 95000000 		.4byte	0x95
 5627 05ca 05       		.uleb128 0x5
 5628 05cb 03       		.byte	0x3
 5629 05cc 00000000 		.4byte	rx_flag
 5630 05d0 1A       		.uleb128 0x1a
 5631 05d1 4C040000 		.4byte	.LASF87
 5632 05d5 05       		.byte	0x5
 5633 05d6 1C       		.byte	0x1c
 5634 05d7 95000000 		.4byte	0x95
 5635 05db 05       		.uleb128 0x5
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 123


 5636 05dc 03       		.byte	0x3
 5637 05dd 00000000 		.4byte	flag_rx
 5638 05e1 1A       		.uleb128 0x1a
 5639 05e2 95010000 		.4byte	.LASF88
 5640 05e6 05       		.byte	0x5
 5641 05e7 1D       		.byte	0x1d
 5642 05e8 95000000 		.4byte	0x95
 5643 05ec 05       		.uleb128 0x5
 5644 05ed 03       		.byte	0x3
 5645 05ee 00000000 		.4byte	flag_packet
 5646 05f2 1A       		.uleb128 0x1a
 5647 05f3 13070000 		.4byte	.LASF89
 5648 05f7 05       		.byte	0x5
 5649 05f8 1E       		.byte	0x1e
 5650 05f9 95000000 		.4byte	0x95
 5651 05fd 05       		.uleb128 0x5
 5652 05fe 03       		.byte	0x3
 5653 05ff 00000000 		.4byte	flag_KB_string
 5654 0603 1A       		.uleb128 0x1a
 5655 0604 EE030000 		.4byte	.LASF90
 5656 0608 05       		.byte	0x5
 5657 0609 20       		.byte	0x20
 5658 060a 95000000 		.4byte	0x95
 5659 060e 05       		.uleb128 0x5
 5660 060f 03       		.byte	0x3
 5661 0610 00000000 		.4byte	dataready_flag
 5662 0614 1A       		.uleb128 0x1a
 5663 0615 F1060000 		.4byte	.LASF91
 5664 0619 05       		.byte	0x5
 5665 061a 21       		.byte	0x21
 5666 061b 95000000 		.4byte	0x95
 5667 061f 05       		.uleb128 0x5
 5668 0620 03       		.byte	0x3
 5669 0621 00000000 		.4byte	timerOverflow_flag
 5670 0625 1A       		.uleb128 0x1a
 5671 0626 FC000000 		.4byte	.LASF92
 5672 062a 05       		.byte	0x5
 5673 062b 23       		.byte	0x23
 5674 062c 95000000 		.4byte	0x95
 5675 0630 05       		.uleb128 0x5
 5676 0631 03       		.byte	0x3
 5677 0632 00000000 		.4byte	flag_rf_transmission_active
 5678 0636 1B       		.uleb128 0x1b
 5679 0637 A1000000 		.4byte	0xa1
 5680 063b 46060000 		.4byte	0x646
 5681 063f 1C       		.uleb128 0x1c
 5682 0640 76000000 		.4byte	0x76
 5683 0644 07       		.byte	0x7
 5684 0645 00       		.byte	0
 5685 0646 1A       		.uleb128 0x1a
 5686 0647 E9020000 		.4byte	.LASF93
 5687 064b 05       		.byte	0x5
 5688 064c 26       		.byte	0x26
 5689 064d 36060000 		.4byte	0x636
 5690 0651 05       		.uleb128 0x5
 5691 0652 03       		.byte	0x3
 5692 0653 00000000 		.4byte	adcvalue
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 124


 5693 0657 1B       		.uleb128 0x1b
 5694 0658 83000000 		.4byte	0x83
 5695 065c 67060000 		.4byte	0x667
 5696 0660 1C       		.uleb128 0x1c
 5697 0661 76000000 		.4byte	0x76
 5698 0665 3F       		.byte	0x3f
 5699 0666 00       		.byte	0
 5700 0667 1A       		.uleb128 0x1a
 5701 0668 DF050000 		.4byte	.LASF94
 5702 066c 05       		.byte	0x5
 5703 066d 27       		.byte	0x27
 5704 066e 57060000 		.4byte	0x657
 5705 0672 05       		.uleb128 0x5
 5706 0673 03       		.byte	0x3
 5707 0674 00000000 		.4byte	displaystring
 5708 0678 1A       		.uleb128 0x1a
 5709 0679 80050000 		.4byte	.LASF95
 5710 067d 05       		.byte	0x5
 5711 067e 28       		.byte	0x28
 5712 067f 57060000 		.4byte	0x657
 5713 0683 05       		.uleb128 0x5
 5714 0684 03       		.byte	0x3
 5715 0685 00000000 		.4byte	line
 5716 0689 1A       		.uleb128 0x1a
 5717 068a 6C050000 		.4byte	.LASF96
 5718 068e 05       		.byte	0x5
 5719 068f 28       		.byte	0x28
 5720 0690 57060000 		.4byte	0x657
 5721 0694 05       		.uleb128 0x5
 5722 0695 03       		.byte	0x3
 5723 0696 00000000 		.4byte	entry
 5724 069a 1B       		.uleb128 0x1b
 5725 069b 95000000 		.4byte	0x95
 5726 069f AA060000 		.4byte	0x6aa
 5727 06a3 1C       		.uleb128 0x1c
 5728 06a4 76000000 		.4byte	0x76
 5729 06a8 3F       		.byte	0x3f
 5730 06a9 00       		.byte	0
 5731 06aa 1A       		.uleb128 0x1a
 5732 06ab 5A010000 		.4byte	.LASF97
 5733 06af 05       		.byte	0x5
 5734 06b0 29       		.byte	0x29
 5735 06b1 9A060000 		.4byte	0x69a
 5736 06b5 05       		.uleb128 0x5
 5737 06b6 03       		.byte	0x3
 5738 06b7 00000000 		.4byte	usbBuffer
 5739 06bb 1A       		.uleb128 0x1a
 5740 06bc CE000000 		.4byte	.LASF98
 5741 06c0 05       		.byte	0x5
 5742 06c1 3E       		.byte	0x3e
 5743 06c2 DD000000 		.4byte	0xdd
 5744 06c6 05       		.uleb128 0x5
 5745 06c7 03       		.byte	0x3
 5746 06c8 00000000 		.4byte	system_state
 5747 06cc 1A       		.uleb128 0x1a
 5748 06cd 52060000 		.4byte	.LASF99
 5749 06d1 01       		.byte	0x1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 125


 5750 06d2 39       		.byte	0x39
 5751 06d3 95000000 		.4byte	0x95
 5752 06d7 05       		.uleb128 0x5
 5753 06d8 03       		.byte	0x3
 5754 06d9 00000000 		.4byte	PWMPower
 5755 06dd 1A       		.uleb128 0x1a
 5756 06de CA030000 		.4byte	.LASF100
 5757 06e2 01       		.byte	0x1
 5758 06e3 3B       		.byte	0x3b
 5759 06e4 95000000 		.4byte	0x95
 5760 06e8 05       		.uleb128 0x5
 5761 06e9 03       		.byte	0x3
 5762 06ea 00000000 		.4byte	turnConstant
 5763 06ee 1A       		.uleb128 0x1a
 5764 06ef 33020000 		.4byte	.LASF101
 5765 06f3 01       		.byte	0x1
 5766 06f4 3D       		.byte	0x3d
 5767 06f5 68000000 		.4byte	0x68
 5768 06f9 05       		.uleb128 0x5
 5769 06fa 03       		.byte	0x3
 5770 06fb 00000000 		.4byte	speedCounter
 5771 06ff 1A       		.uleb128 0x1a
 5772 0700 F1010000 		.4byte	.LASF102
 5773 0704 01       		.byte	0x1
 5774 0705 3F       		.byte	0x3f
 5775 0706 68000000 		.4byte	0x68
 5776 070a 05       		.uleb128 0x5
 5777 070b 03       		.byte	0x3
 5778 070c 00000000 		.4byte	prevQuadReading
 5779 0710 19       		.uleb128 0x19
 5780 0711 73706400 		.ascii	"spd\000"
 5781 0715 01       		.byte	0x1
 5782 0716 40       		.byte	0x40
 5783 0717 68000000 		.4byte	0x68
 5784 071b 05       		.uleb128 0x5
 5785 071c 03       		.byte	0x3
 5786 071d 00000000 		.4byte	spd
 5787 0721 1A       		.uleb128 0x1a
 5788 0722 EC000000 		.4byte	.LASF68
 5789 0726 01       		.byte	0x1
 5790 0727 44       		.byte	0x44
 5791 0728 68000000 		.4byte	0x68
 5792 072c 05       		.uleb128 0x5
 5793 072d 03       		.byte	0x3
 5794 072e 00000000 		.4byte	goalSpeed
 5795 0732 1A       		.uleb128 0x1a
 5796 0733 14060000 		.4byte	.LASF103
 5797 0737 01       		.byte	0x1
 5798 0738 47       		.byte	0x47
 5799 0739 68000000 		.4byte	0x68
 5800 073d 05       		.uleb128 0x5
 5801 073e 03       		.byte	0x3
 5802 073f 00000000 		.4byte	RFStopValue
 5803 0743 1A       		.uleb128 0x1a
 5804 0744 2B070000 		.4byte	.LASF104
 5805 0748 01       		.byte	0x1
 5806 0749 48       		.byte	0x48
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 126


 5807 074a 68000000 		.4byte	0x68
 5808 074e 05       		.uleb128 0x5
 5809 074f 03       		.byte	0x3
 5810 0750 00000000 		.4byte	speedFlag
 5811 0754 1A       		.uleb128 0x1a
 5812 0755 AD020000 		.4byte	.LASF70
 5813 0759 01       		.byte	0x1
 5814 075a 4C       		.byte	0x4c
 5815 075b 68000000 		.4byte	0x68
 5816 075f 05       		.uleb128 0x5
 5817 0760 03       		.byte	0x3
 5818 0761 00000000 		.4byte	goalQuad
 5819 0765 1A       		.uleb128 0x1a
 5820 0766 0C070000 		.4byte	.LASF105
 5821 076a 01       		.byte	0x1
 5822 076b 51       		.byte	0x51
 5823 076c D3000000 		.4byte	0xd3
 5824 0770 05       		.uleb128 0x5
 5825 0771 03       		.byte	0x3
 5826 0772 00000000 		.4byte	rxdata
 5827 0776 1A       		.uleb128 0x1a
 5828 0777 2B020000 		.4byte	.LASF106
 5829 077b 01       		.byte	0x1
 5830 077c 52       		.byte	0x52
 5831 077d D8000000 		.4byte	0xd8
 5832 0781 05       		.uleb128 0x5
 5833 0782 03       		.byte	0x3
 5834 0783 00000000 		.4byte	counter
 5835 0787 1B       		.uleb128 0x1b
 5836 0788 95000000 		.4byte	0x95
 5837 078c 97070000 		.4byte	0x797
 5838 0790 1C       		.uleb128 0x1c
 5839 0791 76000000 		.4byte	0x76
 5840 0795 62       		.byte	0x62
 5841 0796 00       		.byte	0
 5842 0797 1A       		.uleb128 0x1a
 5843 0798 A2050000 		.4byte	.LASF107
 5844 079c 01       		.byte	0x1
 5845 079d 53       		.byte	0x53
 5846 079e A8070000 		.4byte	0x7a8
 5847 07a2 05       		.uleb128 0x5
 5848 07a3 03       		.byte	0x3
 5849 07a4 00000000 		.4byte	datastring
 5850 07a8 07       		.uleb128 0x7
 5851 07a9 87070000 		.4byte	0x787
 5852 07ad 1A       		.uleb128 0x1a
 5853 07ae 40050000 		.4byte	.LASF108
 5854 07b2 01       		.byte	0x1
 5855 07b3 55       		.byte	0x55
 5856 07b4 68000000 		.4byte	0x68
 5857 07b8 05       		.uleb128 0x5
 5858 07b9 03       		.byte	0x3
 5859 07ba 00000000 		.4byte	initcounter
 5860 07be 1A       		.uleb128 0x1a
 5861 07bf 03050000 		.4byte	.LASF109
 5862 07c3 01       		.byte	0x1
 5863 07c4 56       		.byte	0x56
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 127


 5864 07c5 68000000 		.4byte	0x68
 5865 07c9 05       		.uleb128 0x5
 5866 07ca 03       		.byte	0x3
 5867 07cb 00000000 		.4byte	init
 5868 07cf 1B       		.uleb128 0x1b
 5869 07d0 83000000 		.4byte	0x83
 5870 07d4 DF070000 		.4byte	0x7df
 5871 07d8 1C       		.uleb128 0x1c
 5872 07d9 76000000 		.4byte	0x76
 5873 07dd 63       		.byte	0x63
 5874 07de 00       		.byte	0
 5875 07df 19       		.uleb128 0x19
 5876 07e0 73747200 		.ascii	"str\000"
 5877 07e4 01       		.byte	0x1
 5878 07e5 58       		.byte	0x58
 5879 07e6 CF070000 		.4byte	0x7cf
 5880 07ea 05       		.uleb128 0x5
 5881 07eb 03       		.byte	0x3
 5882 07ec 00000000 		.4byte	str
 5883 07f0 1A       		.uleb128 0x1a
 5884 07f1 D9060000 		.4byte	.LASF110
 5885 07f5 01       		.byte	0x1
 5886 07f6 59       		.byte	0x59
 5887 07f7 68000000 		.4byte	0x68
 5888 07fb 05       		.uleb128 0x5
 5889 07fc 03       		.byte	0x3
 5890 07fd 00000000 		.4byte	asciiValue
 5891 0801 1A       		.uleb128 0x1a
 5892 0802 8A010000 		.4byte	.LASF111
 5893 0806 01       		.byte	0x1
 5894 0807 5A       		.byte	0x5a
 5895 0808 68000000 		.4byte	0x68
 5896 080c 05       		.uleb128 0x5
 5897 080d 03       		.byte	0x3
 5898 080e 00000000 		.4byte	packetCntr
 5899 0812 1B       		.uleb128 0x1b
 5900 0813 83000000 		.4byte	0x83
 5901 0817 22080000 		.4byte	0x822
 5902 081b 1C       		.uleb128 0x1c
 5903 081c 76000000 		.4byte	0x76
 5904 0820 09       		.byte	0x9
 5905 0821 00       		.byte	0
 5906 0822 1A       		.uleb128 0x1a
 5907 0823 A1010000 		.4byte	.LASF112
 5908 0827 01       		.byte	0x1
 5909 0828 5B       		.byte	0x5b
 5910 0829 12080000 		.4byte	0x812
 5911 082d 05       		.uleb128 0x5
 5912 082e 03       		.byte	0x3
 5913 082f 00000000 		.4byte	locationArray
 5914 0833 1A       		.uleb128 0x1a
 5915 0834 D1040000 		.4byte	.LASF113
 5916 0838 01       		.byte	0x1
 5917 0839 5C       		.byte	0x5c
 5918 083a 68000000 		.4byte	0x68
 5919 083e 05       		.uleb128 0x5
 5920 083f 03       		.byte	0x3
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 128


 5921 0840 00000000 		.4byte	locationArrayCntr
 5922 0844 1A       		.uleb128 0x1a
 5923 0845 B6020000 		.4byte	.LASF114
 5924 0849 01       		.byte	0x1
 5925 084a 5D       		.byte	0x5d
 5926 084b 68000000 		.4byte	0x68
 5927 084f 05       		.uleb128 0x5
 5928 0850 03       		.byte	0x3
 5929 0851 00000000 		.4byte	locationTemp
 5930 0855 1A       		.uleb128 0x1a
 5931 0856 91030000 		.4byte	.LASF115
 5932 085a 01       		.byte	0x1
 5933 085b 5E       		.byte	0x5e
 5934 085c 68000000 		.4byte	0x68
 5935 0860 05       		.uleb128 0x5
 5936 0861 03       		.byte	0x3
 5937 0862 00000000 		.4byte	negate
 5938 0866 1A       		.uleb128 0x1a
 5939 0867 44060000 		.4byte	.LASF116
 5940 086b 01       		.byte	0x1
 5941 086c 5F       		.byte	0x5f
 5942 086d B6010000 		.4byte	0x1b6
 5943 0871 05       		.uleb128 0x5
 5944 0872 03       		.byte	0x3
 5945 0873 00000000 		.4byte	robotLocation
 5946 0877 19       		.uleb128 0x19
 5947 0878 6900     		.ascii	"i\000"
 5948 087a 01       		.byte	0x1
 5949 087b 60       		.byte	0x60
 5950 087c 68000000 		.4byte	0x68
 5951 0880 05       		.uleb128 0x5
 5952 0881 03       		.byte	0x3
 5953 0882 00000000 		.4byte	i
 5954 0886 1A       		.uleb128 0x1a
 5955 0887 20060000 		.4byte	.LASF117
 5956 088b 01       		.byte	0x1
 5957 088c 62       		.byte	0x62
 5958 088d 68000000 		.4byte	0x68
 5959 0891 05       		.uleb128 0x5
 5960 0892 03       		.byte	0x3
 5961 0893 00000000 		.4byte	firstCounter
 5962 0897 1A       		.uleb128 0x1a
 5963 0898 F5040000 		.4byte	.LASF118
 5964 089c 01       		.byte	0x1
 5965 089d 63       		.byte	0x63
 5966 089e 68000000 		.4byte	0x68
 5967 08a2 05       		.uleb128 0x5
 5968 08a3 03       		.byte	0x3
 5969 08a4 00000000 		.4byte	firstx
 5970 08a8 1A       		.uleb128 0x1a
 5971 08a9 FC040000 		.4byte	.LASF119
 5972 08ad 01       		.byte	0x1
 5973 08ae 64       		.byte	0x64
 5974 08af 68000000 		.4byte	0x68
 5975 08b3 05       		.uleb128 0x5
 5976 08b4 03       		.byte	0x3
 5977 08b5 00000000 		.4byte	firsty
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 129


 5978 08b9 1A       		.uleb128 0x1a
 5979 08ba 46010000 		.4byte	.LASF120
 5980 08be 01       		.byte	0x1
 5981 08bf 65       		.byte	0x65
 5982 08c0 68000000 		.4byte	0x68
 5983 08c4 05       		.uleb128 0x5
 5984 08c5 03       		.byte	0x3
 5985 08c6 00000000 		.4byte	firstAngle
 5986 08ca 1A       		.uleb128 0x1a
 5987 08cb 8A020000 		.4byte	.LASF121
 5988 08cf 01       		.byte	0x1
 5989 08d0 66       		.byte	0x66
 5990 08d1 68000000 		.4byte	0x68
 5991 08d5 05       		.uleb128 0x5
 5992 08d6 03       		.byte	0x3
 5993 08d7 00000000 		.4byte	firstinit
 5994 08db 1A       		.uleb128 0x1a
 5995 08dc 00000000 		.4byte	.LASF122
 5996 08e0 01       		.byte	0x1
 5997 08e1 67       		.byte	0x67
 5998 08e2 68000000 		.4byte	0x68
 5999 08e6 05       		.uleb128 0x5
 6000 08e7 03       		.byte	0x3
 6001 08e8 00000000 		.4byte	newx
 6002 08ec 1A       		.uleb128 0x1a
 6003 08ed 05000000 		.4byte	.LASF123
 6004 08f1 01       		.byte	0x1
 6005 08f2 68       		.byte	0x68
 6006 08f3 68000000 		.4byte	0x68
 6007 08f7 05       		.uleb128 0x5
 6008 08f8 03       		.byte	0x3
 6009 08f9 00000000 		.4byte	newy
 6010 08fd 1A       		.uleb128 0x1a
 6011 08fe D7030000 		.4byte	.LASF124
 6012 0902 01       		.byte	0x1
 6013 0903 69       		.byte	0x69
 6014 0904 68000000 		.4byte	0x68
 6015 0908 05       		.uleb128 0x5
 6016 0909 03       		.byte	0x3
 6017 090a 00000000 		.4byte	newAngle
 6018 090e 1A       		.uleb128 0x1a
 6019 090f 1B000000 		.4byte	.LASF125
 6020 0913 01       		.byte	0x1
 6021 0914 6C       		.byte	0x6c
 6022 0915 A1000000 		.4byte	0xa1
 6023 0919 05       		.uleb128 0x5
 6024 091a 03       		.byte	0x3
 6025 091b 00000000 		.4byte	ADC_result0
 6026 091f 1A       		.uleb128 0x1a
 6027 0920 27000000 		.4byte	.LASF126
 6028 0924 01       		.byte	0x1
 6029 0925 6C       		.byte	0x6c
 6030 0926 A1000000 		.4byte	0xa1
 6031 092a 05       		.uleb128 0x5
 6032 092b 03       		.byte	0x3
 6033 092c 00000000 		.4byte	ADC_result1
 6034 0930 1A       		.uleb128 0x1a
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 130


 6035 0931 33000000 		.4byte	.LASF127
 6036 0935 01       		.byte	0x1
 6037 0936 6C       		.byte	0x6c
 6038 0937 A1000000 		.4byte	0xa1
 6039 093b 05       		.uleb128 0x5
 6040 093c 03       		.byte	0x3
 6041 093d 00000000 		.4byte	ADC_result2
 6042 0941 1A       		.uleb128 0x1a
 6043 0942 3F000000 		.4byte	.LASF128
 6044 0946 01       		.byte	0x1
 6045 0947 6C       		.byte	0x6c
 6046 0948 A1000000 		.4byte	0xa1
 6047 094c 05       		.uleb128 0x5
 6048 094d 03       		.byte	0x3
 6049 094e 00000000 		.4byte	ADC_result3
 6050 0952 1A       		.uleb128 0x1a
 6051 0953 AF010000 		.4byte	.LASF129
 6052 0957 01       		.byte	0x1
 6053 0958 6C       		.byte	0x6c
 6054 0959 A1000000 		.4byte	0xa1
 6055 095d 05       		.uleb128 0x5
 6056 095e 03       		.byte	0x3
 6057 095f 00000000 		.4byte	ADC_result4
 6058 0963 1A       		.uleb128 0x1a
 6059 0964 58000000 		.4byte	.LASF130
 6060 0968 01       		.byte	0x1
 6061 0969 6D       		.byte	0x6d
 6062 096a A1000000 		.4byte	0xa1
 6063 096e 05       		.uleb128 0x5
 6064 096f 03       		.byte	0x3
 6065 0970 00000000 		.4byte	ADC_result5
 6066 0974 1A       		.uleb128 0x1a
 6067 0975 64000000 		.4byte	.LASF131
 6068 0979 01       		.byte	0x1
 6069 097a 6D       		.byte	0x6d
 6070 097b A1000000 		.4byte	0xa1
 6071 097f 05       		.uleb128 0x5
 6072 0980 03       		.byte	0x3
 6073 0981 00000000 		.4byte	ADC_result6
 6074 0985 1A       		.uleb128 0x1a
 6075 0986 86000000 		.4byte	.LASF132
 6076 098a 01       		.byte	0x1
 6077 098b 6E       		.byte	0x6e
 6078 098c A1000000 		.4byte	0xa1
 6079 0990 05       		.uleb128 0x5
 6080 0991 03       		.byte	0x3
 6081 0992 00000000 		.4byte	result0
 6082 0996 1A       		.uleb128 0x1a
 6083 0997 8E000000 		.4byte	.LASF133
 6084 099b 01       		.byte	0x1
 6085 099c 6E       		.byte	0x6e
 6086 099d A1000000 		.4byte	0xa1
 6087 09a1 05       		.uleb128 0x5
 6088 09a2 03       		.byte	0x3
 6089 09a3 00000000 		.4byte	result1
 6090 09a7 1A       		.uleb128 0x1a
 6091 09a8 96000000 		.4byte	.LASF134
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 131


 6092 09ac 01       		.byte	0x1
 6093 09ad 6E       		.byte	0x6e
 6094 09ae A1000000 		.4byte	0xa1
 6095 09b2 05       		.uleb128 0x5
 6096 09b3 03       		.byte	0x3
 6097 09b4 00000000 		.4byte	result2
 6098 09b8 1A       		.uleb128 0x1a
 6099 09b9 9E000000 		.4byte	.LASF135
 6100 09bd 01       		.byte	0x1
 6101 09be 6E       		.byte	0x6e
 6102 09bf A1000000 		.4byte	0xa1
 6103 09c3 05       		.uleb128 0x5
 6104 09c4 03       		.byte	0x3
 6105 09c5 00000000 		.4byte	result3
 6106 09c9 1A       		.uleb128 0x1a
 6107 09ca A6000000 		.4byte	.LASF136
 6108 09ce 01       		.byte	0x1
 6109 09cf 6E       		.byte	0x6e
 6110 09d0 A1000000 		.4byte	0xa1
 6111 09d4 05       		.uleb128 0x5
 6112 09d5 03       		.byte	0x3
 6113 09d6 00000000 		.4byte	result4
 6114 09da 1A       		.uleb128 0x1a
 6115 09db AE000000 		.4byte	.LASF137
 6116 09df 01       		.byte	0x1
 6117 09e0 6E       		.byte	0x6e
 6118 09e1 A1000000 		.4byte	0xa1
 6119 09e5 05       		.uleb128 0x5
 6120 09e6 03       		.byte	0x3
 6121 09e7 00000000 		.4byte	result5
 6122 09eb 1A       		.uleb128 0x1a
 6123 09ec B6000000 		.4byte	.LASF138
 6124 09f0 01       		.byte	0x1
 6125 09f1 6E       		.byte	0x6e
 6126 09f2 A1000000 		.4byte	0xa1
 6127 09f6 05       		.uleb128 0x5
 6128 09f7 03       		.byte	0x3
 6129 09f8 00000000 		.4byte	result6
 6130 09fc 1A       		.uleb128 0x1a
 6131 09fd C7010000 		.4byte	.LASF139
 6132 0a01 01       		.byte	0x1
 6133 0a02 6F       		.byte	0x6f
 6134 0a03 A1000000 		.4byte	0xa1
 6135 0a07 05       		.uleb128 0x5
 6136 0a08 03       		.byte	0x3
 6137 0a09 00000000 		.4byte	counter0
 6138 0a0d 1A       		.uleb128 0x1a
 6139 0a0e D0010000 		.4byte	.LASF140
 6140 0a12 01       		.byte	0x1
 6141 0a13 6F       		.byte	0x6f
 6142 0a14 A1000000 		.4byte	0xa1
 6143 0a18 05       		.uleb128 0x5
 6144 0a19 03       		.byte	0x3
 6145 0a1a 00000000 		.4byte	counter1
 6146 0a1e 1A       		.uleb128 0x1a
 6147 0a1f D9010000 		.4byte	.LASF141
 6148 0a23 01       		.byte	0x1
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 132


 6149 0a24 6F       		.byte	0x6f
 6150 0a25 A1000000 		.4byte	0xa1
 6151 0a29 05       		.uleb128 0x5
 6152 0a2a 03       		.byte	0x3
 6153 0a2b 00000000 		.4byte	counter2
 6154 0a2f 1A       		.uleb128 0x1a
 6155 0a30 32010000 		.4byte	.LASF142
 6156 0a34 01       		.byte	0x1
 6157 0a35 6F       		.byte	0x6f
 6158 0a36 A1000000 		.4byte	0xa1
 6159 0a3a 05       		.uleb128 0x5
 6160 0a3b 03       		.byte	0x3
 6161 0a3c 00000000 		.4byte	counter3
 6162 0a40 1A       		.uleb128 0x1a
 6163 0a41 DB000000 		.4byte	.LASF143
 6164 0a45 01       		.byte	0x1
 6165 0a46 6F       		.byte	0x6f
 6166 0a47 A1000000 		.4byte	0xa1
 6167 0a4b 05       		.uleb128 0x5
 6168 0a4c 03       		.byte	0x3
 6169 0a4d 00000000 		.4byte	counter4
 6170 0a51 1A       		.uleb128 0x1a
 6171 0a52 01020000 		.4byte	.LASF144
 6172 0a56 01       		.byte	0x1
 6173 0a57 6F       		.byte	0x6f
 6174 0a58 A1000000 		.4byte	0xa1
 6175 0a5c 05       		.uleb128 0x5
 6176 0a5d 03       		.byte	0x3
 6177 0a5e 00000000 		.4byte	counter5
 6178 0a62 1A       		.uleb128 0x1a
 6179 0a63 0A020000 		.4byte	.LASF145
 6180 0a67 01       		.byte	0x1
 6181 0a68 6F       		.byte	0x6f
 6182 0a69 A1000000 		.4byte	0xa1
 6183 0a6d 05       		.uleb128 0x5
 6184 0a6e 03       		.byte	0x3
 6185 0a6f 00000000 		.4byte	counter6
 6186 0a73 1A       		.uleb128 0x1a
 6187 0a74 B8050000 		.4byte	.LASF146
 6188 0a78 01       		.byte	0x1
 6189 0a79 73       		.byte	0x73
 6190 0a7a D6010000 		.4byte	0x1d6
 6191 0a7e 05       		.uleb128 0x5
 6192 0a7f 03       		.byte	0x3
 6193 0a80 00000000 		.4byte	sensorLogic0
 6194 0a84 1A       		.uleb128 0x1a
 6195 0a85 C5050000 		.4byte	.LASF147
 6196 0a89 01       		.byte	0x1
 6197 0a8a 73       		.byte	0x73
 6198 0a8b D6010000 		.4byte	0x1d6
 6199 0a8f 05       		.uleb128 0x5
 6200 0a90 03       		.byte	0x3
 6201 0a91 00000000 		.4byte	sensorLogic1
 6202 0a95 1A       		.uleb128 0x1a
 6203 0a96 D2050000 		.4byte	.LASF148
 6204 0a9a 01       		.byte	0x1
 6205 0a9b 73       		.byte	0x73
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 133


 6206 0a9c D6010000 		.4byte	0x1d6
 6207 0aa0 05       		.uleb128 0x5
 6208 0aa1 03       		.byte	0x3
 6209 0aa2 00000000 		.4byte	sensorLogic2
 6210 0aa6 1A       		.uleb128 0x1a
 6211 0aa7 5A070000 		.4byte	.LASF149
 6212 0aab 01       		.byte	0x1
 6213 0aac 73       		.byte	0x73
 6214 0aad D6010000 		.4byte	0x1d6
 6215 0ab1 05       		.uleb128 0x5
 6216 0ab2 03       		.byte	0x3
 6217 0ab3 00000000 		.4byte	sensorLogic3
 6218 0ab7 1A       		.uleb128 0x1a
 6219 0ab8 ED050000 		.4byte	.LASF150
 6220 0abc 01       		.byte	0x1
 6221 0abd 73       		.byte	0x73
 6222 0abe D6010000 		.4byte	0x1d6
 6223 0ac2 05       		.uleb128 0x5
 6224 0ac3 03       		.byte	0x3
 6225 0ac4 00000000 		.4byte	sensorLogic4
 6226 0ac8 1A       		.uleb128 0x1a
 6227 0ac9 FA050000 		.4byte	.LASF151
 6228 0acd 01       		.byte	0x1
 6229 0ace 74       		.byte	0x74
 6230 0acf D6010000 		.4byte	0x1d6
 6231 0ad3 05       		.uleb128 0x5
 6232 0ad4 03       		.byte	0x3
 6233 0ad5 00000000 		.4byte	sensorLogic5
 6234 0ad9 1A       		.uleb128 0x1a
 6235 0ada 07060000 		.4byte	.LASF152
 6236 0ade 01       		.byte	0x1
 6237 0adf 74       		.byte	0x74
 6238 0ae0 D6010000 		.4byte	0x1d6
 6239 0ae4 05       		.uleb128 0x5
 6240 0ae5 03       		.byte	0x3
 6241 0ae6 00000000 		.4byte	sensorLogic6
 6242 0aea 00       		.byte	0
 6243              		.section	.debug_abbrev,"",%progbits
 6244              	.Ldebug_abbrev0:
 6245 0000 01       		.uleb128 0x1
 6246 0001 11       		.uleb128 0x11
 6247 0002 01       		.byte	0x1
 6248 0003 25       		.uleb128 0x25
 6249 0004 0E       		.uleb128 0xe
 6250 0005 13       		.uleb128 0x13
 6251 0006 0B       		.uleb128 0xb
 6252 0007 03       		.uleb128 0x3
 6253 0008 0E       		.uleb128 0xe
 6254 0009 1B       		.uleb128 0x1b
 6255 000a 0E       		.uleb128 0xe
 6256 000b 55       		.uleb128 0x55
 6257 000c 17       		.uleb128 0x17
 6258 000d 11       		.uleb128 0x11
 6259 000e 01       		.uleb128 0x1
 6260 000f 10       		.uleb128 0x10
 6261 0010 17       		.uleb128 0x17
 6262 0011 00       		.byte	0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 134


 6263 0012 00       		.byte	0
 6264 0013 02       		.uleb128 0x2
 6265 0014 24       		.uleb128 0x24
 6266 0015 00       		.byte	0
 6267 0016 0B       		.uleb128 0xb
 6268 0017 0B       		.uleb128 0xb
 6269 0018 3E       		.uleb128 0x3e
 6270 0019 0B       		.uleb128 0xb
 6271 001a 03       		.uleb128 0x3
 6272 001b 0E       		.uleb128 0xe
 6273 001c 00       		.byte	0
 6274 001d 00       		.byte	0
 6275 001e 03       		.uleb128 0x3
 6276 001f 16       		.uleb128 0x16
 6277 0020 00       		.byte	0
 6278 0021 03       		.uleb128 0x3
 6279 0022 0E       		.uleb128 0xe
 6280 0023 3A       		.uleb128 0x3a
 6281 0024 0B       		.uleb128 0xb
 6282 0025 3B       		.uleb128 0x3b
 6283 0026 0B       		.uleb128 0xb
 6284 0027 49       		.uleb128 0x49
 6285 0028 13       		.uleb128 0x13
 6286 0029 00       		.byte	0
 6287 002a 00       		.byte	0
 6288 002b 04       		.uleb128 0x4
 6289 002c 24       		.uleb128 0x24
 6290 002d 00       		.byte	0
 6291 002e 0B       		.uleb128 0xb
 6292 002f 0B       		.uleb128 0xb
 6293 0030 3E       		.uleb128 0x3e
 6294 0031 0B       		.uleb128 0xb
 6295 0032 03       		.uleb128 0x3
 6296 0033 08       		.uleb128 0x8
 6297 0034 00       		.byte	0
 6298 0035 00       		.byte	0
 6299 0036 05       		.uleb128 0x5
 6300 0037 0F       		.uleb128 0xf
 6301 0038 00       		.byte	0
 6302 0039 0B       		.uleb128 0xb
 6303 003a 0B       		.uleb128 0xb
 6304 003b 49       		.uleb128 0x49
 6305 003c 13       		.uleb128 0x13
 6306 003d 00       		.byte	0
 6307 003e 00       		.byte	0
 6308 003f 06       		.uleb128 0x6
 6309 0040 16       		.uleb128 0x16
 6310 0041 00       		.byte	0
 6311 0042 03       		.uleb128 0x3
 6312 0043 0E       		.uleb128 0xe
 6313 0044 3A       		.uleb128 0x3a
 6314 0045 0B       		.uleb128 0xb
 6315 0046 3B       		.uleb128 0x3b
 6316 0047 05       		.uleb128 0x5
 6317 0048 49       		.uleb128 0x49
 6318 0049 13       		.uleb128 0x13
 6319 004a 00       		.byte	0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 135


 6320 004b 00       		.byte	0
 6321 004c 07       		.uleb128 0x7
 6322 004d 35       		.uleb128 0x35
 6323 004e 00       		.byte	0
 6324 004f 49       		.uleb128 0x49
 6325 0050 13       		.uleb128 0x13
 6326 0051 00       		.byte	0
 6327 0052 00       		.byte	0
 6328 0053 08       		.uleb128 0x8
 6329 0054 13       		.uleb128 0x13
 6330 0055 01       		.byte	0x1
 6331 0056 03       		.uleb128 0x3
 6332 0057 0E       		.uleb128 0xe
 6333 0058 0B       		.uleb128 0xb
 6334 0059 0B       		.uleb128 0xb
 6335 005a 3A       		.uleb128 0x3a
 6336 005b 0B       		.uleb128 0xb
 6337 005c 3B       		.uleb128 0x3b
 6338 005d 0B       		.uleb128 0xb
 6339 005e 01       		.uleb128 0x1
 6340 005f 13       		.uleb128 0x13
 6341 0060 00       		.byte	0
 6342 0061 00       		.byte	0
 6343 0062 09       		.uleb128 0x9
 6344 0063 0D       		.uleb128 0xd
 6345 0064 00       		.byte	0
 6346 0065 03       		.uleb128 0x3
 6347 0066 0E       		.uleb128 0xe
 6348 0067 3A       		.uleb128 0x3a
 6349 0068 0B       		.uleb128 0xb
 6350 0069 3B       		.uleb128 0x3b
 6351 006a 0B       		.uleb128 0xb
 6352 006b 49       		.uleb128 0x49
 6353 006c 13       		.uleb128 0x13
 6354 006d 38       		.uleb128 0x38
 6355 006e 0B       		.uleb128 0xb
 6356 006f 00       		.byte	0
 6357 0070 00       		.byte	0
 6358 0071 0A       		.uleb128 0xa
 6359 0072 04       		.uleb128 0x4
 6360 0073 01       		.byte	0x1
 6361 0074 0B       		.uleb128 0xb
 6362 0075 0B       		.uleb128 0xb
 6363 0076 3A       		.uleb128 0x3a
 6364 0077 0B       		.uleb128 0xb
 6365 0078 3B       		.uleb128 0x3b
 6366 0079 0B       		.uleb128 0xb
 6367 007a 01       		.uleb128 0x1
 6368 007b 13       		.uleb128 0x13
 6369 007c 00       		.byte	0
 6370 007d 00       		.byte	0
 6371 007e 0B       		.uleb128 0xb
 6372 007f 28       		.uleb128 0x28
 6373 0080 00       		.byte	0
 6374 0081 03       		.uleb128 0x3
 6375 0082 0E       		.uleb128 0xe
 6376 0083 1C       		.uleb128 0x1c
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 136


 6377 0084 0D       		.uleb128 0xd
 6378 0085 00       		.byte	0
 6379 0086 00       		.byte	0
 6380 0087 0C       		.uleb128 0xc
 6381 0088 2E       		.uleb128 0x2e
 6382 0089 00       		.byte	0
 6383 008a 3F       		.uleb128 0x3f
 6384 008b 19       		.uleb128 0x19
 6385 008c 03       		.uleb128 0x3
 6386 008d 0E       		.uleb128 0xe
 6387 008e 3A       		.uleb128 0x3a
 6388 008f 0B       		.uleb128 0xb
 6389 0090 3B       		.uleb128 0x3b
 6390 0091 0B       		.uleb128 0xb
 6391 0092 49       		.uleb128 0x49
 6392 0093 13       		.uleb128 0x13
 6393 0094 11       		.uleb128 0x11
 6394 0095 01       		.uleb128 0x1
 6395 0096 12       		.uleb128 0x12
 6396 0097 06       		.uleb128 0x6
 6397 0098 40       		.uleb128 0x40
 6398 0099 18       		.uleb128 0x18
 6399 009a 9642     		.uleb128 0x2116
 6400 009c 19       		.uleb128 0x19
 6401 009d 00       		.byte	0
 6402 009e 00       		.byte	0
 6403 009f 0D       		.uleb128 0xd
 6404 00a0 2E       		.uleb128 0x2e
 6405 00a1 00       		.byte	0
 6406 00a2 3F       		.uleb128 0x3f
 6407 00a3 19       		.uleb128 0x19
 6408 00a4 03       		.uleb128 0x3
 6409 00a5 0E       		.uleb128 0xe
 6410 00a6 3A       		.uleb128 0x3a
 6411 00a7 0B       		.uleb128 0xb
 6412 00a8 3B       		.uleb128 0x3b
 6413 00a9 0B       		.uleb128 0xb
 6414 00aa 11       		.uleb128 0x11
 6415 00ab 01       		.uleb128 0x1
 6416 00ac 12       		.uleb128 0x12
 6417 00ad 06       		.uleb128 0x6
 6418 00ae 40       		.uleb128 0x40
 6419 00af 18       		.uleb128 0x18
 6420 00b0 9642     		.uleb128 0x2116
 6421 00b2 19       		.uleb128 0x19
 6422 00b3 00       		.byte	0
 6423 00b4 00       		.byte	0
 6424 00b5 0E       		.uleb128 0xe
 6425 00b6 2E       		.uleb128 0x2e
 6426 00b7 00       		.byte	0
 6427 00b8 3F       		.uleb128 0x3f
 6428 00b9 19       		.uleb128 0x19
 6429 00ba 03       		.uleb128 0x3
 6430 00bb 0E       		.uleb128 0xe
 6431 00bc 3A       		.uleb128 0x3a
 6432 00bd 0B       		.uleb128 0xb
 6433 00be 3B       		.uleb128 0x3b
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 137


 6434 00bf 05       		.uleb128 0x5
 6435 00c0 11       		.uleb128 0x11
 6436 00c1 01       		.uleb128 0x1
 6437 00c2 12       		.uleb128 0x12
 6438 00c3 06       		.uleb128 0x6
 6439 00c4 40       		.uleb128 0x40
 6440 00c5 18       		.uleb128 0x18
 6441 00c6 9642     		.uleb128 0x2116
 6442 00c8 19       		.uleb128 0x19
 6443 00c9 00       		.byte	0
 6444 00ca 00       		.byte	0
 6445 00cb 0F       		.uleb128 0xf
 6446 00cc 2E       		.uleb128 0x2e
 6447 00cd 01       		.byte	0x1
 6448 00ce 3F       		.uleb128 0x3f
 6449 00cf 19       		.uleb128 0x19
 6450 00d0 03       		.uleb128 0x3
 6451 00d1 0E       		.uleb128 0xe
 6452 00d2 3A       		.uleb128 0x3a
 6453 00d3 0B       		.uleb128 0xb
 6454 00d4 3B       		.uleb128 0x3b
 6455 00d5 05       		.uleb128 0x5
 6456 00d6 49       		.uleb128 0x49
 6457 00d7 13       		.uleb128 0x13
 6458 00d8 11       		.uleb128 0x11
 6459 00d9 01       		.uleb128 0x1
 6460 00da 12       		.uleb128 0x12
 6461 00db 06       		.uleb128 0x6
 6462 00dc 40       		.uleb128 0x40
 6463 00dd 18       		.uleb128 0x18
 6464 00de 9642     		.uleb128 0x2116
 6465 00e0 19       		.uleb128 0x19
 6466 00e1 01       		.uleb128 0x1
 6467 00e2 13       		.uleb128 0x13
 6468 00e3 00       		.byte	0
 6469 00e4 00       		.byte	0
 6470 00e5 10       		.uleb128 0x10
 6471 00e6 34       		.uleb128 0x34
 6472 00e7 00       		.byte	0
 6473 00e8 03       		.uleb128 0x3
 6474 00e9 0E       		.uleb128 0xe
 6475 00ea 3A       		.uleb128 0x3a
 6476 00eb 0B       		.uleb128 0xb
 6477 00ec 3B       		.uleb128 0x3b
 6478 00ed 05       		.uleb128 0x5
 6479 00ee 49       		.uleb128 0x49
 6480 00ef 13       		.uleb128 0x13
 6481 00f0 02       		.uleb128 0x2
 6482 00f1 18       		.uleb128 0x18
 6483 00f2 00       		.byte	0
 6484 00f3 00       		.byte	0
 6485 00f4 11       		.uleb128 0x11
 6486 00f5 0B       		.uleb128 0xb
 6487 00f6 01       		.byte	0x1
 6488 00f7 11       		.uleb128 0x11
 6489 00f8 01       		.uleb128 0x1
 6490 00f9 12       		.uleb128 0x12
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 138


 6491 00fa 06       		.uleb128 0x6
 6492 00fb 00       		.byte	0
 6493 00fc 00       		.byte	0
 6494 00fd 12       		.uleb128 0x12
 6495 00fe 2E       		.uleb128 0x2e
 6496 00ff 01       		.byte	0x1
 6497 0100 3F       		.uleb128 0x3f
 6498 0101 19       		.uleb128 0x19
 6499 0102 03       		.uleb128 0x3
 6500 0103 0E       		.uleb128 0xe
 6501 0104 3A       		.uleb128 0x3a
 6502 0105 0B       		.uleb128 0xb
 6503 0106 3B       		.uleb128 0x3b
 6504 0107 05       		.uleb128 0x5
 6505 0108 27       		.uleb128 0x27
 6506 0109 19       		.uleb128 0x19
 6507 010a 11       		.uleb128 0x11
 6508 010b 01       		.uleb128 0x1
 6509 010c 12       		.uleb128 0x12
 6510 010d 06       		.uleb128 0x6
 6511 010e 40       		.uleb128 0x40
 6512 010f 18       		.uleb128 0x18
 6513 0110 9642     		.uleb128 0x2116
 6514 0112 19       		.uleb128 0x19
 6515 0113 01       		.uleb128 0x1
 6516 0114 13       		.uleb128 0x13
 6517 0115 00       		.byte	0
 6518 0116 00       		.byte	0
 6519 0117 13       		.uleb128 0x13
 6520 0118 05       		.uleb128 0x5
 6521 0119 00       		.byte	0
 6522 011a 03       		.uleb128 0x3
 6523 011b 08       		.uleb128 0x8
 6524 011c 3A       		.uleb128 0x3a
 6525 011d 0B       		.uleb128 0xb
 6526 011e 3B       		.uleb128 0x3b
 6527 011f 05       		.uleb128 0x5
 6528 0120 49       		.uleb128 0x49
 6529 0121 13       		.uleb128 0x13
 6530 0122 02       		.uleb128 0x2
 6531 0123 18       		.uleb128 0x18
 6532 0124 00       		.byte	0
 6533 0125 00       		.byte	0
 6534 0126 14       		.uleb128 0x14
 6535 0127 05       		.uleb128 0x5
 6536 0128 00       		.byte	0
 6537 0129 03       		.uleb128 0x3
 6538 012a 0E       		.uleb128 0xe
 6539 012b 3A       		.uleb128 0x3a
 6540 012c 0B       		.uleb128 0xb
 6541 012d 3B       		.uleb128 0x3b
 6542 012e 05       		.uleb128 0x5
 6543 012f 49       		.uleb128 0x49
 6544 0130 13       		.uleb128 0x13
 6545 0131 02       		.uleb128 0x2
 6546 0132 18       		.uleb128 0x18
 6547 0133 00       		.byte	0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 139


 6548 0134 00       		.byte	0
 6549 0135 15       		.uleb128 0x15
 6550 0136 2E       		.uleb128 0x2e
 6551 0137 01       		.byte	0x1
 6552 0138 3F       		.uleb128 0x3f
 6553 0139 19       		.uleb128 0x19
 6554 013a 03       		.uleb128 0x3
 6555 013b 0E       		.uleb128 0xe
 6556 013c 3A       		.uleb128 0x3a
 6557 013d 0B       		.uleb128 0xb
 6558 013e 3B       		.uleb128 0x3b
 6559 013f 05       		.uleb128 0x5
 6560 0140 27       		.uleb128 0x27
 6561 0141 19       		.uleb128 0x19
 6562 0142 11       		.uleb128 0x11
 6563 0143 01       		.uleb128 0x1
 6564 0144 12       		.uleb128 0x12
 6565 0145 06       		.uleb128 0x6
 6566 0146 40       		.uleb128 0x40
 6567 0147 18       		.uleb128 0x18
 6568 0148 9742     		.uleb128 0x2117
 6569 014a 19       		.uleb128 0x19
 6570 014b 01       		.uleb128 0x1
 6571 014c 13       		.uleb128 0x13
 6572 014d 00       		.byte	0
 6573 014e 00       		.byte	0
 6574 014f 16       		.uleb128 0x16
 6575 0150 2E       		.uleb128 0x2e
 6576 0151 01       		.byte	0x1
 6577 0152 3F       		.uleb128 0x3f
 6578 0153 19       		.uleb128 0x19
 6579 0154 03       		.uleb128 0x3
 6580 0155 0E       		.uleb128 0xe
 6581 0156 3A       		.uleb128 0x3a
 6582 0157 0B       		.uleb128 0xb
 6583 0158 3B       		.uleb128 0x3b
 6584 0159 05       		.uleb128 0x5
 6585 015a 11       		.uleb128 0x11
 6586 015b 01       		.uleb128 0x1
 6587 015c 12       		.uleb128 0x12
 6588 015d 06       		.uleb128 0x6
 6589 015e 40       		.uleb128 0x40
 6590 015f 18       		.uleb128 0x18
 6591 0160 9642     		.uleb128 0x2116
 6592 0162 19       		.uleb128 0x19
 6593 0163 01       		.uleb128 0x1
 6594 0164 13       		.uleb128 0x13
 6595 0165 00       		.byte	0
 6596 0166 00       		.byte	0
 6597 0167 17       		.uleb128 0x17
 6598 0168 34       		.uleb128 0x34
 6599 0169 00       		.byte	0
 6600 016a 03       		.uleb128 0x3
 6601 016b 08       		.uleb128 0x8
 6602 016c 3A       		.uleb128 0x3a
 6603 016d 0B       		.uleb128 0xb
 6604 016e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 140


 6605 016f 05       		.uleb128 0x5
 6606 0170 49       		.uleb128 0x49
 6607 0171 13       		.uleb128 0x13
 6608 0172 02       		.uleb128 0x2
 6609 0173 18       		.uleb128 0x18
 6610 0174 00       		.byte	0
 6611 0175 00       		.byte	0
 6612 0176 18       		.uleb128 0x18
 6613 0177 34       		.uleb128 0x34
 6614 0178 00       		.byte	0
 6615 0179 03       		.uleb128 0x3
 6616 017a 0E       		.uleb128 0xe
 6617 017b 3A       		.uleb128 0x3a
 6618 017c 0B       		.uleb128 0xb
 6619 017d 3B       		.uleb128 0x3b
 6620 017e 05       		.uleb128 0x5
 6621 017f 49       		.uleb128 0x49
 6622 0180 13       		.uleb128 0x13
 6623 0181 3F       		.uleb128 0x3f
 6624 0182 19       		.uleb128 0x19
 6625 0183 3C       		.uleb128 0x3c
 6626 0184 19       		.uleb128 0x19
 6627 0185 00       		.byte	0
 6628 0186 00       		.byte	0
 6629 0187 19       		.uleb128 0x19
 6630 0188 34       		.uleb128 0x34
 6631 0189 00       		.byte	0
 6632 018a 03       		.uleb128 0x3
 6633 018b 08       		.uleb128 0x8
 6634 018c 3A       		.uleb128 0x3a
 6635 018d 0B       		.uleb128 0xb
 6636 018e 3B       		.uleb128 0x3b
 6637 018f 0B       		.uleb128 0xb
 6638 0190 49       		.uleb128 0x49
 6639 0191 13       		.uleb128 0x13
 6640 0192 3F       		.uleb128 0x3f
 6641 0193 19       		.uleb128 0x19
 6642 0194 02       		.uleb128 0x2
 6643 0195 18       		.uleb128 0x18
 6644 0196 00       		.byte	0
 6645 0197 00       		.byte	0
 6646 0198 1A       		.uleb128 0x1a
 6647 0199 34       		.uleb128 0x34
 6648 019a 00       		.byte	0
 6649 019b 03       		.uleb128 0x3
 6650 019c 0E       		.uleb128 0xe
 6651 019d 3A       		.uleb128 0x3a
 6652 019e 0B       		.uleb128 0xb
 6653 019f 3B       		.uleb128 0x3b
 6654 01a0 0B       		.uleb128 0xb
 6655 01a1 49       		.uleb128 0x49
 6656 01a2 13       		.uleb128 0x13
 6657 01a3 3F       		.uleb128 0x3f
 6658 01a4 19       		.uleb128 0x19
 6659 01a5 02       		.uleb128 0x2
 6660 01a6 18       		.uleb128 0x18
 6661 01a7 00       		.byte	0
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 141


 6662 01a8 00       		.byte	0
 6663 01a9 1B       		.uleb128 0x1b
 6664 01aa 01       		.uleb128 0x1
 6665 01ab 01       		.byte	0x1
 6666 01ac 49       		.uleb128 0x49
 6667 01ad 13       		.uleb128 0x13
 6668 01ae 01       		.uleb128 0x1
 6669 01af 13       		.uleb128 0x13
 6670 01b0 00       		.byte	0
 6671 01b1 00       		.byte	0
 6672 01b2 1C       		.uleb128 0x1c
 6673 01b3 21       		.uleb128 0x21
 6674 01b4 00       		.byte	0
 6675 01b5 49       		.uleb128 0x49
 6676 01b6 13       		.uleb128 0x13
 6677 01b7 2F       		.uleb128 0x2f
 6678 01b8 0B       		.uleb128 0xb
 6679 01b9 00       		.byte	0
 6680 01ba 00       		.byte	0
 6681 01bb 00       		.byte	0
 6682              		.section	.debug_aranges,"",%progbits
 6683 0000 FC000000 		.4byte	0xfc
 6684 0004 0200     		.2byte	0x2
 6685 0006 00000000 		.4byte	.Ldebug_info0
 6686 000a 04       		.byte	0x4
 6687 000b 00       		.byte	0
 6688 000c 0000     		.2byte	0
 6689 000e 0000     		.2byte	0
 6690 0010 00000000 		.4byte	.LFB63
 6691 0014 A4000000 		.4byte	.LFE63-.LFB63
 6692 0018 00000000 		.4byte	.LFB64
 6693 001c 3C000000 		.4byte	.LFE64-.LFB64
 6694 0020 00000000 		.4byte	.LFB65
 6695 0024 F8000000 		.4byte	.LFE65-.LFB65
 6696 0028 00000000 		.4byte	.LFB66
 6697 002c C8010000 		.4byte	.LFE66-.LFB66
 6698 0030 00000000 		.4byte	.LFB67
 6699 0034 CC010000 		.4byte	.LFE67-.LFB67
 6700 0038 00000000 		.4byte	.LFB68
 6701 003c FC010000 		.4byte	.LFE68-.LFB68
 6702 0040 00000000 		.4byte	.LFB69
 6703 0044 C8010000 		.4byte	.LFE69-.LFB69
 6704 0048 00000000 		.4byte	.LFB70
 6705 004c 5C000000 		.4byte	.LFE70-.LFB70
 6706 0050 00000000 		.4byte	.LFB71
 6707 0054 BC010000 		.4byte	.LFE71-.LFB71
 6708 0058 00000000 		.4byte	.LFB72
 6709 005c E0020000 		.4byte	.LFE72-.LFB72
 6710 0060 00000000 		.4byte	.LFB73
 6711 0064 74000000 		.4byte	.LFE73-.LFB73
 6712 0068 00000000 		.4byte	.LFB74
 6713 006c 74000000 		.4byte	.LFE74-.LFB74
 6714 0070 00000000 		.4byte	.LFB75
 6715 0074 74000000 		.4byte	.LFE75-.LFB75
 6716 0078 00000000 		.4byte	.LFB76
 6717 007c 74000000 		.4byte	.LFE76-.LFB76
 6718 0080 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 142


 6719 0084 74000000 		.4byte	.LFE77-.LFB77
 6720 0088 00000000 		.4byte	.LFB78
 6721 008c 74000000 		.4byte	.LFE78-.LFB78
 6722 0090 00000000 		.4byte	.LFB79
 6723 0094 74000000 		.4byte	.LFE79-.LFB79
 6724 0098 00000000 		.4byte	.LFB80
 6725 009c 28000000 		.4byte	.LFE80-.LFB80
 6726 00a0 00000000 		.4byte	.LFB81
 6727 00a4 28000000 		.4byte	.LFE81-.LFB81
 6728 00a8 00000000 		.4byte	.LFB82
 6729 00ac 12000000 		.4byte	.LFE82-.LFB82
 6730 00b0 00000000 		.4byte	.LFB83
 6731 00b4 32000000 		.4byte	.LFE83-.LFB83
 6732 00b8 00000000 		.4byte	.LFB84
 6733 00bc AC000000 		.4byte	.LFE84-.LFB84
 6734 00c0 00000000 		.4byte	.LFB85
 6735 00c4 78000000 		.4byte	.LFE85-.LFB85
 6736 00c8 00000000 		.4byte	.LFB86
 6737 00cc 18000000 		.4byte	.LFE86-.LFB86
 6738 00d0 00000000 		.4byte	.LFB87
 6739 00d4 28000000 		.4byte	.LFE87-.LFB87
 6740 00d8 00000000 		.4byte	.LFB88
 6741 00dc 34070000 		.4byte	.LFE88-.LFB88
 6742 00e0 00000000 		.4byte	.LFB89
 6743 00e4 12000000 		.4byte	.LFE89-.LFB89
 6744 00e8 00000000 		.4byte	.LFB90
 6745 00ec 14000000 		.4byte	.LFE90-.LFB90
 6746 00f0 00000000 		.4byte	.LFB91
 6747 00f4 C4000000 		.4byte	.LFE91-.LFB91
 6748 00f8 00000000 		.4byte	0
 6749 00fc 00000000 		.4byte	0
 6750              		.section	.debug_ranges,"",%progbits
 6751              	.Ldebug_ranges0:
 6752 0000 00000000 		.4byte	.LFB63
 6753 0004 A4000000 		.4byte	.LFE63
 6754 0008 00000000 		.4byte	.LFB64
 6755 000c 3C000000 		.4byte	.LFE64
 6756 0010 00000000 		.4byte	.LFB65
 6757 0014 F8000000 		.4byte	.LFE65
 6758 0018 00000000 		.4byte	.LFB66
 6759 001c C8010000 		.4byte	.LFE66
 6760 0020 00000000 		.4byte	.LFB67
 6761 0024 CC010000 		.4byte	.LFE67
 6762 0028 00000000 		.4byte	.LFB68
 6763 002c FC010000 		.4byte	.LFE68
 6764 0030 00000000 		.4byte	.LFB69
 6765 0034 C8010000 		.4byte	.LFE69
 6766 0038 00000000 		.4byte	.LFB70
 6767 003c 5C000000 		.4byte	.LFE70
 6768 0040 00000000 		.4byte	.LFB71
 6769 0044 BC010000 		.4byte	.LFE71
 6770 0048 00000000 		.4byte	.LFB72
 6771 004c E0020000 		.4byte	.LFE72
 6772 0050 00000000 		.4byte	.LFB73
 6773 0054 74000000 		.4byte	.LFE73
 6774 0058 00000000 		.4byte	.LFB74
 6775 005c 74000000 		.4byte	.LFE74
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 143


 6776 0060 00000000 		.4byte	.LFB75
 6777 0064 74000000 		.4byte	.LFE75
 6778 0068 00000000 		.4byte	.LFB76
 6779 006c 74000000 		.4byte	.LFE76
 6780 0070 00000000 		.4byte	.LFB77
 6781 0074 74000000 		.4byte	.LFE77
 6782 0078 00000000 		.4byte	.LFB78
 6783 007c 74000000 		.4byte	.LFE78
 6784 0080 00000000 		.4byte	.LFB79
 6785 0084 74000000 		.4byte	.LFE79
 6786 0088 00000000 		.4byte	.LFB80
 6787 008c 28000000 		.4byte	.LFE80
 6788 0090 00000000 		.4byte	.LFB81
 6789 0094 28000000 		.4byte	.LFE81
 6790 0098 00000000 		.4byte	.LFB82
 6791 009c 12000000 		.4byte	.LFE82
 6792 00a0 00000000 		.4byte	.LFB83
 6793 00a4 32000000 		.4byte	.LFE83
 6794 00a8 00000000 		.4byte	.LFB84
 6795 00ac AC000000 		.4byte	.LFE84
 6796 00b0 00000000 		.4byte	.LFB85
 6797 00b4 78000000 		.4byte	.LFE85
 6798 00b8 00000000 		.4byte	.LFB86
 6799 00bc 18000000 		.4byte	.LFE86
 6800 00c0 00000000 		.4byte	.LFB87
 6801 00c4 28000000 		.4byte	.LFE87
 6802 00c8 00000000 		.4byte	.LFB88
 6803 00cc 34070000 		.4byte	.LFE88
 6804 00d0 00000000 		.4byte	.LFB89
 6805 00d4 12000000 		.4byte	.LFE89
 6806 00d8 00000000 		.4byte	.LFB90
 6807 00dc 14000000 		.4byte	.LFE90
 6808 00e0 00000000 		.4byte	.LFB91
 6809 00e4 C4000000 		.4byte	.LFE91
 6810 00e8 00000000 		.4byte	0
 6811 00ec 00000000 		.4byte	0
 6812              		.section	.debug_line,"",%progbits
 6813              	.Ldebug_line0:
 6814 0000 9A070000 		.section	.debug_str,"MS",%progbits,1
 6814      02005501 
 6814      00000201 
 6814      FB0E0D00 
 6814      01010101 
 6815              	.LASF122:
 6816 0000 6E657778 		.ascii	"newx\000"
 6816      00
 6817              	.LASF123:
 6818 0005 6E657779 		.ascii	"newy\000"
 6818      00
 6819              	.LASF47:
 6820 000a 73696D70 		.ascii	"simpleCarControl\000"
 6820      6C654361 
 6820      72436F6E 
 6820      74726F6C 
 6820      00
 6821              	.LASF125:
 6822 001b 4144435F 		.ascii	"ADC_result0\000"
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 144


 6822      72657375 
 6822      6C743000 
 6823              	.LASF126:
 6824 0027 4144435F 		.ascii	"ADC_result1\000"
 6824      72657375 
 6824      6C743100 
 6825              	.LASF127:
 6826 0033 4144435F 		.ascii	"ADC_result2\000"
 6826      72657375 
 6826      6C743200 
 6827              	.LASF128:
 6828 003f 4144435F 		.ascii	"ADC_result3\000"
 6828      72657375 
 6828      6C743300 
 6829              	.LASF42:
 6830 004b 74656368 		.ascii	"techTest2RF1\000"
 6830      54657374 
 6830      32524631 
 6830      00
 6831              	.LASF130:
 6832 0058 4144435F 		.ascii	"ADC_result5\000"
 6832      72657375 
 6832      6C743500 
 6833              	.LASF131:
 6834 0064 4144435F 		.ascii	"ADC_result6\000"
 6834      72657375 
 6834      6C743600 
 6835              	.LASF8:
 6836 0070 756E7369 		.ascii	"unsigned int\000"
 6836      676E6564 
 6836      20696E74 
 6836      00
 6837              	.LASF46:
 6838 007d 696E6974 		.ascii	"initRamp\000"
 6838      52616D70 
 6838      00
 6839              	.LASF132:
 6840 0086 72657375 		.ascii	"result0\000"
 6840      6C743000 
 6841              	.LASF133:
 6842 008e 72657375 		.ascii	"result1\000"
 6842      6C743100 
 6843              	.LASF134:
 6844 0096 72657375 		.ascii	"result2\000"
 6844      6C743200 
 6845              	.LASF135:
 6846 009e 72657375 		.ascii	"result3\000"
 6846      6C743300 
 6847              	.LASF136:
 6848 00a6 72657375 		.ascii	"result4\000"
 6848      6C743400 
 6849              	.LASF137:
 6850 00ae 72657375 		.ascii	"result5\000"
 6850      6C743500 
 6851              	.LASF138:
 6852 00b6 72657375 		.ascii	"result6\000"
 6852      6C743600 
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 145


 6853              	.LASF11:
 6854 00be 5F5F696E 		.ascii	"__int32_t\000"
 6854      7433325F 
 6854      7400
 6855              	.LASF16:
 6856 00c8 696E7431 		.ascii	"int16\000"
 6856      3600
 6857              	.LASF98:
 6858 00ce 73797374 		.ascii	"system_state\000"
 6858      656D5F73 
 6858      74617465 
 6858      00
 6859              	.LASF143:
 6860 00db 636F756E 		.ascii	"counter4\000"
 6860      74657234 
 6860      00
 6861              	.LASF32:
 6862 00e4 67325F78 		.ascii	"g2_xpos\000"
 6862      706F7300 
 6863              	.LASF68:
 6864 00ec 676F616C 		.ascii	"goalSpeed\000"
 6864      53706565 
 6864      6400
 6865              	.LASF66:
 6866 00f6 73706565 		.ascii	"speed\000"
 6866      6400
 6867              	.LASF92:
 6868 00fc 666C6167 		.ascii	"flag_rf_transmission_active\000"
 6868      5F72665F 
 6868      7472616E 
 6868      736D6973 
 6868      73696F6E 
 6869              	.LASF73:
 6870 0118 75736250 		.ascii	"usbPutString\000"
 6870      75745374 
 6870      72696E67 
 6870      00
 6871              	.LASF35:
 6872 0125 67325F64 		.ascii	"g2_direction\000"
 6872      69726563 
 6872      74696F6E 
 6872      00
 6873              	.LASF142:
 6874 0132 636F756E 		.ascii	"counter3\000"
 6874      74657233 
 6874      00
 6875              	.LASF58:
 6876 013b 73746F70 		.ascii	"stop\000"
 6876      00
 6877              	.LASF17:
 6878 0140 666C6F61 		.ascii	"float\000"
 6878      7400
 6879              	.LASF120:
 6880 0146 66697273 		.ascii	"firstAngle\000"
 6880      74416E67 
 6880      6C6500
 6881              	.LASF67:
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 146


 6882 0151 73657453 		.ascii	"setSpeed\000"
 6882      70656564 
 6882      00
 6883              	.LASF97:
 6884 015a 75736242 		.ascii	"usbBuffer\000"
 6884      75666665 
 6884      7200
 6885              	.LASF20:
 6886 0164 696E6465 		.ascii	"index\000"
 6886      7800
 6887              	.LASF56:
 6888 016a 7475726E 		.ascii	"turnLeft\000"
 6888      4C656674 
 6888      00
 6889              	.LASF7:
 6890 0173 6C6F6E67 		.ascii	"long long unsigned int\000"
 6890      206C6F6E 
 6890      6720756E 
 6890      7369676E 
 6890      65642069 
 6891              	.LASF111:
 6892 018a 7061636B 		.ascii	"packetCntr\000"
 6892      6574436E 
 6892      747200
 6893              	.LASF88:
 6894 0195 666C6167 		.ascii	"flag_packet\000"
 6894      5F706163 
 6894      6B657400 
 6895              	.LASF112:
 6896 01a1 6C6F6361 		.ascii	"locationArray\000"
 6896      74696F6E 
 6896      41727261 
 6896      7900
 6897              	.LASF129:
 6898 01af 4144435F 		.ascii	"ADC_result4\000"
 6898      72657375 
 6898      6C743400 
 6899              	.LASF61:
 6900 01bb 51756164 		.ascii	"QuadAverage\000"
 6900      41766572 
 6900      61676500 
 6901              	.LASF139:
 6902 01c7 636F756E 		.ascii	"counter0\000"
 6902      74657230 
 6902      00
 6903              	.LASF140:
 6904 01d0 636F756E 		.ascii	"counter1\000"
 6904      74657231 
 6904      00
 6905              	.LASF141:
 6906 01d9 636F756E 		.ascii	"counter2\000"
 6906      74657232 
 6906      00
 6907              	.LASF83:
 6908 01e2 666C6167 		.ascii	"flag_ts_update\000"
 6908      5F74735F 
 6908      75706461 
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 147


 6908      746500
 6909              	.LASF102:
 6910 01f1 70726576 		.ascii	"prevQuadReading\000"
 6910      51756164 
 6910      52656164 
 6910      696E6700 
 6911              	.LASF144:
 6912 0201 636F756E 		.ascii	"counter5\000"
 6912      74657235 
 6912      00
 6913              	.LASF145:
 6914 020a 636F756E 		.ascii	"counter6\000"
 6914      74657236 
 6914      00
 6915              	.LASF82:
 6916 0213 666C6167 		.ascii	"flag_ts_enc\000"
 6916      5F74735F 
 6916      656E6300 
 6917              	.LASF76:
 6918 021f 75736242 		.ascii	"usbBufCount\000"
 6918      7566436F 
 6918      756E7400 
 6919              	.LASF106:
 6920 022b 636F756E 		.ascii	"counter\000"
 6920      74657200 
 6921              	.LASF101:
 6922 0233 73706565 		.ascii	"speedCounter\000"
 6922      64436F75 
 6922      6E746572 
 6922      00
 6923              	.LASF48:
 6924 0240 72656164 		.ascii	"readADC\000"
 6924      41444300 
 6925              	.LASF38:
 6926 0248 74727565 		.ascii	"true\000"
 6926      00
 6927              	.LASF69:
 6928 024d 696E6372 		.ascii	"incrementQuadGoal\000"
 6928      656D656E 
 6928      74517561 
 6928      64476F61 
 6928      6C00
 6929              	.LASF22:
 6930 025f 726F626F 		.ascii	"robot_ypos\000"
 6930      745F7970 
 6930      6F7300
 6931              	.LASF81:
 6932 026a 74735F64 		.ascii	"ts_display\000"
 6932      6973706C 
 6932      617900
 6933              	.LASF36:
 6934 0275 76747970 		.ascii	"vtype1\000"
 6934      653100
 6935              	.LASF10:
 6936 027c 63686172 		.ascii	"char\000"
 6936      00
 6937              	.LASF26:
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 148


 6938 0281 67305F73 		.ascii	"g0_speed\000"
 6938      70656564 
 6938      00
 6939              	.LASF121:
 6940 028a 66697273 		.ascii	"firstinit\000"
 6940      74696E69 
 6940      7400
 6941              	.LASF14:
 6942 0294 75696E74 		.ascii	"uint16\000"
 6942      313600
 6943              	.LASF15:
 6944 029b 696E7438 		.ascii	"int8\000"
 6944      00
 6945              	.LASF31:
 6946 02a0 67315F64 		.ascii	"g1_direction\000"
 6946      69726563 
 6946      74696F6E 
 6946      00
 6947              	.LASF70:
 6948 02ad 676F616C 		.ascii	"goalQuad\000"
 6948      51756164 
 6948      00
 6949              	.LASF114:
 6950 02b6 6C6F6361 		.ascii	"locationTemp\000"
 6950      74696F6E 
 6950      54656D70 
 6950      00
 6951              	.LASF6:
 6952 02c3 6C6F6E67 		.ascii	"long long int\000"
 6952      206C6F6E 
 6952      6720696E 
 6952      7400
 6953              	.LASF28:
 6954 02d1 67315F78 		.ascii	"g1_xpos\000"
 6954      706F7300 
 6955              	.LASF39:
 6956 02d9 626F6F6C 		.ascii	"bool\000"
 6956      00
 6957              	.LASF158:
 6958 02de 68616E64 		.ascii	"handle_usb\000"
 6958      6C655F75 
 6958      736200
 6959              	.LASF93:
 6960 02e9 61646376 		.ascii	"adcvalue\000"
 6960      616C7565 
 6960      00
 6961              	.LASF153:
 6962 02f2 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6962      4320342E 
 6962      392E3320 
 6962      32303135 
 6962      30333033 
 6963 0325 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 6963      20726576 
 6963      6973696F 
 6963      6E203232 
 6963      31323230 
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 149


 6964 0358 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6964      66756E63 
 6964      74696F6E 
 6964      2D736563 
 6964      74696F6E 
 6965              	.LASF34:
 6966 0380 67325F73 		.ascii	"g2_speed\000"
 6966      70656564 
 6966      00
 6967              	.LASF25:
 6968 0389 67305F79 		.ascii	"g0_ypos\000"
 6968      706F7300 
 6969              	.LASF115:
 6970 0391 6E656761 		.ascii	"negate\000"
 6970      746500
 6971              	.LASF80:
 6972 0398 74735F73 		.ascii	"ts_speed\000"
 6972      70656564 
 6972      00
 6973              	.LASF156:
 6974 03a1 64617461 		.ascii	"data_main\000"
 6974      5F6D6169 
 6974      6E00
 6975              	.LASF19:
 6976 03ab 72737369 		.ascii	"rssi\000"
 6976      00
 6977              	.LASF27:
 6978 03b0 67305F64 		.ascii	"g0_direction\000"
 6978      69726563 
 6978      74696F6E 
 6978      00
 6979              	.LASF59:
 6980 03bd 51756164 		.ascii	"Quad1Reading\000"
 6980      31526561 
 6980      64696E67 
 6980      00
 6981              	.LASF100:
 6982 03ca 7475726E 		.ascii	"turnConstant\000"
 6982      436F6E73 
 6982      74616E74 
 6982      00
 6983              	.LASF124:
 6984 03d7 6E657741 		.ascii	"newAngle\000"
 6984      6E676C65 
 6984      00
 6985              	.LASF84:
 6986 03e0 666C6167 		.ascii	"flag_ts_speed\000"
 6986      5F74735F 
 6986      73706565 
 6986      6400
 6987              	.LASF90:
 6988 03ee 64617461 		.ascii	"dataready_flag\000"
 6988      72656164 
 6988      795F666C 
 6988      616700
 6989              	.LASF155:
 6990 03fd 433A5C55 		.ascii	"C:\\Users\\patel\\Downloads\\V7 - 22 Sep\\V5 - 20 S"
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 150


 6990      73657273 
 6990      5C706174 
 6990      656C5C44 
 6990      6F776E6C 
 6991 042b 65705C56 		.ascii	"ep\\V4 - 17 Sep\\CS301_Class.cydsn\000"
 6991      34202D20 
 6991      31372053 
 6991      65705C43 
 6991      53333031 
 6992              	.LASF87:
 6993 044c 666C6167 		.ascii	"flag_rx\000"
 6993      5F727800 
 6994              	.LASF2:
 6995 0454 73686F72 		.ascii	"short int\000"
 6995      7420696E 
 6995      7400
 6996              	.LASF4:
 6997 045e 6C6F6E67 		.ascii	"long int\000"
 6997      20696E74 
 6997      00
 6998              	.LASF77:
 6999 0467 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6999      52784275 
 6999      66666572 
 6999      00
 7000              	.LASF79:
 7001 0474 74735F75 		.ascii	"ts_update\000"
 7001      70646174 
 7001      6500
 7002              	.LASF86:
 7003 047e 72785F66 		.ascii	"rx_flag\000"
 7003      6C616700 
 7004              	.LASF33:
 7005 0486 67325F79 		.ascii	"g2_ypos\000"
 7005      706F7300 
 7006              	.LASF43:
 7007 048e 74656368 		.ascii	"techTest2RF2\000"
 7007      54657374 
 7007      32524632 
 7007      00
 7008              	.LASF44:
 7009 049b 74656368 		.ascii	"techTest2RF3\000"
 7009      54657374 
 7009      32524633 
 7009      00
 7010              	.LASF45:
 7011 04a8 74656368 		.ascii	"techTest2RF4\000"
 7011      54657374 
 7011      32524634 
 7011      00
 7012              	.LASF64:
 7013 04b5 71756164 		.ascii	"quadAverage\000"
 7013      41766572 
 7013      61676500 
 7014              	.LASF40:
 7015 04c1 74656368 		.ascii	"techTest2Sensor\000"
 7015      54657374 
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 151


 7015      3253656E 
 7015      736F7200 
 7016              	.LASF113:
 7017 04d1 6C6F6361 		.ascii	"locationArrayCntr\000"
 7017      74696F6E 
 7017      41727261 
 7017      79436E74 
 7017      7200
 7018              	.LASF57:
 7019 04e3 7475726E 		.ascii	"turnRight\000"
 7019      52696768 
 7019      7400
 7020              	.LASF29:
 7021 04ed 67315F79 		.ascii	"g1_ypos\000"
 7021      706F7300 
 7022              	.LASF118:
 7023 04f5 66697273 		.ascii	"firstx\000"
 7023      747800
 7024              	.LASF119:
 7025 04fc 66697273 		.ascii	"firsty\000"
 7025      747900
 7026              	.LASF109:
 7027 0503 696E6974 		.ascii	"init\000"
 7027      00
 7028              	.LASF9:
 7029 0508 73697A65 		.ascii	"sizetype\000"
 7029      74797065 
 7029      00
 7030              	.LASF5:
 7031 0511 6C6F6E67 		.ascii	"long unsigned int\000"
 7031      20756E73 
 7031      69676E65 
 7031      6420696E 
 7031      7400
 7032              	.LASF62:
 7033 0523 6765745F 		.ascii	"get_average_position\000"
 7033      61766572 
 7033      6167655F 
 7033      706F7369 
 7033      74696F6E 
 7034              	.LASF12:
 7035 0538 696E7433 		.ascii	"int32_t\000"
 7035      325F7400 
 7036              	.LASF108:
 7037 0540 696E6974 		.ascii	"initcounter\000"
 7037      636F756E 
 7037      74657200 
 7038              	.LASF21:
 7039 054c 726F626F 		.ascii	"robot_xpos\000"
 7039      745F7870 
 7039      6F7300
 7040              	.LASF75:
 7041 0557 75736253 		.ascii	"usbStarted\000"
 7041      74617274 
 7041      656400
 7042              	.LASF72:
 7043 0562 72656365 		.ascii	"receiveRX\000"
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 152


 7043      69766552 
 7043      5800
 7044              	.LASF96:
 7045 056c 656E7472 		.ascii	"entry\000"
 7045      7900
 7046              	.LASF1:
 7047 0572 756E7369 		.ascii	"unsigned char\000"
 7047      676E6564 
 7047      20636861 
 7047      7200
 7048              	.LASF95:
 7049 0580 6C696E65 		.ascii	"line\000"
 7049      00
 7050              	.LASF37:
 7051 0585 66616C73 		.ascii	"false\000"
 7051      6500
 7052              	.LASF78:
 7053 058b 74735F65 		.ascii	"ts_enc\000"
 7053      6E6300
 7054              	.LASF85:
 7055 0592 666C6167 		.ascii	"flag_ts_display\000"
 7055      5F74735F 
 7055      64697370 
 7055      6C617900 
 7056              	.LASF107:
 7057 05a2 64617461 		.ascii	"datastring\000"
 7057      73747269 
 7057      6E6700
 7058              	.LASF71:
 7059 05ad 73746F70 		.ascii	"stopAfterX\000"
 7059      41667465 
 7059      725800
 7060              	.LASF146:
 7061 05b8 73656E73 		.ascii	"sensorLogic0\000"
 7061      6F724C6F 
 7061      67696330 
 7061      00
 7062              	.LASF147:
 7063 05c5 73656E73 		.ascii	"sensorLogic1\000"
 7063      6F724C6F 
 7063      67696331 
 7063      00
 7064              	.LASF148:
 7065 05d2 73656E73 		.ascii	"sensorLogic2\000"
 7065      6F724C6F 
 7065      67696332 
 7065      00
 7066              	.LASF94:
 7067 05df 64697370 		.ascii	"displaystring\000"
 7067      6C617973 
 7067      7472696E 
 7067      6700
 7068              	.LASF150:
 7069 05ed 73656E73 		.ascii	"sensorLogic4\000"
 7069      6F724C6F 
 7069      67696334 
 7069      00
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 153


 7070              	.LASF151:
 7071 05fa 73656E73 		.ascii	"sensorLogic5\000"
 7071      6F724C6F 
 7071      67696335 
 7071      00
 7072              	.LASF152:
 7073 0607 73656E73 		.ascii	"sensorLogic6\000"
 7073      6F724C6F 
 7073      67696336 
 7073      00
 7074              	.LASF103:
 7075 0614 52465374 		.ascii	"RFStopValue\000"
 7075      6F705661 
 7075      6C756500 
 7076              	.LASF117:
 7077 0620 66697273 		.ascii	"firstCounter\000"
 7077      74436F75 
 7077      6E746572 
 7077      00
 7078              	.LASF74:
 7079 062d 75736250 		.ascii	"usbPutChar\000"
 7079      75744368 
 7079      617200
 7080              	.LASF0:
 7081 0638 7369676E 		.ascii	"signed char\000"
 7081      65642063 
 7081      68617200 
 7082              	.LASF116:
 7083 0644 726F626F 		.ascii	"robotLocation\000"
 7083      744C6F63 
 7083      6174696F 
 7083      6E00
 7084              	.LASF99:
 7085 0652 50574D50 		.ascii	"PWMPower\000"
 7085      6F776572 
 7085      00
 7086              	.LASF3:
 7087 065b 73686F72 		.ascii	"short unsigned int\000"
 7087      7420756E 
 7087      7369676E 
 7087      65642069 
 7087      6E7400
 7088              	.LASF23:
 7089 066e 726F626F 		.ascii	"robot_orientation\000"
 7089      745F6F72 
 7089      69656E74 
 7089      6174696F 
 7089      6E00
 7090              	.LASF157:
 7091 0680 6D61696E 		.ascii	"main\000"
 7091      00
 7092              	.LASF41:
 7093 0685 74656368 		.ascii	"techTest2RF\000"
 7093      54657374 
 7093      32524600 
 7094              	.LASF63:
 7095 0691 67657453 		.ascii	"getSpeed\000"
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 154


 7095      70656564 
 7095      00
 7096              	.LASF49:
 7097 069a 72656164 		.ascii	"readADC0\000"
 7097      41444330 
 7097      00
 7098              	.LASF50:
 7099 06a3 72656164 		.ascii	"readADC1\000"
 7099      41444331 
 7099      00
 7100              	.LASF51:
 7101 06ac 72656164 		.ascii	"readADC2\000"
 7101      41444332 
 7101      00
 7102              	.LASF52:
 7103 06b5 72656164 		.ascii	"readADC3\000"
 7103      41444333 
 7103      00
 7104              	.LASF53:
 7105 06be 72656164 		.ascii	"readADC4\000"
 7105      41444334 
 7105      00
 7106              	.LASF54:
 7107 06c7 72656164 		.ascii	"readADC5\000"
 7107      41444335 
 7107      00
 7108              	.LASF55:
 7109 06d0 72656164 		.ascii	"readADC6\000"
 7109      41444336 
 7109      00
 7110              	.LASF110:
 7111 06d9 61736369 		.ascii	"asciiValue\000"
 7111      6956616C 
 7111      756500
 7112              	.LASF13:
 7113 06e4 75696E74 		.ascii	"uint8\000"
 7113      3800
 7114              	.LASF18:
 7115 06ea 646F7562 		.ascii	"double\000"
 7115      6C6500
 7116              	.LASF91:
 7117 06f1 74696D65 		.ascii	"timerOverflow_flag\000"
 7117      724F7665 
 7117      72666C6F 
 7117      775F666C 
 7117      616700
 7118              	.LASF24:
 7119 0704 67305F78 		.ascii	"g0_xpos\000"
 7119      706F7300 
 7120              	.LASF105:
 7121 070c 72786461 		.ascii	"rxdata\000"
 7121      746100
 7122              	.LASF89:
 7123 0713 666C6167 		.ascii	"flag_KB_string\000"
 7123      5F4B425F 
 7123      73747269 
 7123      6E6700
ARM GAS  C:\Users\patel\AppData\Local\Temp\ccs0l0Rr.s 			page 155


 7124              	.LASF30:
 7125 0722 67315F73 		.ascii	"g1_speed\000"
 7125      70656564 
 7125      00
 7126              	.LASF104:
 7127 072b 73706565 		.ascii	"speedFlag\000"
 7127      64466C61 
 7127      6700
 7128              	.LASF60:
 7129 0735 51756164 		.ascii	"Quad2Reading\000"
 7129      32526561 
 7129      64696E67 
 7129      00
 7130              	.LASF65:
 7131 0742 71756164 		.ascii	"quadDifference\000"
 7131      44696666 
 7131      6572656E 
 7131      636500
 7132              	.LASF154:
 7133 0751 2E5C6D61 		.ascii	".\\main.c\000"
 7133      696E2E63 
 7133      00
 7134              	.LASF149:
 7135 075a 73656E73 		.ascii	"sensorLogic3\000"
 7135      6F724C6F 
 7135      67696333 
 7135      00
 7136              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
